Terminals unused in grammar

    TO
    DOWNTO
    ENDL
    READ
    READLN
    BEG
    END
    THEN
    VAR
    LISTCONTENT
    VALUE
    STRINGQUOTE
    COLON
    AMPERSAND


Grammar

    0 $accept: S $end

    1 S: cabecera preprograma

    2 comment: COMMENTLINE
    3        | MULTILINE

    4 cabecera: PROGRAM LOWER STRINGV HIGHER
    5         | PROGRAM LOWER STRINGV DOT STRINGV HIGHER
    6         | PROGRAM QUOTESTRING
    7         | PROGRAM LOWER STRINGV HIGHER cabecera
    8         | PROGRAM LOWER STRINGV DOT STRINGV HIGHER cabecera
    9         | PROGRAM QUOTESTRING cabecera

   10 constdef: DEFINE STRINGV values
   11         | CONST type STRINGV EQ values SEMICOLON

   12 vardef: type STRINGV SEMICOLON
   13       | type STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type STRINGV EQ exp SEMICOLON
   15       | type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type STRINGV COMMA vardef
   20       | type STRINGV EQ exp COMMA vardef
   21       | STRINGV operand vardef
   22       | STRINGV COMMA vardef
   23       | atom SEMICOLON
   24       | STRINGV EQ exp SEMICOLON

   25 type: INTEGER
   26     | SHORT
   27     | LONG
   28     | UNSIGNED_INT
   29     | UNSIGNED_SHORT
   30     | UNSIGNED_LONG
   31     | FLOAT
   32     | DOUBLE
   33     | STRING
   34     | CHAR
   35     | BOOLEAN
   36     | VOID
   37     | STRUCT STRINGV

   38 values: TRUEVAL
   39       | FALSEVAL
   40       | INTNUM
   41       | REALNUM
   42       | QUOTESTRING

   43 preprograma: preprograma programa
   44            | programa

   45 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type STRINGV LPAREN RPAREN SEMICOLON
   48         | vardef programa
   49         | STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON
   50         | constdef programa
   51         | comment

   52 args: type STRINGV COMMA args
   53     | type STRINGV
   54     | type PROD STRINGV COMMA args
   55     | type PROD STRINGV

   56 lines_program: lines_program line_program
   57              | line_program

   58 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON
   59             | PRINTF LPAREN precontentWrite RPAREN SEMICOLON
   60             | SCANF LPAREN precontentWrite RPAREN SEMICOLON
   61             | STRINGV LPAREN array RPAREN SEMICOLON
   62             | STRINGV LPAREN RPAREN SEMICOLON
   63             | IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   64             | ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   66             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   68             | DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   69             | WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   70             | comment
   71             | STRINGV operand SEMICOLON
   72             | RETURN exp SEMICOLON
   73             | RETURN SEMICOLON
   74             | vardef
   75             | STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

   76 array: exp COMMA array
   77      | exp

   78 precontentWrite: contentWrite

   79 contentWrite: contentWrite COMMA exp
   80             | QUOTESTRING
   81             | STRINGV

   82 exp: exp operand term
   83    | term

   84 term: atom
   85     | LPAREN exp RPAREN
   86     | EX exp

   87 operand: PLUS
   88        | PLUS EQ
   89        | HYPHEN
   90        | HYPHEN EQ
   91        | HYPHEN HIGHER
   92        | PROD
   93        | DIV
   94        | DIVINT
   95        | MOD
   96        | LOWER
   97        | HIGHER
   98        | LOWER EQ
   99        | HIGHER EQ
  100        | EQ EQ
  101        | AND
  102        | PLUS PLUS
  103        | OR
  104        | DOT

  105 atom: STRINGV
  106     | values
  107     | STRINGV LSQUAREPAREN atom RSQUAREPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHILE (258) 68 69
    FOR (259) 66 67
    DO (260) 68
    TO (261)
    DOWNTO (262)
    WRITE (263) 58
    ENDL (264)
    READ (265)
    READLN (266)
    PROGRAM (267) 4 5 6 7 8 9
    BEG (268)
    END (269)
    IF (270) 63 64
    THEN (271)
    ELSE (272) 64 65
    AND (273) 101
    OR (274) 103
    LOWER (275) 4 5 7 8 58 96 98
    HIGHER (276) 4 5 7 8 91 97 99
    PLUS <valString> (277) 87 88 102
    HYPHEN <valString> (278) 89 90 91
    PROD (279) 54 55 92
    DIV (280) 93
    DIVINT (281) 94
    MOD (282) 95
    COMMA (283) 19 20 22 52 54 76 79
    DOT (284) 5 8 104
    EQ <valString> (285) 11 14 15 16 17 18 20 24 66 67 88 90 98 99 100
    COMMENTLINE <valString> (286) 2
    MULTILINE <valString> (287) 3
    VAR (288)
    CONST (289) 11
    DEFINE (290) 10
    LISTCONTENT (291)
    VALUE (292)
    LPAREN (293) 17 18 45 46 47 59 60 61 62 63 64 66 67 68 69 85
    STRINGQUOTE (294)
    RPAREN (295) 17 18 45 46 47 59 60 61 62 63 64 66 67 68 69 85
    RSQUAREPAREN (296) 13 15 16 107
    LSQUAREPAREN (297) 13 15 16 107
    COLON (298)
    SEMICOLON <valString> (299) 11 12 13 14 15 16 17 18 23 24 47 49 58 59 60 61 62 66 67 68 71 72 73 75
    INTEGER (300) 25
    SHORT (301) 26
    LONG (302) 27
    UNSIGNED_INT (303) 28
    UNSIGNED_SHORT (304) 29
    UNSIGNED_LONG (305) 30
    FLOAT (306) 31
    DOUBLE (307) 32
    VOID (308) 36
    OPENCURLYBRACKET (309) 15 45 46 49 63 64 65 66 67 68 69 75
    CLOSECURLYBRACKET (310) 15 45 46 49 63 64 65 66 67 68 69 75
    BOOLEAN (311) 35
    CHAR (312) 34
    PRINTF (313) 59
    SCANF (314) 60
    STRING <valString> (315) 33
    STRINGV <valString> (316) 4 5 7 8 10 11 12 13 14 15 16 17 18 19 20 21 22 24 37 45 46 47 49 52 53 54 55 61 62 66 67 71 75 81 105 107
    QUOTESTRING <valString> (317) 6 9 42 80
    TRUEVAL <valString> (318) 38
    FALSEVAL <valString> (319) 39
    INTNUM <valString> (320) 40 66 67
    REALNUM <valString> (321) 41
    RETURN (322) 72 73
    STRUCT (323) 37 49 75
    AMPERSAND (324)
    EX (325) 86


Nonterminals, with rules where they appear

    $accept (71)
        on left: 0
    S (72)
        on left: 1
        on right: 0
    comment <valString> (73)
        on left: 2 3
        on right: 51 70
    cabecera <valString> (74)
        on left: 4 5 6 7 8 9
        on right: 1 7 8 9
    constdef <valString> (75)
        on left: 10 11
        on right: 50
    vardef <valString> (76)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24
        on right: 19 20 21 22 48 67 74
    type <valInt> (77)
        on left: 25 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 11 12 13 14 15 16 17 18 19 20 45 46 47 52 53 54 55 66 67
    values <valString> (78)
        on left: 38 39 40 41 42
        on right: 10 11 106
    preprograma <valString> (79)
        on left: 43 44
        on right: 1 43
    programa <valString> (80)
        on left: 45 46 47 48 49 50 51
        on right: 43 44 48 50
    args <valString> (81)
        on left: 52 53 54 55
        on right: 45 52 54
    lines_program <valString> (82)
        on left: 56 57
        on right: 45 46 49 56 63 64 66 67 68 69 75
    line_program <valString> (83)
        on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
        on right: 56 57 65
    array <valString> (84)
        on left: 76 77
        on right: 15 17 61 76
    precontentWrite <valString> (85)
        on left: 78
        on right: 58 59 60
    contentWrite <valString> (86)
        on left: 79 80 81
        on right: 78 79
    exp <valString> (87)
        on left: 82 83
        on right: 14 16 20 24 63 64 66 67 68 69 72 76 77 79 82 85 86
    term <valString> (88)
        on left: 84 85 86
        on right: 82 83
    operand <valString> (89)
        on left: 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
        on right: 21 66 71 82
    atom <valString> (90)
        on left: 105 106 107
        on right: 13 15 23 84 107


State 0

    0 $accept: • S $end

    PROGRAM  shift, and go to state 1

    S         go to state 2
    cabecera  go to state 3


State 1

    4 cabecera: PROGRAM • LOWER STRINGV HIGHER
    5         | PROGRAM • LOWER STRINGV DOT STRINGV HIGHER
    6         | PROGRAM • QUOTESTRING
    7         | PROGRAM • LOWER STRINGV HIGHER cabecera
    8         | PROGRAM • LOWER STRINGV DOT STRINGV HIGHER cabecera
    9         | PROGRAM • QUOTESTRING cabecera

    LOWER        shift, and go to state 4
    QUOTESTRING  shift, and go to state 5


State 2

    0 $accept: S • $end

    $end  shift, and go to state 6


State 3

    1 S: cabecera • preprograma

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 29

    comment      go to state 30
    constdef     go to state 31
    vardef       go to state 32
    type         go to state 33
    values       go to state 34
    preprograma  go to state 35
    programa     go to state 36
    atom         go to state 37


State 4

    4 cabecera: PROGRAM LOWER • STRINGV HIGHER
    5         | PROGRAM LOWER • STRINGV DOT STRINGV HIGHER
    7         | PROGRAM LOWER • STRINGV HIGHER cabecera
    8         | PROGRAM LOWER • STRINGV DOT STRINGV HIGHER cabecera

    STRINGV  shift, and go to state 38


State 5

    6 cabecera: PROGRAM QUOTESTRING •
    9         | PROGRAM QUOTESTRING • cabecera

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 6 (cabecera)

    cabecera  go to state 39


State 6

    0 $accept: S $end •

    $default  accept


State 7

    2 comment: COMMENTLINE •

    $default  reduce using rule 2 (comment)


State 8

    3 comment: MULTILINE •

    $default  reduce using rule 3 (comment)


State 9

   11 constdef: CONST • type STRINGV EQ values SEMICOLON

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 40

    type  go to state 41


State 10

   10 constdef: DEFINE • STRINGV values

    STRINGV  shift, and go to state 42


State 11

   25 type: INTEGER •

    $default  reduce using rule 25 (type)


State 12

   26 type: SHORT •

    $default  reduce using rule 26 (type)


State 13

   27 type: LONG •

    $default  reduce using rule 27 (type)


State 14

   28 type: UNSIGNED_INT •

    $default  reduce using rule 28 (type)


State 15

   29 type: UNSIGNED_SHORT •

    $default  reduce using rule 29 (type)


State 16

   30 type: UNSIGNED_LONG •

    $default  reduce using rule 30 (type)


State 17

   31 type: FLOAT •

    $default  reduce using rule 31 (type)


State 18

   32 type: DOUBLE •

    $default  reduce using rule 32 (type)


State 19

   36 type: VOID •

    $default  reduce using rule 36 (type)


State 20

   35 type: BOOLEAN •

    $default  reduce using rule 35 (type)


State 21

   34 type: CHAR •

    $default  reduce using rule 34 (type)


State 22

   33 type: STRING •

    $default  reduce using rule 33 (type)


State 23

   21 vardef: STRINGV • operand vardef
   22       | STRINGV • COMMA vardef
   24       | STRINGV • EQ exp SEMICOLON
  105 atom: STRINGV •
  107     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    AND           shift, and go to state 43
    OR            shift, and go to state 44
    LOWER         shift, and go to state 45
    HIGHER        shift, and go to state 46
    PLUS          shift, and go to state 47
    HYPHEN        shift, and go to state 48
    PROD          shift, and go to state 49
    DIV           shift, and go to state 50
    DIVINT        shift, and go to state 51
    MOD           shift, and go to state 52
    COMMA         shift, and go to state 53
    DOT           shift, and go to state 54
    EQ            shift, and go to state 55
    LSQUAREPAREN  shift, and go to state 56

    $default  reduce using rule 105 (atom)

    operand  go to state 57


State 24

   42 values: QUOTESTRING •

    $default  reduce using rule 42 (values)


State 25

   38 values: TRUEVAL •

    $default  reduce using rule 38 (values)


State 26

   39 values: FALSEVAL •

    $default  reduce using rule 39 (values)


State 27

   40 values: INTNUM •

    $default  reduce using rule 40 (values)


State 28

   41 values: REALNUM •

    $default  reduce using rule 41 (values)


State 29

   37 type: STRUCT • STRINGV
   49 programa: STRUCT • STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    STRINGV  shift, and go to state 58


State 30

   51 programa: comment •

    $default  reduce using rule 51 (programa)


State 31

   50 programa: constdef • programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 29

    comment   go to state 30
    constdef  go to state 31
    vardef    go to state 32
    type      go to state 33
    values    go to state 34
    programa  go to state 59
    atom      go to state 37


State 32

   48 programa: vardef • programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 29

    comment   go to state 30
    constdef  go to state 31
    vardef    go to state 32
    type      go to state 33
    values    go to state 34
    programa  go to state 60
    atom      go to state 37


State 33

   12 vardef: type • STRINGV SEMICOLON
   13       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type • STRINGV EQ exp SEMICOLON
   15       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type • STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type • STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type • STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type • STRINGV COMMA vardef
   20       | type • STRINGV EQ exp COMMA vardef
   45 programa: type • STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type • STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type • STRINGV LPAREN RPAREN SEMICOLON

    STRINGV  shift, and go to state 61


State 34

  106 atom: values •

    $default  reduce using rule 106 (atom)


State 35

    1 S: cabecera preprograma •
   43 preprograma: preprograma • programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 29

    $default  reduce using rule 1 (S)

    comment   go to state 30
    constdef  go to state 31
    vardef    go to state 32
    type      go to state 33
    values    go to state 34
    programa  go to state 62
    atom      go to state 37


State 36

   44 preprograma: programa •

    $default  reduce using rule 44 (preprograma)


State 37

   23 vardef: atom • SEMICOLON

    SEMICOLON  shift, and go to state 63


State 38

    4 cabecera: PROGRAM LOWER STRINGV • HIGHER
    5         | PROGRAM LOWER STRINGV • DOT STRINGV HIGHER
    7         | PROGRAM LOWER STRINGV • HIGHER cabecera
    8         | PROGRAM LOWER STRINGV • DOT STRINGV HIGHER cabecera

    HIGHER  shift, and go to state 64
    DOT     shift, and go to state 65


State 39

    9 cabecera: PROGRAM QUOTESTRING cabecera •

    $default  reduce using rule 9 (cabecera)


State 40

   37 type: STRUCT • STRINGV

    STRINGV  shift, and go to state 66


State 41

   11 constdef: CONST type • STRINGV EQ values SEMICOLON

    STRINGV  shift, and go to state 67


State 42

   10 constdef: DEFINE STRINGV • values

    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28

    values  go to state 68


State 43

  101 operand: AND •

    $default  reduce using rule 101 (operand)


State 44

  103 operand: OR •

    $default  reduce using rule 103 (operand)


State 45

   96 operand: LOWER •
   98        | LOWER • EQ

    EQ  shift, and go to state 69

    $default  reduce using rule 96 (operand)


State 46

   97 operand: HIGHER •
   99        | HIGHER • EQ

    EQ  shift, and go to state 70

    $default  reduce using rule 97 (operand)


State 47

   87 operand: PLUS •
   88        | PLUS • EQ
  102        | PLUS • PLUS

    PLUS  shift, and go to state 71
    EQ    shift, and go to state 72

    $default  reduce using rule 87 (operand)


State 48

   89 operand: HYPHEN •
   90        | HYPHEN • EQ
   91        | HYPHEN • HIGHER

    HIGHER  shift, and go to state 73
    EQ      shift, and go to state 74

    $default  reduce using rule 89 (operand)


State 49

   92 operand: PROD •

    $default  reduce using rule 92 (operand)


State 50

   93 operand: DIV •

    $default  reduce using rule 93 (operand)


State 51

   94 operand: DIVINT •

    $default  reduce using rule 94 (operand)


State 52

   95 operand: MOD •

    $default  reduce using rule 95 (operand)


State 53

   22 vardef: STRINGV COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 40

    vardef  go to state 75
    type    go to state 76
    values  go to state 34
    atom    go to state 37


State 54

  104 operand: DOT •

    $default  reduce using rule 104 (operand)


State 55

   24 vardef: STRINGV EQ • exp SEMICOLON
  100 operand: EQ • EQ

    EQ           shift, and go to state 77
    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 81
    term    go to state 82
    atom    go to state 83


State 56

  107 atom: STRINGV LSQUAREPAREN • atom RSQUAREPAREN

    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28

    values  go to state 34
    atom    go to state 84


State 57

   21 vardef: STRINGV operand • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 40

    vardef  go to state 85
    type    go to state 76
    values  go to state 34
    atom    go to state 37


State 58

   37 type: STRUCT STRINGV •
   49 programa: STRUCT STRINGV • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 86

    $default  reduce using rule 37 (type)


State 59

   50 programa: constdef programa •

    $default  reduce using rule 50 (programa)


State 60

   48 programa: vardef programa •

    $default  reduce using rule 48 (programa)


State 61

   12 vardef: type STRINGV • SEMICOLON
   13       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type STRINGV • EQ exp SEMICOLON
   15       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV • LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type STRINGV • EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV • EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type STRINGV • COMMA vardef
   20       | type STRINGV • EQ exp COMMA vardef
   45 programa: type STRINGV • LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV • LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type STRINGV • LPAREN RPAREN SEMICOLON

    COMMA         shift, and go to state 87
    EQ            shift, and go to state 88
    LPAREN        shift, and go to state 89
    LSQUAREPAREN  shift, and go to state 90
    SEMICOLON     shift, and go to state 91


State 62

   43 preprograma: preprograma programa •

    $default  reduce using rule 43 (preprograma)


State 63

   23 vardef: atom SEMICOLON •

    $default  reduce using rule 23 (vardef)


State 64

    4 cabecera: PROGRAM LOWER STRINGV HIGHER •
    7         | PROGRAM LOWER STRINGV HIGHER • cabecera

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 4 (cabecera)

    cabecera  go to state 92


State 65

    5 cabecera: PROGRAM LOWER STRINGV DOT • STRINGV HIGHER
    8         | PROGRAM LOWER STRINGV DOT • STRINGV HIGHER cabecera

    STRINGV  shift, and go to state 93


State 66

   37 type: STRUCT STRINGV •

    $default  reduce using rule 37 (type)


State 67

   11 constdef: CONST type STRINGV • EQ values SEMICOLON

    EQ  shift, and go to state 94


State 68

   10 constdef: DEFINE STRINGV values •

    $default  reduce using rule 10 (constdef)


State 69

   98 operand: LOWER EQ •

    $default  reduce using rule 98 (operand)


State 70

   99 operand: HIGHER EQ •

    $default  reduce using rule 99 (operand)


State 71

  102 operand: PLUS PLUS •

    $default  reduce using rule 102 (operand)


State 72

   88 operand: PLUS EQ •

    $default  reduce using rule 88 (operand)


State 73

   91 operand: HYPHEN HIGHER •

    $default  reduce using rule 91 (operand)


State 74

   90 operand: HYPHEN EQ •

    $default  reduce using rule 90 (operand)


State 75

   22 vardef: STRINGV COMMA vardef •

    $default  reduce using rule 22 (vardef)


State 76

   12 vardef: type • STRINGV SEMICOLON
   13       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type • STRINGV EQ exp SEMICOLON
   15       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type • STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type • STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type • STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type • STRINGV COMMA vardef
   20       | type • STRINGV EQ exp COMMA vardef

    STRINGV  shift, and go to state 95


State 77

  100 operand: EQ EQ •

    $default  reduce using rule 100 (operand)


State 78

   85 term: LPAREN • exp RPAREN

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 96
    term    go to state 82
    atom    go to state 83


State 79

  105 atom: STRINGV •
  107     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    LSQUAREPAREN  shift, and go to state 56

    $default  reduce using rule 105 (atom)


State 80

   86 term: EX • exp

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 97
    term    go to state 82
    atom    go to state 83


State 81

   24 vardef: STRINGV EQ exp • SEMICOLON
   82 exp: exp • operand term

    AND        shift, and go to state 43
    OR         shift, and go to state 44
    LOWER      shift, and go to state 45
    HIGHER     shift, and go to state 46
    PLUS       shift, and go to state 47
    HYPHEN     shift, and go to state 48
    PROD       shift, and go to state 49
    DIV        shift, and go to state 50
    DIVINT     shift, and go to state 51
    MOD        shift, and go to state 52
    DOT        shift, and go to state 54
    EQ         shift, and go to state 98
    SEMICOLON  shift, and go to state 99

    operand  go to state 100


State 82

   83 exp: term •

    $default  reduce using rule 83 (exp)


State 83

   84 term: atom •

    $default  reduce using rule 84 (term)


State 84

  107 atom: STRINGV LSQUAREPAREN atom • RSQUAREPAREN

    RSQUAREPAREN  shift, and go to state 101


State 85

   21 vardef: STRINGV operand vardef •

    $default  reduce using rule 21 (vardef)


State 86

   49 programa: STRUCT STRINGV OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET SEMICOLON

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 115
    line_program   go to state 116
    atom           go to state 37


State 87

   19 vardef: type STRINGV COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 40

    vardef  go to state 117
    type    go to state 76
    values  go to state 34
    atom    go to state 37


State 88

   14 vardef: type STRINGV EQ • exp SEMICOLON
   17       | type STRINGV EQ • STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV EQ • STRINGV LPAREN RPAREN SEMICOLON
   20       | type STRINGV EQ • exp COMMA vardef

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 118
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 119
    term    go to state 82
    atom    go to state 83


State 89

   45 programa: type STRINGV LPAREN • args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV LPAREN • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type STRINGV LPAREN • RPAREN SEMICOLON

    RPAREN          shift, and go to state 120
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 40

    type  go to state 121
    args  go to state 122


State 90

   13 vardef: type STRINGV LSQUAREPAREN • atom RSQUAREPAREN SEMICOLON
   15       | type STRINGV LSQUAREPAREN • atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV LSQUAREPAREN • RSQUAREPAREN EQ exp SEMICOLON

    RSQUAREPAREN  shift, and go to state 123
    STRINGV       shift, and go to state 79
    QUOTESTRING   shift, and go to state 24
    TRUEVAL       shift, and go to state 25
    FALSEVAL      shift, and go to state 26
    INTNUM        shift, and go to state 27
    REALNUM       shift, and go to state 28

    values  go to state 34
    atom    go to state 124


State 91

   12 vardef: type STRINGV SEMICOLON •

    $default  reduce using rule 12 (vardef)


State 92

    7 cabecera: PROGRAM LOWER STRINGV HIGHER cabecera •

    $default  reduce using rule 7 (cabecera)


State 93

    5 cabecera: PROGRAM LOWER STRINGV DOT STRINGV • HIGHER
    8         | PROGRAM LOWER STRINGV DOT STRINGV • HIGHER cabecera

    HIGHER  shift, and go to state 125


State 94

   11 constdef: CONST type STRINGV EQ • values SEMICOLON

    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28

    values  go to state 126


State 95

   12 vardef: type STRINGV • SEMICOLON
   13       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type STRINGV • EQ exp SEMICOLON
   15       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV • LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type STRINGV • EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV • EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type STRINGV • COMMA vardef
   20       | type STRINGV • EQ exp COMMA vardef

    COMMA         shift, and go to state 87
    EQ            shift, and go to state 88
    LSQUAREPAREN  shift, and go to state 90
    SEMICOLON     shift, and go to state 91


State 96

   82 exp: exp • operand term
   85 term: LPAREN exp • RPAREN

    AND     shift, and go to state 43
    OR      shift, and go to state 44
    LOWER   shift, and go to state 45
    HIGHER  shift, and go to state 46
    PLUS    shift, and go to state 47
    HYPHEN  shift, and go to state 48
    PROD    shift, and go to state 49
    DIV     shift, and go to state 50
    DIVINT  shift, and go to state 51
    MOD     shift, and go to state 52
    DOT     shift, and go to state 54
    EQ      shift, and go to state 98
    RPAREN  shift, and go to state 127

    operand  go to state 100


State 97

   82 exp: exp • operand term
   86 term: EX exp •

    DOT  shift, and go to state 54

    $default  reduce using rule 86 (term)

    operand  go to state 100


State 98

  100 operand: EQ • EQ

    EQ  shift, and go to state 77


State 99

   24 vardef: STRINGV EQ exp SEMICOLON •

    $default  reduce using rule 24 (vardef)


State 100

   82 exp: exp operand • term

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    term    go to state 128
    atom    go to state 83


State 101

  107 atom: STRINGV LSQUAREPAREN atom RSQUAREPAREN •

    $default  reduce using rule 107 (atom)


State 102

   69 line_program: WHILE • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 129


State 103

   66 line_program: FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 130


State 104

   68 line_program: DO • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 131


State 105

   58 line_program: WRITE • LOWER LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 132


State 106

   63 line_program: IF • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 133


State 107

   64 line_program: ELSE • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | ELSE • OPENCURLYBRACKET line_program CLOSECURLYBRACKET

    IF                shift, and go to state 134
    OPENCURLYBRACKET  shift, and go to state 135


State 108

   59 line_program: PRINTF • LPAREN precontentWrite RPAREN SEMICOLON

    LPAREN  shift, and go to state 136


State 109

   60 line_program: SCANF • LPAREN precontentWrite RPAREN SEMICOLON

    LPAREN  shift, and go to state 137


State 110

   21 vardef: STRINGV • operand vardef
   22       | STRINGV • COMMA vardef
   24       | STRINGV • EQ exp SEMICOLON
   61 line_program: STRINGV • LPAREN array RPAREN SEMICOLON
   62             | STRINGV • LPAREN RPAREN SEMICOLON
   71             | STRINGV • operand SEMICOLON
  105 atom: STRINGV •
  107     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    AND           shift, and go to state 43
    OR            shift, and go to state 44
    LOWER         shift, and go to state 45
    HIGHER        shift, and go to state 46
    PLUS          shift, and go to state 47
    HYPHEN        shift, and go to state 48
    PROD          shift, and go to state 49
    DIV           shift, and go to state 50
    DIVINT        shift, and go to state 51
    MOD           shift, and go to state 52
    COMMA         shift, and go to state 53
    DOT           shift, and go to state 54
    EQ            shift, and go to state 55
    LPAREN        shift, and go to state 138
    LSQUAREPAREN  shift, and go to state 56

    $default  reduce using rule 105 (atom)

    operand  go to state 139


State 111

   72 line_program: RETURN • exp SEMICOLON
   73             | RETURN • SEMICOLON

    LPAREN       shift, and go to state 78
    SEMICOLON    shift, and go to state 140
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 141
    term    go to state 82
    atom    go to state 83


State 112

   37 type: STRUCT • STRINGV
   75 line_program: STRUCT • STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    STRINGV  shift, and go to state 142


State 113

   70 line_program: comment •

    $default  reduce using rule 70 (line_program)


State 114

   74 line_program: vardef •

    $default  reduce using rule 74 (line_program)


State 115

   49 programa: STRUCT STRINGV OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET SEMICOLON
   56 lines_program: lines_program • line_program

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 143
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 116

   57 lines_program: line_program •

    $default  reduce using rule 57 (lines_program)


State 117

   19 vardef: type STRINGV COMMA vardef •

    $default  reduce using rule 19 (vardef)


State 118

   17 vardef: type STRINGV EQ STRINGV • LPAREN array RPAREN SEMICOLON
   18       | type STRINGV EQ STRINGV • LPAREN RPAREN SEMICOLON
  105 atom: STRINGV •
  107     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    LPAREN        shift, and go to state 145
    LSQUAREPAREN  shift, and go to state 56

    $default  reduce using rule 105 (atom)


State 119

   14 vardef: type STRINGV EQ exp • SEMICOLON
   20       | type STRINGV EQ exp • COMMA vardef
   82 exp: exp • operand term

    AND        shift, and go to state 43
    OR         shift, and go to state 44
    LOWER      shift, and go to state 45
    HIGHER     shift, and go to state 46
    PLUS       shift, and go to state 47
    HYPHEN     shift, and go to state 48
    PROD       shift, and go to state 49
    DIV        shift, and go to state 50
    DIVINT     shift, and go to state 51
    MOD        shift, and go to state 52
    COMMA      shift, and go to state 146
    DOT        shift, and go to state 54
    EQ         shift, and go to state 98
    SEMICOLON  shift, and go to state 147

    operand  go to state 100


State 120

   46 programa: type STRINGV LPAREN RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type STRINGV LPAREN RPAREN • SEMICOLON

    SEMICOLON         shift, and go to state 148
    OPENCURLYBRACKET  shift, and go to state 149


State 121

   52 args: type • STRINGV COMMA args
   53     | type • STRINGV
   54     | type • PROD STRINGV COMMA args
   55     | type • PROD STRINGV

    PROD     shift, and go to state 150
    STRINGV  shift, and go to state 151


State 122

   45 programa: type STRINGV LPAREN args • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 152


State 123

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN • EQ exp SEMICOLON

    EQ  shift, and go to state 153


State 124

   13 vardef: type STRINGV LSQUAREPAREN atom • RSQUAREPAREN SEMICOLON
   15       | type STRINGV LSQUAREPAREN atom • RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    RSQUAREPAREN  shift, and go to state 154


State 125

    5 cabecera: PROGRAM LOWER STRINGV DOT STRINGV HIGHER •
    8         | PROGRAM LOWER STRINGV DOT STRINGV HIGHER • cabecera

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 5 (cabecera)

    cabecera  go to state 155


State 126

   11 constdef: CONST type STRINGV EQ values • SEMICOLON

    SEMICOLON  shift, and go to state 156


State 127

   85 term: LPAREN exp RPAREN •

    $default  reduce using rule 85 (term)


State 128

   82 exp: exp operand term •

    $default  reduce using rule 82 (exp)


State 129

   69 line_program: WHILE LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 157
    term    go to state 82
    atom    go to state 83


State 130

   66 line_program: FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 40

    type  go to state 158


State 131

   68 line_program: DO OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 159
    line_program   go to state 116
    atom           go to state 37


State 132

   58 line_program: WRITE LOWER • LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 160


State 133

   63 line_program: IF LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 161
    term    go to state 82
    atom    go to state 83


State 134

   64 line_program: ELSE IF • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 162


State 135

   65 line_program: ELSE OPENCURLYBRACKET • line_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 163
    atom          go to state 37


State 136

   59 line_program: PRINTF LPAREN • precontentWrite RPAREN SEMICOLON

    STRINGV      shift, and go to state 164
    QUOTESTRING  shift, and go to state 165

    precontentWrite  go to state 166
    contentWrite     go to state 167


State 137

   60 line_program: SCANF LPAREN • precontentWrite RPAREN SEMICOLON

    STRINGV      shift, and go to state 164
    QUOTESTRING  shift, and go to state 165

    precontentWrite  go to state 168
    contentWrite     go to state 167


State 138

   61 line_program: STRINGV LPAREN • array RPAREN SEMICOLON
   62             | STRINGV LPAREN • RPAREN SEMICOLON

    LPAREN       shift, and go to state 78
    RPAREN       shift, and go to state 169
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    array   go to state 170
    exp     go to state 171
    term    go to state 82
    atom    go to state 83


State 139

   21 vardef: STRINGV operand • vardef
   71 line_program: STRINGV operand • SEMICOLON

    SEMICOLON       shift, and go to state 172
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 40

    vardef  go to state 85
    type    go to state 76
    values  go to state 34
    atom    go to state 37


State 140

   73 line_program: RETURN SEMICOLON •

    $default  reduce using rule 73 (line_program)


State 141

   72 line_program: RETURN exp • SEMICOLON
   82 exp: exp • operand term

    AND        shift, and go to state 43
    OR         shift, and go to state 44
    LOWER      shift, and go to state 45
    HIGHER     shift, and go to state 46
    PLUS       shift, and go to state 47
    HYPHEN     shift, and go to state 48
    PROD       shift, and go to state 49
    DIV        shift, and go to state 50
    DIVINT     shift, and go to state 51
    MOD        shift, and go to state 52
    DOT        shift, and go to state 54
    EQ         shift, and go to state 98
    SEMICOLON  shift, and go to state 173

    operand  go to state 100


State 142

   37 type: STRUCT STRINGV •
   75 line_program: STRUCT STRINGV • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 174

    $default  reduce using rule 37 (type)


State 143

   49 programa: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 175


State 144

   56 lines_program: lines_program line_program •

    $default  reduce using rule 56 (lines_program)


State 145

   17 vardef: type STRINGV EQ STRINGV LPAREN • array RPAREN SEMICOLON
   18       | type STRINGV EQ STRINGV LPAREN • RPAREN SEMICOLON

    LPAREN       shift, and go to state 78
    RPAREN       shift, and go to state 176
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    array   go to state 177
    exp     go to state 171
    term    go to state 82
    atom    go to state 83


State 146

   20 vardef: type STRINGV EQ exp COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 40

    vardef  go to state 178
    type    go to state 76
    values  go to state 34
    atom    go to state 37


State 147

   14 vardef: type STRINGV EQ exp SEMICOLON •

    $default  reduce using rule 14 (vardef)


State 148

   47 programa: type STRINGV LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 47 (programa)


State 149

   46 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 179
    line_program   go to state 116
    atom           go to state 37


State 150

   54 args: type PROD • STRINGV COMMA args
   55     | type PROD • STRINGV

    STRINGV  shift, and go to state 180


State 151

   52 args: type STRINGV • COMMA args
   53     | type STRINGV •

    COMMA  shift, and go to state 181

    $default  reduce using rule 53 (args)


State 152

   45 programa: type STRINGV LPAREN args RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 182


State 153

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN EQ • exp SEMICOLON

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 183
    term    go to state 82
    atom    go to state 83


State 154

   13 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN • SEMICOLON
   15       | type STRINGV LSQUAREPAREN atom RSQUAREPAREN • EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    EQ         shift, and go to state 184
    SEMICOLON  shift, and go to state 185


State 155

    8 cabecera: PROGRAM LOWER STRINGV DOT STRINGV HIGHER cabecera •

    $default  reduce using rule 8 (cabecera)


State 156

   11 constdef: CONST type STRINGV EQ values SEMICOLON •

    $default  reduce using rule 11 (constdef)


State 157

   69 line_program: WHILE LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   82 exp: exp • operand term

    AND     shift, and go to state 43
    OR      shift, and go to state 44
    LOWER   shift, and go to state 45
    HIGHER  shift, and go to state 46
    PLUS    shift, and go to state 47
    HYPHEN  shift, and go to state 48
    PROD    shift, and go to state 49
    DIV     shift, and go to state 50
    DIVINT  shift, and go to state 51
    MOD     shift, and go to state 52
    DOT     shift, and go to state 54
    EQ      shift, and go to state 98
    RPAREN  shift, and go to state 186

    operand  go to state 100


State 158

   66 line_program: FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    STRINGV  shift, and go to state 187


State 159

   56 lines_program: lines_program • line_program
   68 line_program: DO OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 188
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 160

   58 line_program: WRITE LOWER LOWER • precontentWrite SEMICOLON

    STRINGV      shift, and go to state 164
    QUOTESTRING  shift, and go to state 165

    precontentWrite  go to state 189
    contentWrite     go to state 167


State 161

   63 line_program: IF LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   82 exp: exp • operand term

    AND     shift, and go to state 43
    OR      shift, and go to state 44
    LOWER   shift, and go to state 45
    HIGHER  shift, and go to state 46
    PLUS    shift, and go to state 47
    HYPHEN  shift, and go to state 48
    PROD    shift, and go to state 49
    DIV     shift, and go to state 50
    DIVINT  shift, and go to state 51
    MOD     shift, and go to state 52
    DOT     shift, and go to state 54
    EQ      shift, and go to state 98
    RPAREN  shift, and go to state 190

    operand  go to state 100


State 162

   64 line_program: ELSE IF LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 191
    term    go to state 82
    atom    go to state 83


State 163

   65 line_program: ELSE OPENCURLYBRACKET line_program • CLOSECURLYBRACKET

    CLOSECURLYBRACKET  shift, and go to state 192


State 164

   81 contentWrite: STRINGV •

    $default  reduce using rule 81 (contentWrite)


State 165

   80 contentWrite: QUOTESTRING •

    $default  reduce using rule 80 (contentWrite)


State 166

   59 line_program: PRINTF LPAREN precontentWrite • RPAREN SEMICOLON

    RPAREN  shift, and go to state 193


State 167

   78 precontentWrite: contentWrite •
   79 contentWrite: contentWrite • COMMA exp

    COMMA  shift, and go to state 194

    $default  reduce using rule 78 (precontentWrite)


State 168

   60 line_program: SCANF LPAREN precontentWrite • RPAREN SEMICOLON

    RPAREN  shift, and go to state 195


State 169

   62 line_program: STRINGV LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 196


State 170

   61 line_program: STRINGV LPAREN array • RPAREN SEMICOLON

    RPAREN  shift, and go to state 197


State 171

   76 array: exp • COMMA array
   77      | exp •
   82 exp: exp • operand term

    AND     shift, and go to state 43
    OR      shift, and go to state 44
    LOWER   shift, and go to state 45
    HIGHER  shift, and go to state 46
    PLUS    shift, and go to state 47
    HYPHEN  shift, and go to state 48
    PROD    shift, and go to state 49
    DIV     shift, and go to state 50
    DIVINT  shift, and go to state 51
    MOD     shift, and go to state 52
    COMMA   shift, and go to state 198
    DOT     shift, and go to state 54
    EQ      shift, and go to state 98

    $default  reduce using rule 77 (array)

    operand  go to state 100


State 172

   71 line_program: STRINGV operand SEMICOLON •

    $default  reduce using rule 71 (line_program)


State 173

   72 line_program: RETURN exp SEMICOLON •

    $default  reduce using rule 72 (line_program)


State 174

   75 line_program: STRUCT STRINGV OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET SEMICOLON

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 199
    line_program   go to state 116
    atom           go to state 37


State 175

   49 programa: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 49 (programa)


State 176

   18 vardef: type STRINGV EQ STRINGV LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 200


State 177

   17 vardef: type STRINGV EQ STRINGV LPAREN array • RPAREN SEMICOLON

    RPAREN  shift, and go to state 201


State 178

   20 vardef: type STRINGV EQ exp COMMA vardef •

    $default  reduce using rule 20 (vardef)


State 179

   46 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   56 lines_program: lines_program • line_program

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 202
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 180

   54 args: type PROD STRINGV • COMMA args
   55     | type PROD STRINGV •

    COMMA  shift, and go to state 203

    $default  reduce using rule 55 (args)


State 181

   52 args: type STRINGV COMMA • args

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 40

    type  go to state 121
    args  go to state 204


State 182

   45 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 205
    line_program   go to state 116
    atom           go to state 37


State 183

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp • SEMICOLON
   82 exp: exp • operand term

    AND        shift, and go to state 43
    OR         shift, and go to state 44
    LOWER      shift, and go to state 45
    HIGHER     shift, and go to state 46
    PLUS       shift, and go to state 47
    HYPHEN     shift, and go to state 48
    PROD       shift, and go to state 49
    DIV        shift, and go to state 50
    DIVINT     shift, and go to state 51
    MOD        shift, and go to state 52
    DOT        shift, and go to state 54
    EQ         shift, and go to state 98
    SEMICOLON  shift, and go to state 206

    operand  go to state 100


State 184

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ • OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 207


State 185

   13 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON •

    $default  reduce using rule 13 (vardef)


State 186

   69 line_program: WHILE LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 208


State 187

   66 line_program: FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    EQ  shift, and go to state 209


State 188

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • WHILE LPAREN exp RPAREN SEMICOLON

    WHILE  shift, and go to state 210


State 189

   58 line_program: WRITE LOWER LOWER precontentWrite • SEMICOLON

    SEMICOLON  shift, and go to state 211


State 190

   63 line_program: IF LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 212


State 191

   64 line_program: ELSE IF LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   82 exp: exp • operand term

    AND     shift, and go to state 43
    OR      shift, and go to state 44
    LOWER   shift, and go to state 45
    HIGHER  shift, and go to state 46
    PLUS    shift, and go to state 47
    HYPHEN  shift, and go to state 48
    PROD    shift, and go to state 49
    DIV     shift, and go to state 50
    DIVINT  shift, and go to state 51
    MOD     shift, and go to state 52
    DOT     shift, and go to state 54
    EQ      shift, and go to state 98
    RPAREN  shift, and go to state 213

    operand  go to state 100


State 192

   65 line_program: ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET •

    $default  reduce using rule 65 (line_program)


State 193

   59 line_program: PRINTF LPAREN precontentWrite RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 214


State 194

   79 contentWrite: contentWrite COMMA • exp

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 215
    term    go to state 82
    atom    go to state 83


State 195

   60 line_program: SCANF LPAREN precontentWrite RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 216


State 196

   62 line_program: STRINGV LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 62 (line_program)


State 197

   61 line_program: STRINGV LPAREN array RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 217


State 198

   76 array: exp COMMA • array

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    array   go to state 218
    exp     go to state 171
    term    go to state 82
    atom    go to state 83


State 199

   56 lines_program: lines_program • line_program
   75 line_program: STRUCT STRINGV OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET SEMICOLON

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 219
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 200

   18 vardef: type STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 18 (vardef)


State 201

   17 vardef: type STRINGV EQ STRINGV LPAREN array RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 220


State 202

   46 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 46 (programa)


State 203

   54 args: type PROD STRINGV COMMA • args

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 40

    type  go to state 121
    args  go to state 221


State 204

   52 args: type STRINGV COMMA args •

    $default  reduce using rule 52 (args)


State 205

   45 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   56 lines_program: lines_program • line_program

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 222
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 206

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON •

    $default  reduce using rule 16 (vardef)


State 207

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET • array CLOSECURLYBRACKET SEMICOLON

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    array   go to state 223
    exp     go to state 171
    term    go to state 82
    atom    go to state 83


State 208

   69 line_program: WHILE LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 224
    line_program   go to state 116
    atom           go to state 37


State 209

   66 line_program: FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTNUM  shift, and go to state 225


State 210

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE • LPAREN exp RPAREN SEMICOLON

    LPAREN  shift, and go to state 226


State 211

   58 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON •

    $default  reduce using rule 58 (line_program)


State 212

   63 line_program: IF LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 227
    line_program   go to state 116
    atom           go to state 37


State 213

   64 line_program: ELSE IF LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 228


State 214

   59 line_program: PRINTF LPAREN precontentWrite RPAREN SEMICOLON •

    $default  reduce using rule 59 (line_program)


State 215

   79 contentWrite: contentWrite COMMA exp •
   82 exp: exp • operand term

    AND     shift, and go to state 43
    OR      shift, and go to state 44
    LOWER   shift, and go to state 45
    HIGHER  shift, and go to state 46
    PLUS    shift, and go to state 47
    HYPHEN  shift, and go to state 48
    PROD    shift, and go to state 49
    DIV     shift, and go to state 50
    DIVINT  shift, and go to state 51
    MOD     shift, and go to state 52
    DOT     shift, and go to state 54
    EQ      shift, and go to state 98

    $default  reduce using rule 79 (contentWrite)

    operand  go to state 100


State 216

   60 line_program: SCANF LPAREN precontentWrite RPAREN SEMICOLON •

    $default  reduce using rule 60 (line_program)


State 217

   61 line_program: STRINGV LPAREN array RPAREN SEMICOLON •

    $default  reduce using rule 61 (line_program)


State 218

   76 array: exp COMMA array •

    $default  reduce using rule 76 (array)


State 219

   75 line_program: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 229


State 220

   17 vardef: type STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON •

    $default  reduce using rule 17 (vardef)


State 221

   54 args: type PROD STRINGV COMMA args •

    $default  reduce using rule 54 (args)


State 222

   45 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 45 (programa)


State 223

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array • CLOSECURLYBRACKET SEMICOLON

    CLOSECURLYBRACKET  shift, and go to state 230


State 224

   56 lines_program: lines_program • line_program
   69 line_program: WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 231
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 225

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    SEMICOLON  shift, and go to state 232


State 226

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN • exp RPAREN SEMICOLON

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 233
    term    go to state 82
    atom    go to state 83


State 227

   56 lines_program: lines_program • line_program
   63 line_program: IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 234
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 228

   64 line_program: ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 235
    line_program   go to state 116
    atom           go to state 37


State 229

   75 line_program: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 75 (line_program)


State 230

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 236


State 231

   69 line_program: WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 69 (line_program)


State 232

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN       shift, and go to state 78
    STRINGV      shift, and go to state 79
    QUOTESTRING  shift, and go to state 24
    TRUEVAL      shift, and go to state 25
    FALSEVAL     shift, and go to state 26
    INTNUM       shift, and go to state 27
    REALNUM      shift, and go to state 28
    EX           shift, and go to state 80

    values  go to state 34
    exp     go to state 237
    term    go to state 82
    atom    go to state 83


State 233

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp • RPAREN SEMICOLON
   82 exp: exp • operand term

    AND     shift, and go to state 43
    OR      shift, and go to state 44
    LOWER   shift, and go to state 45
    HIGHER  shift, and go to state 46
    PLUS    shift, and go to state 47
    HYPHEN  shift, and go to state 48
    PROD    shift, and go to state 49
    DIV     shift, and go to state 50
    DIVINT  shift, and go to state 51
    MOD     shift, and go to state 52
    DOT     shift, and go to state 54
    EQ      shift, and go to state 98
    RPAREN  shift, and go to state 238

    operand  go to state 100


State 234

   63 line_program: IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 63 (line_program)


State 235

   56 lines_program: lines_program • line_program
   64 line_program: ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 239
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 236

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 15 (vardef)


State 237

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp • SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp • SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   82 exp: exp • operand term

    AND        shift, and go to state 43
    OR         shift, and go to state 44
    LOWER      shift, and go to state 45
    HIGHER     shift, and go to state 46
    PLUS       shift, and go to state 47
    HYPHEN     shift, and go to state 48
    PROD       shift, and go to state 49
    DIV        shift, and go to state 50
    DIVINT     shift, and go to state 51
    MOD        shift, and go to state 52
    DOT        shift, and go to state 54
    EQ         shift, and go to state 98
    SEMICOLON  shift, and go to state 240

    operand  go to state 100


State 238

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 241


State 239

   64 line_program: ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 64 (line_program)


State 240

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON • STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON • vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 242
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 40

    vardef  go to state 243
    type    go to state 76
    values  go to state 34
    atom    go to state 37


State 241

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON •

    $default  reduce using rule 68 (line_program)


State 242

   21 vardef: STRINGV • operand vardef
   22       | STRINGV • COMMA vardef
   24       | STRINGV • EQ exp SEMICOLON
   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV • operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
  105 atom: STRINGV •
  107     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    AND           shift, and go to state 43
    OR            shift, and go to state 44
    LOWER         shift, and go to state 45
    HIGHER        shift, and go to state 46
    PLUS          shift, and go to state 47
    HYPHEN        shift, and go to state 48
    PROD          shift, and go to state 49
    DIV           shift, and go to state 50
    DIVINT        shift, and go to state 51
    MOD           shift, and go to state 52
    COMMA         shift, and go to state 53
    DOT           shift, and go to state 54
    EQ            shift, and go to state 55
    LSQUAREPAREN  shift, and go to state 56

    $default  reduce using rule 105 (atom)

    operand  go to state 244


State 243

   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 245


State 244

   21 vardef: STRINGV operand • vardef
   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN          shift, and go to state 246
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    STRUCT          shift, and go to state 40

    vardef  go to state 85
    type    go to state 76
    values  go to state 34
    atom    go to state 37


State 245

   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 247


State 246

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 248


State 247

   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 249
    line_program   go to state 116
    atom           go to state 37


State 248

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 24
    TRUEVAL         shift, and go to state 25
    FALSEVAL        shift, and go to state 26
    INTNUM          shift, and go to state 27
    REALNUM         shift, and go to state 28
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112

    comment        go to state 113
    vardef         go to state 114
    type           go to state 76
    values         go to state 34
    lines_program  go to state 250
    line_program   go to state 116
    atom           go to state 37


State 249

   56 lines_program: lines_program • line_program
   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 251
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 250

   56 lines_program: lines_program • line_program
   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 252
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 24
    TRUEVAL            shift, and go to state 25
    FALSEVAL           shift, and go to state 26
    INTNUM             shift, and go to state 27
    REALNUM            shift, and go to state 28
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112

    comment       go to state 113
    vardef        go to state 114
    type          go to state 76
    values        go to state 34
    line_program  go to state 144
    atom          go to state 37


State 251

   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 67 (line_program)


State 252

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 66 (line_program)
