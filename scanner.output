Terminals unused in grammar

    TO
    DOWNTO
    READ
    READLN
    BEG
    END
    THEN
    VAR
    LISTCONTENT
    VALUE
    STRINGQUOTE
    COLON


State 80 conflicts: 11 shift/reduce
State 110 conflicts: 12 shift/reduce
State 117 conflicts: 1 shift/reduce
State 130 conflicts: 11 shift/reduce


Grammar

    0 $accept: S $end

    1 S: cabecera preprograma

    2 comment: COMMENTLINE
    3        | MULTILINE

    4 cabecera: PROGRAM LOWER STRINGV HIGHER
    5         | PROGRAM LOWER STRINGV DOT STRINGV HIGHER
    6         | PROGRAM QUOTESTRING
    7         | PROGRAM LOWER STRINGV HIGHER cabecera
    8         | PROGRAM LOWER STRINGV DOT STRINGV HIGHER cabecera
    9         | PROGRAM QUOTESTRING cabecera

   10 constdef: DEFINE STRINGV values
   11         | CONST type STRINGV EQ values SEMICOLON

   12 vardef: type STRINGV SEMICOLON
   13       | type STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type STRINGV EQ exp SEMICOLON
   15       | type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type STRINGV COMMA vardef
   20       | type STRINGV EQ exp COMMA vardef
   21       | STRINGV operand exp COMMA vardef
   22       | STRINGV COMMA vardef
   23       | STRINGV SEMICOLON
   24       | STRINGV EQ exp SEMICOLON

   25 type: INTEGER
   26     | SHORT
   27     | LONG
   28     | UNSIGNED_INT
   29     | UNSIGNED_SHORT
   30     | UNSIGNED_LONG
   31     | FLOAT
   32     | DOUBLE
   33     | STRING
   34     | CHAR
   35     | BOOLEAN
   36     | VOID
   37     | STRUCT STRINGV

   38 values: TRUEVAL
   39       | FALSEVAL
   40       | INTNUM
   41       | REALNUM
   42       | QUOTESTRING

   43 preprograma: preprograma programa
   44            | programa

   45 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type STRINGV LPAREN RPAREN SEMICOLON
   48         | vardef programa
   49         | STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON
   50         | constdef programa
   51         | comment

   52 args: type STRINGV COMMA args
   53     | type STRINGV
   54     | type PROD STRINGV COMMA args
   55     | type PROD STRINGV

   56 lines_program: lines_program line_program
   57              | line_program

   58 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON
   59             | PRINTF LPAREN precontentWrite RPAREN SEMICOLON
   60             | SCANF LPAREN precontentWrite RPAREN SEMICOLON
   61             | STRINGV LPAREN array RPAREN SEMICOLON
   62             | STRINGV LPAREN RPAREN SEMICOLON
   63             | IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   64             | ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   66             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   68             | DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   69             | WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   70             | comment
   71             | STRINGV operand SEMICOLON
   72             | RETURN exp SEMICOLON
   73             | RETURN SEMICOLON
   74             | vardef
   75             | term
   76             | STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

   77 array: exp COMMA array
   78      | exp

   79 precontentWrite: contentWrite
   80                | contentWrite LOWER LOWER ENDL

   81 contentWrite: contentWrite COMMA QUOTESTRING
   82             | contentWrite COMMA STRINGV
   83             | QUOTESTRING
   84             | STRINGV

   85 exp: exp operand term
   86    | term

   87 term: atom
   88     | LPAREN exp RPAREN
   89     | HYPHEN atom
   90     | EX exp
   91     | term operand term SEMICOLON

   92 operand: PLUS
   93        | PLUS EQ
   94        | HYPHEN
   95        | HYPHEN EQ
   96        | HYPHEN HIGHER
   97        | PROD
   98        | DIV
   99        | DIVINT
  100        | MOD
  101        | LOWER
  102        | HIGHER
  103        | LOWER EQ
  104        | HIGHER EQ
  105        | EQ EQ
  106        | AND
  107        | PLUS PLUS
  108        | OR

  109 atom: STRINGV
  110     | values
  111     | STRINGV LSQUAREPAREN atom RSQUAREPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHILE (258) 68 69
    FOR (259) 66 67
    DO (260) 68
    TO (261)
    DOWNTO (262)
    WRITE (263) 58
    ENDL (264) 80
    READ (265)
    READLN (266)
    PROGRAM (267) 4 5 6 7 8 9
    BEG (268)
    END (269)
    IF (270) 63 64
    THEN (271)
    ELSE (272) 64 65
    AND (273) 106
    OR (274) 108
    LOWER (275) 4 5 7 8 58 80 101 103
    HIGHER (276) 4 5 7 8 96 102 104
    PLUS <valString> (277) 92 93 107
    HYPHEN <valString> (278) 89 94 95 96
    PROD (279) 54 55 97
    DIV (280) 98
    DIVINT (281) 99
    MOD (282) 100
    COMMA (283) 19 20 21 22 52 54 77 81 82
    DOT (284) 5 8
    EQ <valString> (285) 11 14 15 16 17 18 20 24 66 67 93 95 103 104 105
    COMMENTLINE <valString> (286) 2
    MULTILINE <valString> (287) 3
    VAR (288)
    CONST (289) 11
    DEFINE (290) 10
    LISTCONTENT (291)
    VALUE (292)
    LPAREN (293) 17 18 45 46 47 59 60 61 62 63 64 66 67 68 69 88
    STRINGQUOTE (294)
    RPAREN (295) 17 18 45 46 47 59 60 61 62 63 64 66 67 68 69 88
    RSQUAREPAREN (296) 13 15 16 111
    LSQUAREPAREN (297) 13 15 16 111
    COLON (298)
    SEMICOLON <valString> (299) 11 12 13 14 15 16 17 18 23 24 47 49 58 59 60 61 62 66 67 68 71 72 73 76 91
    INTEGER (300) 25
    SHORT (301) 26
    LONG (302) 27
    UNSIGNED_INT (303) 28
    UNSIGNED_SHORT (304) 29
    UNSIGNED_LONG (305) 30
    FLOAT (306) 31
    DOUBLE (307) 32
    VOID (308) 36
    OPENCURLYBRACKET (309) 15 45 46 49 63 64 65 66 67 68 69 76
    CLOSECURLYBRACKET (310) 15 45 46 49 63 64 65 66 67 68 69 76
    BOOLEAN (311) 35
    CHAR (312) 34
    PRINTF (313) 59
    SCANF (314) 60
    STRING <valString> (315) 33
    STRINGV <valString> (316) 4 5 7 8 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 37 45 46 47 49 52 53 54 55 61 62 66 67 71 76 82 84 109 111
    QUOTESTRING <valString> (317) 6 9 42 81 83
    TRUEVAL <valString> (318) 38
    FALSEVAL <valString> (319) 39
    INTNUM <valString> (320) 40 66 67
    REALNUM <valString> (321) 41
    RETURN (322) 72 73
    STRUCT (323) 37 49 76
    EX (324) 90


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    S (71)
        on left: 1
        on right: 0
    comment <valString> (72)
        on left: 2 3
        on right: 51 70
    cabecera <valString> (73)
        on left: 4 5 6 7 8 9
        on right: 1 7 8 9
    constdef (74)
        on left: 10 11
        on right: 50
    vardef <valString> (75)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24
        on right: 19 20 21 22 48 67 74
    type <valInt> (76)
        on left: 25 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 11 12 13 14 15 16 17 18 19 20 45 46 47 52 53 54 55 66 67
    values <valString> (77)
        on left: 38 39 40 41 42
        on right: 10 11 110
    preprograma <valString> (78)
        on left: 43 44
        on right: 1 43
    programa <valString> (79)
        on left: 45 46 47 48 49 50 51
        on right: 43 44 48 50
    args <valString> (80)
        on left: 52 53 54 55
        on right: 45 52 54
    lines_program <valString> (81)
        on left: 56 57
        on right: 45 46 49 56 63 64 66 67 68 69 76
    line_program <valString> (82)
        on left: 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
        on right: 56 57 65
    array <valString> (83)
        on left: 77 78
        on right: 15 17 61 77
    precontentWrite <valString> (84)
        on left: 79 80
        on right: 58 59 60
    contentWrite <valString> (85)
        on left: 81 82 83 84
        on right: 79 80 81 82
    exp <valString> (86)
        on left: 85 86
        on right: 14 16 20 21 24 63 64 66 67 68 69 72 77 78 85 88 90
    term <valString> (87)
        on left: 87 88 89 90 91
        on right: 75 85 86 91
    operand <valString> (88)
        on left: 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
        on right: 21 66 71 85 91
    atom <valString> (89)
        on left: 109 110 111
        on right: 13 15 87 89 111


State 0

    0 $accept: • S $end

    PROGRAM  shift, and go to state 1

    S         go to state 2
    cabecera  go to state 3


State 1

    4 cabecera: PROGRAM • LOWER STRINGV HIGHER
    5         | PROGRAM • LOWER STRINGV DOT STRINGV HIGHER
    6         | PROGRAM • QUOTESTRING
    7         | PROGRAM • LOWER STRINGV HIGHER cabecera
    8         | PROGRAM • LOWER STRINGV DOT STRINGV HIGHER cabecera
    9         | PROGRAM • QUOTESTRING cabecera

    LOWER        shift, and go to state 4
    QUOTESTRING  shift, and go to state 5


State 2

    0 $accept: S • $end

    $end  shift, and go to state 6


State 3

    1 S: cabecera • preprograma

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 24

    comment      go to state 25
    constdef     go to state 26
    vardef       go to state 27
    type         go to state 28
    preprograma  go to state 29
    programa     go to state 30


State 4

    4 cabecera: PROGRAM LOWER • STRINGV HIGHER
    5         | PROGRAM LOWER • STRINGV DOT STRINGV HIGHER
    7         | PROGRAM LOWER • STRINGV HIGHER cabecera
    8         | PROGRAM LOWER • STRINGV DOT STRINGV HIGHER cabecera

    STRINGV  shift, and go to state 31


State 5

    6 cabecera: PROGRAM QUOTESTRING •
    9         | PROGRAM QUOTESTRING • cabecera

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 6 (cabecera)

    cabecera  go to state 32


State 6

    0 $accept: S $end •

    $default  accept


State 7

    2 comment: COMMENTLINE •

    $default  reduce using rule 2 (comment)


State 8

    3 comment: MULTILINE •

    $default  reduce using rule 3 (comment)


State 9

   11 constdef: CONST • type STRINGV EQ values SEMICOLON

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 34


State 10

   10 constdef: DEFINE • STRINGV values

    STRINGV  shift, and go to state 35


State 11

   25 type: INTEGER •

    $default  reduce using rule 25 (type)


State 12

   26 type: SHORT •

    $default  reduce using rule 26 (type)


State 13

   27 type: LONG •

    $default  reduce using rule 27 (type)


State 14

   28 type: UNSIGNED_INT •

    $default  reduce using rule 28 (type)


State 15

   29 type: UNSIGNED_SHORT •

    $default  reduce using rule 29 (type)


State 16

   30 type: UNSIGNED_LONG •

    $default  reduce using rule 30 (type)


State 17

   31 type: FLOAT •

    $default  reduce using rule 31 (type)


State 18

   32 type: DOUBLE •

    $default  reduce using rule 32 (type)


State 19

   36 type: VOID •

    $default  reduce using rule 36 (type)


State 20

   35 type: BOOLEAN •

    $default  reduce using rule 35 (type)


State 21

   34 type: CHAR •

    $default  reduce using rule 34 (type)


State 22

   33 type: STRING •

    $default  reduce using rule 33 (type)


State 23

   21 vardef: STRINGV • operand exp COMMA vardef
   22       | STRINGV • COMMA vardef
   23       | STRINGV • SEMICOLON
   24       | STRINGV • EQ exp SEMICOLON

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    COMMA      shift, and go to state 46
    EQ         shift, and go to state 47
    SEMICOLON  shift, and go to state 48

    operand  go to state 49


State 24

   37 type: STRUCT • STRINGV
   49 programa: STRUCT • STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    STRINGV  shift, and go to state 50


State 25

   51 programa: comment •

    $default  reduce using rule 51 (programa)


State 26

   50 programa: constdef • programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 24

    comment   go to state 25
    constdef  go to state 26
    vardef    go to state 27
    type      go to state 28
    programa  go to state 51


State 27

   48 programa: vardef • programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 24

    comment   go to state 25
    constdef  go to state 26
    vardef    go to state 27
    type      go to state 28
    programa  go to state 52


State 28

   12 vardef: type • STRINGV SEMICOLON
   13       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type • STRINGV EQ exp SEMICOLON
   15       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type • STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type • STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type • STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type • STRINGV COMMA vardef
   20       | type • STRINGV EQ exp COMMA vardef
   45 programa: type • STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type • STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type • STRINGV LPAREN RPAREN SEMICOLON

    STRINGV  shift, and go to state 53


State 29

    1 S: cabecera preprograma •
   43 preprograma: preprograma • programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 24

    $default  reduce using rule 1 (S)

    comment   go to state 25
    constdef  go to state 26
    vardef    go to state 27
    type      go to state 28
    programa  go to state 54


State 30

   44 preprograma: programa •

    $default  reduce using rule 44 (preprograma)


State 31

    4 cabecera: PROGRAM LOWER STRINGV • HIGHER
    5         | PROGRAM LOWER STRINGV • DOT STRINGV HIGHER
    7         | PROGRAM LOWER STRINGV • HIGHER cabecera
    8         | PROGRAM LOWER STRINGV • DOT STRINGV HIGHER cabecera

    HIGHER  shift, and go to state 55
    DOT     shift, and go to state 56


State 32

    9 cabecera: PROGRAM QUOTESTRING cabecera •

    $default  reduce using rule 9 (cabecera)


State 33

   37 type: STRUCT • STRINGV

    STRINGV  shift, and go to state 57


State 34

   11 constdef: CONST type • STRINGV EQ values SEMICOLON

    STRINGV  shift, and go to state 58


State 35

   10 constdef: DEFINE STRINGV • values

    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63

    values  go to state 64


State 36

  106 operand: AND •

    $default  reduce using rule 106 (operand)


State 37

  108 operand: OR •

    $default  reduce using rule 108 (operand)


State 38

  101 operand: LOWER •
  103        | LOWER • EQ

    EQ  shift, and go to state 65

    $default  reduce using rule 101 (operand)


State 39

  102 operand: HIGHER •
  104        | HIGHER • EQ

    EQ  shift, and go to state 66

    $default  reduce using rule 102 (operand)


State 40

   92 operand: PLUS •
   93        | PLUS • EQ
  107        | PLUS • PLUS

    PLUS  shift, and go to state 67
    EQ    shift, and go to state 68

    $default  reduce using rule 92 (operand)


State 41

   94 operand: HYPHEN •
   95        | HYPHEN • EQ
   96        | HYPHEN • HIGHER

    HIGHER  shift, and go to state 69
    EQ      shift, and go to state 70

    $default  reduce using rule 94 (operand)


State 42

   97 operand: PROD •

    $default  reduce using rule 97 (operand)


State 43

   98 operand: DIV •

    $default  reduce using rule 98 (operand)


State 44

   99 operand: DIVINT •

    $default  reduce using rule 99 (operand)


State 45

  100 operand: MOD •

    $default  reduce using rule 100 (operand)


State 46

   22 vardef: STRINGV COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 71
    type    go to state 72


State 47

   24 vardef: STRINGV EQ • exp SEMICOLON
  105 operand: EQ • EQ

    HYPHEN       shift, and go to state 73
    EQ           shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 79
    term    go to state 80
    atom    go to state 81


State 48

   23 vardef: STRINGV SEMICOLON •

    $default  reduce using rule 23 (vardef)


State 49

   21 vardef: STRINGV operand • exp COMMA vardef

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 82
    term    go to state 80
    atom    go to state 81


State 50

   37 type: STRUCT STRINGV •
   49 programa: STRUCT STRINGV • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 83

    $default  reduce using rule 37 (type)


State 51

   50 programa: constdef programa •

    $default  reduce using rule 50 (programa)


State 52

   48 programa: vardef programa •

    $default  reduce using rule 48 (programa)


State 53

   12 vardef: type STRINGV • SEMICOLON
   13       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type STRINGV • EQ exp SEMICOLON
   15       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV • LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type STRINGV • EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV • EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type STRINGV • COMMA vardef
   20       | type STRINGV • EQ exp COMMA vardef
   45 programa: type STRINGV • LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV • LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type STRINGV • LPAREN RPAREN SEMICOLON

    COMMA         shift, and go to state 84
    EQ            shift, and go to state 85
    LPAREN        shift, and go to state 86
    LSQUAREPAREN  shift, and go to state 87
    SEMICOLON     shift, and go to state 88


State 54

   43 preprograma: preprograma programa •

    $default  reduce using rule 43 (preprograma)


State 55

    4 cabecera: PROGRAM LOWER STRINGV HIGHER •
    7         | PROGRAM LOWER STRINGV HIGHER • cabecera

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 4 (cabecera)

    cabecera  go to state 89


State 56

    5 cabecera: PROGRAM LOWER STRINGV DOT • STRINGV HIGHER
    8         | PROGRAM LOWER STRINGV DOT • STRINGV HIGHER cabecera

    STRINGV  shift, and go to state 90


State 57

   37 type: STRUCT STRINGV •

    $default  reduce using rule 37 (type)


State 58

   11 constdef: CONST type STRINGV • EQ values SEMICOLON

    EQ  shift, and go to state 91


State 59

   42 values: QUOTESTRING •

    $default  reduce using rule 42 (values)


State 60

   38 values: TRUEVAL •

    $default  reduce using rule 38 (values)


State 61

   39 values: FALSEVAL •

    $default  reduce using rule 39 (values)


State 62

   40 values: INTNUM •

    $default  reduce using rule 40 (values)


State 63

   41 values: REALNUM •

    $default  reduce using rule 41 (values)


State 64

   10 constdef: DEFINE STRINGV values •

    $default  reduce using rule 10 (constdef)


State 65

  103 operand: LOWER EQ •

    $default  reduce using rule 103 (operand)


State 66

  104 operand: HIGHER EQ •

    $default  reduce using rule 104 (operand)


State 67

  107 operand: PLUS PLUS •

    $default  reduce using rule 107 (operand)


State 68

   93 operand: PLUS EQ •

    $default  reduce using rule 93 (operand)


State 69

   96 operand: HYPHEN HIGHER •

    $default  reduce using rule 96 (operand)


State 70

   95 operand: HYPHEN EQ •

    $default  reduce using rule 95 (operand)


State 71

   22 vardef: STRINGV COMMA vardef •

    $default  reduce using rule 22 (vardef)


State 72

   12 vardef: type • STRINGV SEMICOLON
   13       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type • STRINGV EQ exp SEMICOLON
   15       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type • STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type • STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type • STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type • STRINGV COMMA vardef
   20       | type • STRINGV EQ exp COMMA vardef

    STRINGV  shift, and go to state 92


State 73

   89 term: HYPHEN • atom

    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63

    values  go to state 78
    atom    go to state 93


State 74

  105 operand: EQ EQ •

    $default  reduce using rule 105 (operand)


State 75

   88 term: LPAREN • exp RPAREN

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 94
    term    go to state 80
    atom    go to state 81


State 76

  109 atom: STRINGV •
  111     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    LSQUAREPAREN  shift, and go to state 95

    $default  reduce using rule 109 (atom)


State 77

   90 term: EX • exp

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 96
    term    go to state 80
    atom    go to state 81


State 78

  110 atom: values •

    $default  reduce using rule 110 (atom)


State 79

   24 vardef: STRINGV EQ exp • SEMICOLON
   85 exp: exp • operand term

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    EQ         shift, and go to state 97
    SEMICOLON  shift, and go to state 98

    operand  go to state 99


State 80

   86 exp: term •
   91 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 97

    AND       [reduce using rule 86 (exp)]
    OR        [reduce using rule 86 (exp)]
    LOWER     [reduce using rule 86 (exp)]
    HIGHER    [reduce using rule 86 (exp)]
    PLUS      [reduce using rule 86 (exp)]
    HYPHEN    [reduce using rule 86 (exp)]
    PROD      [reduce using rule 86 (exp)]
    DIV       [reduce using rule 86 (exp)]
    DIVINT    [reduce using rule 86 (exp)]
    MOD       [reduce using rule 86 (exp)]
    EQ        [reduce using rule 86 (exp)]
    $default  reduce using rule 86 (exp)

    operand  go to state 100


State 81

   87 term: atom •

    $default  reduce using rule 87 (term)


State 82

   21 vardef: STRINGV operand exp • COMMA vardef
   85 exp: exp • operand term

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    COMMA   shift, and go to state 101
    EQ      shift, and go to state 97

    operand  go to state 99


State 83

   49 programa: STRUCT STRINGV OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET SEMICOLON

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 115
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 84

   19 vardef: type STRINGV COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 118
    type    go to state 72


State 85

   14 vardef: type STRINGV EQ • exp SEMICOLON
   17       | type STRINGV EQ • STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV EQ • STRINGV LPAREN RPAREN SEMICOLON
   20       | type STRINGV EQ • exp COMMA vardef

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 119
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 120
    term    go to state 80
    atom    go to state 81


State 86

   45 programa: type STRINGV LPAREN • args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV LPAREN • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type STRINGV LPAREN • RPAREN SEMICOLON

    RPAREN          shift, and go to state 121
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 122
    args  go to state 123


State 87

   13 vardef: type STRINGV LSQUAREPAREN • atom RSQUAREPAREN SEMICOLON
   15       | type STRINGV LSQUAREPAREN • atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV LSQUAREPAREN • RSQUAREPAREN EQ exp SEMICOLON

    RSQUAREPAREN  shift, and go to state 124
    STRINGV       shift, and go to state 76
    QUOTESTRING   shift, and go to state 59
    TRUEVAL       shift, and go to state 60
    FALSEVAL      shift, and go to state 61
    INTNUM        shift, and go to state 62
    REALNUM       shift, and go to state 63

    values  go to state 78
    atom    go to state 125


State 88

   12 vardef: type STRINGV SEMICOLON •

    $default  reduce using rule 12 (vardef)


State 89

    7 cabecera: PROGRAM LOWER STRINGV HIGHER cabecera •

    $default  reduce using rule 7 (cabecera)


State 90

    5 cabecera: PROGRAM LOWER STRINGV DOT STRINGV • HIGHER
    8         | PROGRAM LOWER STRINGV DOT STRINGV • HIGHER cabecera

    HIGHER  shift, and go to state 126


State 91

   11 constdef: CONST type STRINGV EQ • values SEMICOLON

    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63

    values  go to state 127


State 92

   12 vardef: type STRINGV • SEMICOLON
   13       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type STRINGV • EQ exp SEMICOLON
   15       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV • LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON
   17       | type STRINGV • EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV • EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type STRINGV • COMMA vardef
   20       | type STRINGV • EQ exp COMMA vardef

    COMMA         shift, and go to state 84
    EQ            shift, and go to state 85
    LSQUAREPAREN  shift, and go to state 87
    SEMICOLON     shift, and go to state 88


State 93

   89 term: HYPHEN atom •

    $default  reduce using rule 89 (term)


State 94

   85 exp: exp • operand term
   88 term: LPAREN exp • RPAREN

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 97
    RPAREN  shift, and go to state 128

    operand  go to state 99


State 95

  111 atom: STRINGV LSQUAREPAREN • atom RSQUAREPAREN

    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63

    values  go to state 78
    atom    go to state 129


State 96

   85 exp: exp • operand term
   90 term: EX exp •

    $default  reduce using rule 90 (term)

    operand  go to state 99


State 97

  105 operand: EQ • EQ

    EQ  shift, and go to state 74


State 98

   24 vardef: STRINGV EQ exp SEMICOLON •

    $default  reduce using rule 24 (vardef)


State 99

   85 exp: exp operand • term

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 130
    atom    go to state 81


State 100

   91 term: term operand • term SEMICOLON

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 131
    atom    go to state 81


State 101

   21 vardef: STRINGV operand exp COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 132
    type    go to state 72


State 102

   69 line_program: WHILE • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 133


State 103

   66 line_program: FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 134


State 104

   68 line_program: DO • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 135


State 105

   58 line_program: WRITE • LOWER LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 136


State 106

   63 line_program: IF • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 137


State 107

   64 line_program: ELSE • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | ELSE • OPENCURLYBRACKET line_program CLOSECURLYBRACKET

    IF                shift, and go to state 138
    OPENCURLYBRACKET  shift, and go to state 139


State 108

   59 line_program: PRINTF • LPAREN precontentWrite RPAREN SEMICOLON

    LPAREN  shift, and go to state 140


State 109

   60 line_program: SCANF • LPAREN precontentWrite RPAREN SEMICOLON

    LPAREN  shift, and go to state 141


State 110

   21 vardef: STRINGV • operand exp COMMA vardef
   22       | STRINGV • COMMA vardef
   23       | STRINGV • SEMICOLON
   24       | STRINGV • EQ exp SEMICOLON
   61 line_program: STRINGV • LPAREN array RPAREN SEMICOLON
   62             | STRINGV • LPAREN RPAREN SEMICOLON
   71             | STRINGV • operand SEMICOLON
  109 atom: STRINGV •
  111     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    AND           shift, and go to state 36
    OR            shift, and go to state 37
    LOWER         shift, and go to state 38
    HIGHER        shift, and go to state 39
    PLUS          shift, and go to state 40
    HYPHEN        shift, and go to state 41
    PROD          shift, and go to state 42
    DIV           shift, and go to state 43
    DIVINT        shift, and go to state 44
    MOD           shift, and go to state 45
    COMMA         shift, and go to state 46
    EQ            shift, and go to state 47
    LPAREN        shift, and go to state 142
    LSQUAREPAREN  shift, and go to state 95
    SEMICOLON     shift, and go to state 48

    AND       [reduce using rule 109 (atom)]
    OR        [reduce using rule 109 (atom)]
    LOWER     [reduce using rule 109 (atom)]
    HIGHER    [reduce using rule 109 (atom)]
    PLUS      [reduce using rule 109 (atom)]
    HYPHEN    [reduce using rule 109 (atom)]
    PROD      [reduce using rule 109 (atom)]
    DIV       [reduce using rule 109 (atom)]
    DIVINT    [reduce using rule 109 (atom)]
    MOD       [reduce using rule 109 (atom)]
    EQ        [reduce using rule 109 (atom)]
    LPAREN    [reduce using rule 109 (atom)]
    $default  reduce using rule 109 (atom)

    operand  go to state 143


State 111

   72 line_program: RETURN • exp SEMICOLON
   73             | RETURN • SEMICOLON

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    SEMICOLON    shift, and go to state 144
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 145
    term    go to state 80
    atom    go to state 81


State 112

   37 type: STRUCT • STRINGV
   76 line_program: STRUCT • STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    STRINGV  shift, and go to state 146


State 113

   70 line_program: comment •

    $default  reduce using rule 70 (line_program)


State 114

   74 line_program: vardef •

    $default  reduce using rule 74 (line_program)


State 115

   49 programa: STRUCT STRINGV OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET SEMICOLON
   56 lines_program: lines_program • line_program

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 147
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 116

   57 lines_program: line_program •

    $default  reduce using rule 57 (lines_program)


State 117

   75 line_program: term •
   91 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 97

    HYPHEN    [reduce using rule 75 (line_program)]
    $default  reduce using rule 75 (line_program)

    operand  go to state 100


State 118

   19 vardef: type STRINGV COMMA vardef •

    $default  reduce using rule 19 (vardef)


State 119

   17 vardef: type STRINGV EQ STRINGV • LPAREN array RPAREN SEMICOLON
   18       | type STRINGV EQ STRINGV • LPAREN RPAREN SEMICOLON
  109 atom: STRINGV •
  111     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    LPAREN        shift, and go to state 149
    LSQUAREPAREN  shift, and go to state 95

    $default  reduce using rule 109 (atom)


State 120

   14 vardef: type STRINGV EQ exp • SEMICOLON
   20       | type STRINGV EQ exp • COMMA vardef
   85 exp: exp • operand term

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    COMMA      shift, and go to state 150
    EQ         shift, and go to state 97
    SEMICOLON  shift, and go to state 151

    operand  go to state 99


State 121

   46 programa: type STRINGV LPAREN RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47         | type STRINGV LPAREN RPAREN • SEMICOLON

    SEMICOLON         shift, and go to state 152
    OPENCURLYBRACKET  shift, and go to state 153


State 122

   52 args: type • STRINGV COMMA args
   53     | type • STRINGV
   54     | type • PROD STRINGV COMMA args
   55     | type • PROD STRINGV

    PROD     shift, and go to state 154
    STRINGV  shift, and go to state 155


State 123

   45 programa: type STRINGV LPAREN args • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 156


State 124

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN • EQ exp SEMICOLON

    EQ  shift, and go to state 157


State 125

   13 vardef: type STRINGV LSQUAREPAREN atom • RSQUAREPAREN SEMICOLON
   15       | type STRINGV LSQUAREPAREN atom • RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    RSQUAREPAREN  shift, and go to state 158


State 126

    5 cabecera: PROGRAM LOWER STRINGV DOT STRINGV HIGHER •
    8         | PROGRAM LOWER STRINGV DOT STRINGV HIGHER • cabecera

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 5 (cabecera)

    cabecera  go to state 159


State 127

   11 constdef: CONST type STRINGV EQ values • SEMICOLON

    SEMICOLON  shift, and go to state 160


State 128

   88 term: LPAREN exp RPAREN •

    $default  reduce using rule 88 (term)


State 129

  111 atom: STRINGV LSQUAREPAREN atom • RSQUAREPAREN

    RSQUAREPAREN  shift, and go to state 161


State 130

   85 exp: exp operand term •
   91 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 97

    AND       [reduce using rule 85 (exp)]
    OR        [reduce using rule 85 (exp)]
    LOWER     [reduce using rule 85 (exp)]
    HIGHER    [reduce using rule 85 (exp)]
    PLUS      [reduce using rule 85 (exp)]
    HYPHEN    [reduce using rule 85 (exp)]
    PROD      [reduce using rule 85 (exp)]
    DIV       [reduce using rule 85 (exp)]
    DIVINT    [reduce using rule 85 (exp)]
    MOD       [reduce using rule 85 (exp)]
    EQ        [reduce using rule 85 (exp)]
    $default  reduce using rule 85 (exp)

    operand  go to state 100


State 131

   91 term: term • operand term SEMICOLON
   91     | term operand term • SEMICOLON

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    EQ         shift, and go to state 97
    SEMICOLON  shift, and go to state 162

    operand  go to state 100


State 132

   21 vardef: STRINGV operand exp COMMA vardef •

    $default  reduce using rule 21 (vardef)


State 133

   69 line_program: WHILE LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 163
    term    go to state 80
    atom    go to state 81


State 134

   66 line_program: FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 164


State 135

   68 line_program: DO OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 165
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 136

   58 line_program: WRITE LOWER • LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 166


State 137

   63 line_program: IF LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 167
    term    go to state 80
    atom    go to state 81


State 138

   64 line_program: ELSE IF • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 168


State 139

   65 line_program: ELSE OPENCURLYBRACKET • line_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 169
    term          go to state 117
    atom          go to state 81


State 140

   59 line_program: PRINTF LPAREN • precontentWrite RPAREN SEMICOLON

    STRINGV      shift, and go to state 170
    QUOTESTRING  shift, and go to state 171

    precontentWrite  go to state 172
    contentWrite     go to state 173


State 141

   60 line_program: SCANF LPAREN • precontentWrite RPAREN SEMICOLON

    STRINGV      shift, and go to state 170
    QUOTESTRING  shift, and go to state 171

    precontentWrite  go to state 174
    contentWrite     go to state 173


State 142

   61 line_program: STRINGV LPAREN • array RPAREN SEMICOLON
   62             | STRINGV LPAREN • RPAREN SEMICOLON

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    RPAREN       shift, and go to state 175
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    array   go to state 176
    exp     go to state 177
    term    go to state 80
    atom    go to state 81


State 143

   21 vardef: STRINGV operand • exp COMMA vardef
   71 line_program: STRINGV operand • SEMICOLON

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    SEMICOLON    shift, and go to state 178
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 82
    term    go to state 80
    atom    go to state 81


State 144

   73 line_program: RETURN SEMICOLON •

    $default  reduce using rule 73 (line_program)


State 145

   72 line_program: RETURN exp • SEMICOLON
   85 exp: exp • operand term

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    EQ         shift, and go to state 97
    SEMICOLON  shift, and go to state 179

    operand  go to state 99


State 146

   37 type: STRUCT STRINGV •
   76 line_program: STRUCT STRINGV • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 180

    $default  reduce using rule 37 (type)


State 147

   49 programa: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 181


State 148

   56 lines_program: lines_program line_program •

    $default  reduce using rule 56 (lines_program)


State 149

   17 vardef: type STRINGV EQ STRINGV LPAREN • array RPAREN SEMICOLON
   18       | type STRINGV EQ STRINGV LPAREN • RPAREN SEMICOLON

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    RPAREN       shift, and go to state 182
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    array   go to state 183
    exp     go to state 177
    term    go to state 80
    atom    go to state 81


State 150

   20 vardef: type STRINGV EQ exp COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 184
    type    go to state 72


State 151

   14 vardef: type STRINGV EQ exp SEMICOLON •

    $default  reduce using rule 14 (vardef)


State 152

   47 programa: type STRINGV LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 47 (programa)


State 153

   46 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 185
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 154

   54 args: type PROD • STRINGV COMMA args
   55     | type PROD • STRINGV

    STRINGV  shift, and go to state 186


State 155

   52 args: type STRINGV • COMMA args
   53     | type STRINGV •

    COMMA  shift, and go to state 187

    $default  reduce using rule 53 (args)


State 156

   45 programa: type STRINGV LPAREN args RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 188


State 157

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN EQ • exp SEMICOLON

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 189
    term    go to state 80
    atom    go to state 81


State 158

   13 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN • SEMICOLON
   15       | type STRINGV LSQUAREPAREN atom RSQUAREPAREN • EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    EQ         shift, and go to state 190
    SEMICOLON  shift, and go to state 191


State 159

    8 cabecera: PROGRAM LOWER STRINGV DOT STRINGV HIGHER cabecera •

    $default  reduce using rule 8 (cabecera)


State 160

   11 constdef: CONST type STRINGV EQ values SEMICOLON •

    $default  reduce using rule 11 (constdef)


State 161

  111 atom: STRINGV LSQUAREPAREN atom RSQUAREPAREN •

    $default  reduce using rule 111 (atom)


State 162

   91 term: term operand term SEMICOLON •

    $default  reduce using rule 91 (term)


State 163

   69 line_program: WHILE LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   85 exp: exp • operand term

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 97
    RPAREN  shift, and go to state 192

    operand  go to state 99


State 164

   66 line_program: FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    STRINGV  shift, and go to state 193


State 165

   56 lines_program: lines_program • line_program
   68 line_program: DO OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 194
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 166

   58 line_program: WRITE LOWER LOWER • precontentWrite SEMICOLON

    STRINGV      shift, and go to state 170
    QUOTESTRING  shift, and go to state 171

    precontentWrite  go to state 195
    contentWrite     go to state 173


State 167

   63 line_program: IF LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   85 exp: exp • operand term

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 97
    RPAREN  shift, and go to state 196

    operand  go to state 99


State 168

   64 line_program: ELSE IF LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 197
    term    go to state 80
    atom    go to state 81


State 169

   65 line_program: ELSE OPENCURLYBRACKET line_program • CLOSECURLYBRACKET

    CLOSECURLYBRACKET  shift, and go to state 198


State 170

   84 contentWrite: STRINGV •

    $default  reduce using rule 84 (contentWrite)


State 171

   83 contentWrite: QUOTESTRING •

    $default  reduce using rule 83 (contentWrite)


State 172

   59 line_program: PRINTF LPAREN precontentWrite • RPAREN SEMICOLON

    RPAREN  shift, and go to state 199


State 173

   79 precontentWrite: contentWrite •
   80                | contentWrite • LOWER LOWER ENDL
   81 contentWrite: contentWrite • COMMA QUOTESTRING
   82             | contentWrite • COMMA STRINGV

    LOWER  shift, and go to state 200
    COMMA  shift, and go to state 201

    $default  reduce using rule 79 (precontentWrite)


State 174

   60 line_program: SCANF LPAREN precontentWrite • RPAREN SEMICOLON

    RPAREN  shift, and go to state 202


State 175

   62 line_program: STRINGV LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 203


State 176

   61 line_program: STRINGV LPAREN array • RPAREN SEMICOLON

    RPAREN  shift, and go to state 204


State 177

   77 array: exp • COMMA array
   78      | exp •
   85 exp: exp • operand term

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    COMMA   shift, and go to state 205
    EQ      shift, and go to state 97

    $default  reduce using rule 78 (array)

    operand  go to state 99


State 178

   71 line_program: STRINGV operand SEMICOLON •

    $default  reduce using rule 71 (line_program)


State 179

   72 line_program: RETURN exp SEMICOLON •

    $default  reduce using rule 72 (line_program)


State 180

   76 line_program: STRUCT STRINGV OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET SEMICOLON

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 206
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 181

   49 programa: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 49 (programa)


State 182

   18 vardef: type STRINGV EQ STRINGV LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 207


State 183

   17 vardef: type STRINGV EQ STRINGV LPAREN array • RPAREN SEMICOLON

    RPAREN  shift, and go to state 208


State 184

   20 vardef: type STRINGV EQ exp COMMA vardef •

    $default  reduce using rule 20 (vardef)


State 185

   46 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   56 lines_program: lines_program • line_program

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 209
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 186

   54 args: type PROD STRINGV • COMMA args
   55     | type PROD STRINGV •

    COMMA  shift, and go to state 210

    $default  reduce using rule 55 (args)


State 187

   52 args: type STRINGV COMMA • args

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 122
    args  go to state 211


State 188

   45 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 212
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 189

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp • SEMICOLON
   85 exp: exp • operand term

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    EQ         shift, and go to state 97
    SEMICOLON  shift, and go to state 213

    operand  go to state 99


State 190

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ • OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 214


State 191

   13 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON •

    $default  reduce using rule 13 (vardef)


State 192

   69 line_program: WHILE LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 215


State 193

   66 line_program: FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    EQ  shift, and go to state 216


State 194

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • WHILE LPAREN exp RPAREN SEMICOLON

    WHILE  shift, and go to state 217


State 195

   58 line_program: WRITE LOWER LOWER precontentWrite • SEMICOLON

    SEMICOLON  shift, and go to state 218


State 196

   63 line_program: IF LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 219


State 197

   64 line_program: ELSE IF LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   85 exp: exp • operand term

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 97
    RPAREN  shift, and go to state 220

    operand  go to state 99


State 198

   65 line_program: ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET •

    $default  reduce using rule 65 (line_program)


State 199

   59 line_program: PRINTF LPAREN precontentWrite RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 221


State 200

   80 precontentWrite: contentWrite LOWER • LOWER ENDL

    LOWER  shift, and go to state 222


State 201

   81 contentWrite: contentWrite COMMA • QUOTESTRING
   82             | contentWrite COMMA • STRINGV

    STRINGV      shift, and go to state 223
    QUOTESTRING  shift, and go to state 224


State 202

   60 line_program: SCANF LPAREN precontentWrite RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 225


State 203

   62 line_program: STRINGV LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 62 (line_program)


State 204

   61 line_program: STRINGV LPAREN array RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 226


State 205

   77 array: exp COMMA • array

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    array   go to state 227
    exp     go to state 177
    term    go to state 80
    atom    go to state 81


State 206

   56 lines_program: lines_program • line_program
   76 line_program: STRUCT STRINGV OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET SEMICOLON

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 228
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 207

   18 vardef: type STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 18 (vardef)


State 208

   17 vardef: type STRINGV EQ STRINGV LPAREN array RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 229


State 209

   46 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 46 (programa)


State 210

   54 args: type PROD STRINGV COMMA • args

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 122
    args  go to state 230


State 211

   52 args: type STRINGV COMMA args •

    $default  reduce using rule 52 (args)


State 212

   45 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   56 lines_program: lines_program • line_program

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 231
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 213

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN EQ exp SEMICOLON •

    $default  reduce using rule 16 (vardef)


State 214

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET • array CLOSECURLYBRACKET SEMICOLON

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    array   go to state 232
    exp     go to state 177
    term    go to state 80
    atom    go to state 81


State 215

   69 line_program: WHILE LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 233
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 216

   66 line_program: FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTNUM  shift, and go to state 234


State 217

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE • LPAREN exp RPAREN SEMICOLON

    LPAREN  shift, and go to state 235


State 218

   58 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON •

    $default  reduce using rule 58 (line_program)


State 219

   63 line_program: IF LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 236
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 220

   64 line_program: ELSE IF LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 237


State 221

   59 line_program: PRINTF LPAREN precontentWrite RPAREN SEMICOLON •

    $default  reduce using rule 59 (line_program)


State 222

   80 precontentWrite: contentWrite LOWER LOWER • ENDL

    ENDL  shift, and go to state 238


State 223

   82 contentWrite: contentWrite COMMA STRINGV •

    $default  reduce using rule 82 (contentWrite)


State 224

   81 contentWrite: contentWrite COMMA QUOTESTRING •

    $default  reduce using rule 81 (contentWrite)


State 225

   60 line_program: SCANF LPAREN precontentWrite RPAREN SEMICOLON •

    $default  reduce using rule 60 (line_program)


State 226

   61 line_program: STRINGV LPAREN array RPAREN SEMICOLON •

    $default  reduce using rule 61 (line_program)


State 227

   77 array: exp COMMA array •

    $default  reduce using rule 77 (array)


State 228

   76 line_program: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 239


State 229

   17 vardef: type STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON •

    $default  reduce using rule 17 (vardef)


State 230

   54 args: type PROD STRINGV COMMA args •

    $default  reduce using rule 54 (args)


State 231

   45 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 45 (programa)


State 232

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array • CLOSECURLYBRACKET SEMICOLON

    CLOSECURLYBRACKET  shift, and go to state 240


State 233

   56 lines_program: lines_program • line_program
   69 line_program: WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 241
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 234

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    SEMICOLON  shift, and go to state 242


State 235

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN • exp RPAREN SEMICOLON

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 243
    term    go to state 80
    atom    go to state 81


State 236

   56 lines_program: lines_program • line_program
   63 line_program: IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 244
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 237

   64 line_program: ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 245
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 238

   80 precontentWrite: contentWrite LOWER LOWER ENDL •

    $default  reduce using rule 80 (precontentWrite)


State 239

   76 line_program: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 76 (line_program)


State 240

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 246


State 241

   69 line_program: WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 69 (line_program)


State 242

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    HYPHEN       shift, and go to state 73
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    exp     go to state 247
    term    go to state 80
    atom    go to state 81


State 243

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp • RPAREN SEMICOLON
   85 exp: exp • operand term

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 97
    RPAREN  shift, and go to state 248

    operand  go to state 99


State 244

   63 line_program: IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 63 (line_program)


State 245

   56 lines_program: lines_program • line_program
   64 line_program: ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 249
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 246

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 15 (vardef)


State 247

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp • STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   67             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp • SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   85 exp: exp • operand term

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    EQ         shift, and go to state 97
    SEMICOLON  shift, and go to state 250
    STRINGV    shift, and go to state 251

    operand  go to state 99


State 248

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 252


State 249

   64 line_program: ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 64 (line_program)


State 250

   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON • vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 253
    type    go to state 72


State 251

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp STRINGV • operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 97

    operand  go to state 254


State 252

   68 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON •

    $default  reduce using rule 68 (line_program)


State 253

   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 255


State 254

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp STRINGV operand • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 256


State 255

   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 257


State 256

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp STRINGV operand RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 258


State 257

   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 259
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 258

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 102
    FOR             shift, and go to state 103
    DO              shift, and go to state 104
    WRITE           shift, and go to state 105
    IF              shift, and go to state 106
    ELSE            shift, and go to state 107
    HYPHEN          shift, and go to state 73
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 108
    SCANF           shift, and go to state 109
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 110
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 111
    STRUCT          shift, and go to state 112
    EX              shift, and go to state 77

    comment        go to state 113
    vardef         go to state 114
    type           go to state 72
    values         go to state 78
    lines_program  go to state 260
    line_program   go to state 116
    term           go to state 117
    atom           go to state 81


State 259

   56 lines_program: lines_program • line_program
   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 261
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 260

   56 lines_program: lines_program • line_program
   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 102
    FOR                shift, and go to state 103
    DO                 shift, and go to state 104
    WRITE              shift, and go to state 105
    IF                 shift, and go to state 106
    ELSE               shift, and go to state 107
    HYPHEN             shift, and go to state 73
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 262
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 108
    SCANF              shift, and go to state 109
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 110
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 111
    STRUCT             shift, and go to state 112
    EX                 shift, and go to state 77

    comment       go to state 113
    vardef        go to state 114
    type          go to state 72
    values        go to state 78
    line_program  go to state 148
    term          go to state 117
    atom          go to state 81


State 261

   67 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 67 (line_program)


State 262

   66 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 66 (line_program)
