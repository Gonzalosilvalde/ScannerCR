Terminals unused in grammar

    TO
    DOWNTO
    READ
    READLN
    BEG
    END
    THEN
    DOT
    VAR
    VALUE
    COLON


Grammar

    0 $accept: S $end

    1 S: cabecera subcabecera programa
    2  | cabecera comment subcabecera programa
    3  | cabecera subcabecera comment programa
    4  | cabecera comment subcabecera comment programa

    5 comment: COMMENTLINE
    6        | MULTILINE

    7 subcabecera: STRINGV SEMICOLON
    8            | STRINGV subcabecera

    9 cabecera: PROGRAM LOWER STRINGV HIGHER
   10         | PROGRAM STRINGQUOTE

   11 constdef: DEFINE STRINGV values SEMICOLON
   12         | CONST type STRINGV EQ values SEMICOLON

   13 fvardef: type STRINGV SEMICOLON
   14        | type STRINGV EQ values SEMICOLON
   15        | type STRINGV EQ STRINGV SEMICOLON

   16 vardef: type STRINGV SEMICOLON
   17       | type STRINGV EQ values SEMICOLON
   18       | type STRINGV EQ STRINGV SEMICOLON

   19 type: INTEGER
   20     | FLOAT
   21     | STRING
   22     | CHAR
   23     | BOOLEAN

   24 values: TRUEVAL
   25       | FALSEVAL
   26       | INTNUM
   27       | REALNUM
   28       | QUOTESTRING

   29 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   33         | vardef programa
   34         | constdef programa

   35 args: type STRINGV COMMA args
   36     | type STRINGV

   37 lines_program: lines_program line_program
   38              | line_program

   39 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | assignation
   41             | IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | comment
   49             | RETURN exp SEMICOLON
   50             | fvardef

   51 precontentWrite: contentWrite
   52                | contentWrite LOWER LOWER ENDL

   53 contentWrite: contentWrite LOWER LOWER QUOTESTRING
   54             | contentWrite LOWER LOWER STRINGV
   55             | contentWrite PLUS QUOTESTRING
   56             | contentWrite PLUS STRINGV
   57             | QUOTESTRING
   58             | STRINGV

   59 assignation: STRINGV EQ exp SEMICOLON

   60 exp: exp operand term
   61    | term

   62 term: atom
   63     | LPAREN exp RPAREN
   64     | HYPHEN atom
   65     | EX exp

   66 operand: PLUS
   67        | PLUS EQ
   68        | HYPHEN
   69        | HYPHEN EQ
   70        | PROD
   71        | DIV
   72        | DIVINT
   73        | MOD
   74        | LOWER
   75        | HIGHER
   76        | LOWER EQ
   77        | HIGHER EQ
   78        | EQ
   79        | AND
   80        | PLUS PLUS
   81        | OR

   82 atom: STRINGV
   83     | values


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHILE (258) 46 47
    FOR (259) 44 45
    DO (260) 46
    TO (261)
    DOWNTO (262)
    WRITE (263) 39
    ENDL (264) 52
    READ (265)
    READLN (266)
    PROGRAM (267) 9 10
    BEG (268)
    END (269)
    IF (270) 41 42
    THEN (271)
    ELSE (272) 42 43
    AND (273) 79
    OR (274) 81
    LOWER (275) 9 39 52 53 54 74 76
    HIGHER (276) 9 75 77
    PLUS <valString> (277) 55 56 66 67 80
    HYPHEN <valString> (278) 64 68 69
    PROD (279) 70
    DIV (280) 71
    DIVINT (281) 72
    MOD (282) 73
    COMMA (283) 35
    DOT (284)
    EQ <valString> (285) 12 14 15 17 18 44 45 59 67 69 76 77 78
    COMMENTLINE <valString> (286) 5
    MULTILINE <valString> (287) 6
    VAR (288)
    CONST (289) 12
    DEFINE (290) 11
    VALUE (291)
    LPAREN (292) 29 30 31 32 41 42 44 45 46 47 63
    STRINGQUOTE (293) 10
    RPAREN (294) 29 30 31 32 41 42 44 45 46 47 63
    COLON (295)
    SEMICOLON <valString> (296) 7 11 12 13 14 15 16 17 18 39 44 45 46 49 59
    INTEGER (297) 19
    FLOAT (298) 20
    OPENCURLYBRACKET (299) 29 30 31 32 41 42 43 44 45 46 47
    CLOSECURLYBRACKET (300) 29 30 31 32 41 42 43 44 45 46 47
    BOOLEAN (301) 23
    CHAR (302) 22
    STRING <valString> (303) 21
    STRINGV <valString> (304) 7 8 9 11 12 13 14 15 16 17 18 29 30 31 32 35 36 44 45 54 56 58 59 82
    QUOTESTRING <valString> (305) 28 53 55 57
    TRUEVAL (306) 24
    FALSEVAL (307) 25
    INTNUM <valString> (308) 26 44 45
    REALNUM <valString> (309) 27
    RETURN (310) 49
    EX (311) 65


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    S (58)
        on left: 1 2 3 4
        on right: 0
    comment <valString> (59)
        on left: 5 6
        on right: 2 3 4 29 30 31 32 48
    subcabecera <valString> (60)
        on left: 7 8
        on right: 1 2 3 4 8
    cabecera <valString> (61)
        on left: 9 10
        on right: 1 2 3 4
    constdef (62)
        on left: 11 12
        on right: 34
    fvardef (63)
        on left: 13 14 15
        on right: 50
    vardef <valString> (64)
        on left: 16 17 18
        on right: 33
    type <valInt> (65)
        on left: 19 20 21 22 23
        on right: 12 13 14 15 16 17 18 29 30 31 32 35 36 44 45
    values <valString> (66)
        on left: 24 25 26 27 28
        on right: 11 12 14 17 83
    programa <valString> (67)
        on left: 29 30 31 32 33 34
        on right: 1 2 3 4 31 32 33 34
    args <valString> (68)
        on left: 35 36
        on right: 29 32 35
    lines_program <valString> (69)
        on left: 37 38
        on right: 29 30 31 32 37 41 42 44 45 46 47
    line_program <valString> (70)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50
        on right: 37 38 43
    precontentWrite <valString> (71)
        on left: 51 52
        on right: 39
    contentWrite <valString> (72)
        on left: 53 54 55 56 57 58
        on right: 51 52 53 54 55 56
    assignation <valString> (73)
        on left: 59
        on right: 40 45
    exp <valString> (74)
        on left: 60 61
        on right: 41 42 44 45 46 47 49 59 60 63 65
    term <valString> (75)
        on left: 62 63 64 65
        on right: 60 61
    operand <valString> (76)
        on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81
        on right: 44 60
    atom <valString> (77)
        on left: 82 83
        on right: 62 64


State 0

    0 $accept: • S $end
    1 S: • cabecera subcabecera programa
    2  | • cabecera comment subcabecera programa
    3  | • cabecera subcabecera comment programa
    4  | • cabecera comment subcabecera comment programa
    9 cabecera: • PROGRAM LOWER STRINGV HIGHER
   10         | • PROGRAM STRINGQUOTE

    PROGRAM  shift, and go to state 1

    S         go to state 2
    cabecera  go to state 3


State 1

    9 cabecera: PROGRAM • LOWER STRINGV HIGHER
   10         | PROGRAM • STRINGQUOTE

    LOWER        shift, and go to state 4
    STRINGQUOTE  shift, and go to state 5


State 2

    0 $accept: S • $end

    $end  shift, and go to state 6


State 3

    1 S: cabecera • subcabecera programa
    2  | cabecera • comment subcabecera programa
    3  | cabecera • subcabecera comment programa
    4  | cabecera • comment subcabecera comment programa
    5 comment: • COMMENTLINE
    6        | • MULTILINE
    7 subcabecera: • STRINGV SEMICOLON
    8            | • STRINGV subcabecera

    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    STRINGV      shift, and go to state 9

    comment      go to state 10
    subcabecera  go to state 11


State 4

    9 cabecera: PROGRAM LOWER • STRINGV HIGHER

    STRINGV  shift, and go to state 12


State 5

   10 cabecera: PROGRAM STRINGQUOTE •

    $default  reduce using rule 10 (cabecera)


State 6

    0 $accept: S $end •

    $default  accept


State 7

    5 comment: COMMENTLINE •

    $default  reduce using rule 5 (comment)


State 8

    6 comment: MULTILINE •

    $default  reduce using rule 6 (comment)


State 9

    7 subcabecera: • STRINGV SEMICOLON
    7            | STRINGV • SEMICOLON
    8            | • STRINGV subcabecera
    8            | STRINGV • subcabecera

    SEMICOLON  shift, and go to state 13
    STRINGV    shift, and go to state 9

    subcabecera  go to state 14


State 10

    2 S: cabecera comment • subcabecera programa
    4  | cabecera comment • subcabecera comment programa
    7 subcabecera: • STRINGV SEMICOLON
    8            | • STRINGV subcabecera

    STRINGV  shift, and go to state 9

    subcabecera  go to state 15


State 11

    1 S: cabecera subcabecera • programa
    3  | cabecera subcabecera • comment programa
    5 comment: • COMMENTLINE
    6        | • MULTILINE
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   16 vardef: • type STRINGV SEMICOLON
   17       | • type STRINGV EQ values SEMICOLON
   18       | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   33         | • vardef programa
   34         | • constdef programa

    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    CONST        shift, and go to state 16
    DEFINE       shift, and go to state 17
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22

    comment   go to state 23
    constdef  go to state 24
    vardef    go to state 25
    type      go to state 26
    programa  go to state 27


State 12

    9 cabecera: PROGRAM LOWER STRINGV • HIGHER

    HIGHER  shift, and go to state 28


State 13

    7 subcabecera: STRINGV SEMICOLON •

    $default  reduce using rule 7 (subcabecera)


State 14

    8 subcabecera: STRINGV subcabecera •

    $default  reduce using rule 8 (subcabecera)


State 15

    2 S: cabecera comment subcabecera • programa
    4  | cabecera comment subcabecera • comment programa
    5 comment: • COMMENTLINE
    6        | • MULTILINE
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   16 vardef: • type STRINGV SEMICOLON
   17       | • type STRINGV EQ values SEMICOLON
   18       | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   33         | • vardef programa
   34         | • constdef programa

    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    CONST        shift, and go to state 16
    DEFINE       shift, and go to state 17
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22

    comment   go to state 29
    constdef  go to state 24
    vardef    go to state 25
    type      go to state 26
    programa  go to state 30


State 16

   12 constdef: CONST • type STRINGV EQ values SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN

    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    type  go to state 31


State 17

   11 constdef: DEFINE • STRINGV values SEMICOLON

    STRINGV  shift, and go to state 32


State 18

   19 type: INTEGER •

    $default  reduce using rule 19 (type)


State 19

   20 type: FLOAT •

    $default  reduce using rule 20 (type)


State 20

   23 type: BOOLEAN •

    $default  reduce using rule 23 (type)


State 21

   22 type: CHAR •

    $default  reduce using rule 22 (type)


State 22

   21 type: STRING •

    $default  reduce using rule 21 (type)


State 23

    3 S: cabecera subcabecera comment • programa
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   16 vardef: • type STRINGV SEMICOLON
   17       | • type STRINGV EQ values SEMICOLON
   18       | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   33         | • vardef programa
   34         | • constdef programa

    CONST    shift, and go to state 16
    DEFINE   shift, and go to state 17
    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    constdef  go to state 24
    vardef    go to state 25
    type      go to state 26
    programa  go to state 33


State 24

   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   16 vardef: • type STRINGV SEMICOLON
   17       | • type STRINGV EQ values SEMICOLON
   18       | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   33         | • vardef programa
   34         | • constdef programa
   34         | constdef • programa

    CONST    shift, and go to state 16
    DEFINE   shift, and go to state 17
    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    constdef  go to state 24
    vardef    go to state 25
    type      go to state 26
    programa  go to state 34


State 25

   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   16 vardef: • type STRINGV SEMICOLON
   17       | • type STRINGV EQ values SEMICOLON
   18       | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   33         | • vardef programa
   33         | vardef • programa
   34         | • constdef programa

    CONST    shift, and go to state 16
    DEFINE   shift, and go to state 17
    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    constdef  go to state 24
    vardef    go to state 25
    type      go to state 26
    programa  go to state 35


State 26

   16 vardef: type • STRINGV SEMICOLON
   17       | type • STRINGV EQ values SEMICOLON
   18       | type • STRINGV EQ STRINGV SEMICOLON
   29 programa: type • STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | type • STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | type • STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | type • STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa

    STRINGV  shift, and go to state 36


State 27

    1 S: cabecera subcabecera programa •

    $default  reduce using rule 1 (S)


State 28

    9 cabecera: PROGRAM LOWER STRINGV HIGHER •

    $default  reduce using rule 9 (cabecera)


State 29

    4 S: cabecera comment subcabecera comment • programa
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   16 vardef: • type STRINGV SEMICOLON
   17       | • type STRINGV EQ values SEMICOLON
   18       | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   33         | • vardef programa
   34         | • constdef programa

    CONST    shift, and go to state 16
    DEFINE   shift, and go to state 17
    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    constdef  go to state 24
    vardef    go to state 25
    type      go to state 26
    programa  go to state 37


State 30

    2 S: cabecera comment subcabecera programa •

    $default  reduce using rule 2 (S)


State 31

   12 constdef: CONST type • STRINGV EQ values SEMICOLON

    STRINGV  shift, and go to state 38


State 32

   11 constdef: DEFINE STRINGV • values SEMICOLON
   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING

    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43

    values  go to state 44


State 33

    3 S: cabecera subcabecera comment programa •

    $default  reduce using rule 3 (S)


State 34

   34 programa: constdef programa •

    $default  reduce using rule 34 (programa)


State 35

   33 programa: vardef programa •

    $default  reduce using rule 33 (programa)


State 36

   16 vardef: type STRINGV • SEMICOLON
   17       | type STRINGV • EQ values SEMICOLON
   18       | type STRINGV • EQ STRINGV SEMICOLON
   29 programa: type STRINGV • LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | type STRINGV • LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | type STRINGV • LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | type STRINGV • LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa

    EQ         shift, and go to state 45
    LPAREN     shift, and go to state 46
    SEMICOLON  shift, and go to state 47


State 37

    4 S: cabecera comment subcabecera comment programa •

    $default  reduce using rule 4 (S)


State 38

   12 constdef: CONST type STRINGV • EQ values SEMICOLON

    EQ  shift, and go to state 48


State 39

   28 values: QUOTESTRING •

    $default  reduce using rule 28 (values)


State 40

   24 values: TRUEVAL •

    $default  reduce using rule 24 (values)


State 41

   25 values: FALSEVAL •

    $default  reduce using rule 25 (values)


State 42

   26 values: INTNUM •

    $default  reduce using rule 26 (values)


State 43

   27 values: REALNUM •

    $default  reduce using rule 27 (values)


State 44

   11 constdef: DEFINE STRINGV values • SEMICOLON

    SEMICOLON  shift, and go to state 49


State 45

   17 vardef: type STRINGV EQ • values SEMICOLON
   18       | type STRINGV EQ • STRINGV SEMICOLON
   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING

    STRINGV      shift, and go to state 50
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43

    values  go to state 51


State 46

   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: type STRINGV LPAREN • args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | type STRINGV LPAREN • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | type STRINGV LPAREN • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | type STRINGV LPAREN • args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   35 args: • type STRINGV COMMA args
   36     | • type STRINGV

    RPAREN   shift, and go to state 52
    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    type  go to state 53
    args  go to state 54


State 47

   16 vardef: type STRINGV SEMICOLON •

    $default  reduce using rule 16 (vardef)


State 48

   12 constdef: CONST type STRINGV EQ • values SEMICOLON
   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING

    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43

    values  go to state 55


State 49

   11 constdef: DEFINE STRINGV values SEMICOLON •

    $default  reduce using rule 11 (constdef)


State 50

   18 vardef: type STRINGV EQ STRINGV • SEMICOLON

    SEMICOLON  shift, and go to state 56


State 51

   17 vardef: type STRINGV EQ values • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 52

   30 programa: type STRINGV LPAREN RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | type STRINGV LPAREN RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa

    OPENCURLYBRACKET  shift, and go to state 58


State 53

   35 args: type • STRINGV COMMA args
   36     | type • STRINGV

    STRINGV  shift, and go to state 59


State 54

   29 programa: type STRINGV LPAREN args • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   32         | type STRINGV LPAREN args • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa

    RPAREN  shift, and go to state 60


State 55

   12 constdef: CONST type STRINGV EQ values • SEMICOLON

    SEMICOLON  shift, and go to state 61


State 56

   18 vardef: type STRINGV EQ STRINGV SEMICOLON •

    $default  reduce using rule 18 (vardef)


State 57

   17 vardef: type STRINGV EQ values SEMICOLON •

    $default  reduce using rule 17 (vardef)


State 58

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   30 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET comment
   31         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET comment programa
   37 lines_program: • lines_program line_program
   38              | • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    DO           shift, and go to state 64
    WRITE        shift, and go to state 65
    IF           shift, and go to state 66
    ELSE         shift, and go to state 67
    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22
    STRINGV      shift, and go to state 68
    RETURN       shift, and go to state 69

    comment        go to state 70
    fvardef        go to state 71
    type           go to state 72
    lines_program  go to state 73
    line_program   go to state 74
    assignation    go to state 75


State 59

   35 args: type STRINGV • COMMA args
   36     | type STRINGV •  [RPAREN]

    COMMA  shift, and go to state 76

    $default  reduce using rule 36 (args)


State 60

   29 programa: type STRINGV LPAREN args RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   32         | type STRINGV LPAREN args RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa

    OPENCURLYBRACKET  shift, and go to state 77


State 61

   12 constdef: CONST type STRINGV EQ values SEMICOLON •

    $default  reduce using rule 12 (constdef)


State 62

   47 line_program: WHILE • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 78


State 63

   44 line_program: FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 79


State 64

   46 line_program: DO • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 80


State 65

   39 line_program: WRITE • LOWER LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 81


State 66

   41 line_program: IF • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 82


State 67

   42 line_program: ELSE • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | ELSE • OPENCURLYBRACKET line_program CLOSECURLYBRACKET

    IF                shift, and go to state 83
    OPENCURLYBRACKET  shift, and go to state 84


State 68

   59 assignation: STRINGV • EQ exp SEMICOLON

    EQ  shift, and go to state 85


State 69

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   49 line_program: RETURN • exp SEMICOLON
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    exp     go to state 91
    term    go to state 92
    atom    go to state 93


State 70

   48 line_program: comment •

    $default  reduce using rule 48 (line_program)


State 71

   50 line_program: fvardef •

    $default  reduce using rule 50 (line_program)


State 72

   13 fvardef: type • STRINGV SEMICOLON
   14        | type • STRINGV EQ values SEMICOLON
   15        | type • STRINGV EQ STRINGV SEMICOLON

    STRINGV  shift, and go to state 94


State 73

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   30 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET comment
   31         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET comment programa
   37 lines_program: lines_program • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE              shift, and go to state 62
    FOR                shift, and go to state 63
    DO                 shift, and go to state 64
    WRITE              shift, and go to state 65
    IF                 shift, and go to state 66
    ELSE               shift, and go to state 67
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    FLOAT              shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 95
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 68
    RETURN             shift, and go to state 69

    comment       go to state 70
    fvardef       go to state 71
    type          go to state 72
    line_program  go to state 96
    assignation   go to state 75


State 74

   38 lines_program: line_program •

    $default  reduce using rule 38 (lines_program)


State 75

   40 line_program: assignation •

    $default  reduce using rule 40 (line_program)


State 76

   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   35 args: • type STRINGV COMMA args
   35     | type STRINGV COMMA • args
   36     | • type STRINGV

    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    type  go to state 53
    args  go to state 97


State 77

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET comment
   32         | type STRINGV LPAREN args RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET comment programa
   37 lines_program: • lines_program line_program
   38              | • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    DO           shift, and go to state 64
    WRITE        shift, and go to state 65
    IF           shift, and go to state 66
    ELSE         shift, and go to state 67
    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22
    STRINGV      shift, and go to state 68
    RETURN       shift, and go to state 69

    comment        go to state 70
    fvardef        go to state 71
    type           go to state 72
    lines_program  go to state 98
    line_program   go to state 74
    assignation    go to state 75


State 78

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   47 line_program: WHILE LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    exp     go to state 99
    term    go to state 92
    atom    go to state 93


State 79

   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   44 line_program: FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    type  go to state 100


State 80

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: • lines_program line_program
   38              | • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   46             | DO OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    DO           shift, and go to state 64
    WRITE        shift, and go to state 65
    IF           shift, and go to state 66
    ELSE         shift, and go to state 67
    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22
    STRINGV      shift, and go to state 68
    RETURN       shift, and go to state 69

    comment        go to state 70
    fvardef        go to state 71
    type           go to state 72
    lines_program  go to state 101
    line_program   go to state 74
    assignation    go to state 75


State 81

   39 line_program: WRITE LOWER • LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 102


State 82

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   41 line_program: IF LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    exp     go to state 103
    term    go to state 92
    atom    go to state 93


State 83

   42 line_program: ELSE IF • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 104


State 84

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   43             | ELSE OPENCURLYBRACKET • line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    DO           shift, and go to state 64
    WRITE        shift, and go to state 65
    IF           shift, and go to state 66
    ELSE         shift, and go to state 67
    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22
    STRINGV      shift, and go to state 68
    RETURN       shift, and go to state 69

    comment       go to state 70
    fvardef       go to state 71
    type          go to state 72
    line_program  go to state 105
    assignation   go to state 75


State 85

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   59 assignation: STRINGV EQ • exp SEMICOLON
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    exp     go to state 106
    term    go to state 92
    atom    go to state 93


State 86

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   64 term: HYPHEN • atom
   82 atom: • STRINGV
   83     | • values

    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43

    values  go to state 90
    atom    go to state 107


State 87

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   63     | LPAREN • exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    exp     go to state 108
    term    go to state 92
    atom    go to state 93


State 88

   82 atom: STRINGV •

    $default  reduce using rule 82 (atom)


State 89

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   65     | EX • exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    exp     go to state 109
    term    go to state 92
    atom    go to state 93


State 90

   83 atom: values •

    $default  reduce using rule 83 (atom)


State 91

   49 line_program: RETURN exp • SEMICOLON
   60 exp: exp • operand term
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    AND        shift, and go to state 110
    OR         shift, and go to state 111
    LOWER      shift, and go to state 112
    HIGHER     shift, and go to state 113
    PLUS       shift, and go to state 114
    HYPHEN     shift, and go to state 115
    PROD       shift, and go to state 116
    DIV        shift, and go to state 117
    DIVINT     shift, and go to state 118
    MOD        shift, and go to state 119
    EQ         shift, and go to state 120
    SEMICOLON  shift, and go to state 121

    operand  go to state 122


State 92

   61 exp: term •

    $default  reduce using rule 61 (exp)


State 93

   62 term: atom •

    $default  reduce using rule 62 (term)


State 94

   13 fvardef: type STRINGV • SEMICOLON
   14        | type STRINGV • EQ values SEMICOLON
   15        | type STRINGV • EQ STRINGV SEMICOLON

    EQ         shift, and go to state 123
    SEMICOLON  shift, and go to state 124


State 95

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   30 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • comment
   31         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • comment programa

    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8

    comment  go to state 125


State 96

   37 lines_program: lines_program line_program •

    $default  reduce using rule 37 (lines_program)


State 97

   35 args: type STRINGV COMMA args •

    $default  reduce using rule 35 (args)


State 98

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET comment
   32         | type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET comment programa
   37 lines_program: lines_program • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE              shift, and go to state 62
    FOR                shift, and go to state 63
    DO                 shift, and go to state 64
    WRITE              shift, and go to state 65
    IF                 shift, and go to state 66
    ELSE               shift, and go to state 67
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    FLOAT              shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 126
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 68
    RETURN             shift, and go to state 69

    comment       go to state 70
    fvardef       go to state 71
    type          go to state 72
    line_program  go to state 96
    assignation   go to state 75


State 99

   47 line_program: WHILE LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   60 exp: exp • operand term
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    AND     shift, and go to state 110
    OR      shift, and go to state 111
    LOWER   shift, and go to state 112
    HIGHER  shift, and go to state 113
    PLUS    shift, and go to state 114
    HYPHEN  shift, and go to state 115
    PROD    shift, and go to state 116
    DIV     shift, and go to state 117
    DIVINT  shift, and go to state 118
    MOD     shift, and go to state 119
    EQ      shift, and go to state 120
    RPAREN  shift, and go to state 127

    operand  go to state 122


State 100

   44 line_program: FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    STRINGV  shift, and go to state 128


State 101

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: lines_program • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   46             | DO OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE              shift, and go to state 62
    FOR                shift, and go to state 63
    DO                 shift, and go to state 64
    WRITE              shift, and go to state 65
    IF                 shift, and go to state 66
    ELSE               shift, and go to state 67
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    FLOAT              shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 129
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 68
    RETURN             shift, and go to state 69

    comment       go to state 70
    fvardef       go to state 71
    type          go to state 72
    line_program  go to state 96
    assignation   go to state 75


State 102

   39 line_program: WRITE LOWER LOWER • precontentWrite SEMICOLON
   51 precontentWrite: • contentWrite
   52                | • contentWrite LOWER LOWER ENDL
   53 contentWrite: • contentWrite LOWER LOWER QUOTESTRING
   54             | • contentWrite LOWER LOWER STRINGV
   55             | • contentWrite PLUS QUOTESTRING
   56             | • contentWrite PLUS STRINGV
   57             | • QUOTESTRING
   58             | • STRINGV

    STRINGV      shift, and go to state 130
    QUOTESTRING  shift, and go to state 131

    precontentWrite  go to state 132
    contentWrite     go to state 133


State 103

   41 line_program: IF LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   60 exp: exp • operand term
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    AND     shift, and go to state 110
    OR      shift, and go to state 111
    LOWER   shift, and go to state 112
    HIGHER  shift, and go to state 113
    PLUS    shift, and go to state 114
    HYPHEN  shift, and go to state 115
    PROD    shift, and go to state 116
    DIV     shift, and go to state 117
    DIVINT  shift, and go to state 118
    MOD     shift, and go to state 119
    EQ      shift, and go to state 120
    RPAREN  shift, and go to state 134

    operand  go to state 122


State 104

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   42 line_program: ELSE IF LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    exp     go to state 135
    term    go to state 92
    atom    go to state 93


State 105

   43 line_program: ELSE OPENCURLYBRACKET line_program • CLOSECURLYBRACKET

    CLOSECURLYBRACKET  shift, and go to state 136


State 106

   59 assignation: STRINGV EQ exp • SEMICOLON
   60 exp: exp • operand term
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    AND        shift, and go to state 110
    OR         shift, and go to state 111
    LOWER      shift, and go to state 112
    HIGHER     shift, and go to state 113
    PLUS       shift, and go to state 114
    HYPHEN     shift, and go to state 115
    PROD       shift, and go to state 116
    DIV        shift, and go to state 117
    DIVINT     shift, and go to state 118
    MOD        shift, and go to state 119
    EQ         shift, and go to state 120
    SEMICOLON  shift, and go to state 137

    operand  go to state 122


State 107

   64 term: HYPHEN atom •

    $default  reduce using rule 64 (term)


State 108

   60 exp: exp • operand term
   63 term: LPAREN exp • RPAREN
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    AND     shift, and go to state 110
    OR      shift, and go to state 111
    LOWER   shift, and go to state 112
    HIGHER  shift, and go to state 113
    PLUS    shift, and go to state 114
    HYPHEN  shift, and go to state 115
    PROD    shift, and go to state 116
    DIV     shift, and go to state 117
    DIVINT  shift, and go to state 118
    MOD     shift, and go to state 119
    EQ      shift, and go to state 120
    RPAREN  shift, and go to state 138

    operand  go to state 122


State 109

   60 exp: exp • operand term
   65 term: EX exp •  [AND, OR, LOWER, HIGHER, PLUS, HYPHEN, PROD, DIV, DIVINT, MOD, EQ, RPAREN, SEMICOLON]
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    $default  reduce using rule 65 (term)

    operand  go to state 122

    Conflict between rule 65 and token AND resolved as reduce (AND < EX).
    Conflict between rule 65 and token OR resolved as reduce (OR < EX).
    Conflict between rule 65 and token LOWER resolved as reduce (LOWER < EX).
    Conflict between rule 65 and token HIGHER resolved as reduce (HIGHER < EX).
    Conflict between rule 65 and token PLUS resolved as reduce (PLUS < EX).
    Conflict between rule 65 and token HYPHEN resolved as reduce (HYPHEN < EX).
    Conflict between rule 65 and token PROD resolved as reduce (PROD < EX).
    Conflict between rule 65 and token DIV resolved as reduce (DIV < EX).
    Conflict between rule 65 and token DIVINT resolved as reduce (DIVINT < EX).
    Conflict between rule 65 and token MOD resolved as reduce (MOD < EX).
    Conflict between rule 65 and token EQ resolved as reduce (EQ < EX).


State 110

   79 operand: AND •

    $default  reduce using rule 79 (operand)


State 111

   81 operand: OR •

    $default  reduce using rule 81 (operand)


State 112

   74 operand: LOWER •  [HYPHEN, LPAREN, RPAREN, STRINGV, QUOTESTRING, TRUEVAL, FALSEVAL, INTNUM, REALNUM, EX]
   76        | LOWER • EQ

    EQ  shift, and go to state 139

    $default  reduce using rule 74 (operand)


State 113

   75 operand: HIGHER •  [HYPHEN, LPAREN, RPAREN, STRINGV, QUOTESTRING, TRUEVAL, FALSEVAL, INTNUM, REALNUM, EX]
   77        | HIGHER • EQ

    EQ  shift, and go to state 140

    $default  reduce using rule 75 (operand)


State 114

   66 operand: PLUS •  [HYPHEN, LPAREN, RPAREN, STRINGV, QUOTESTRING, TRUEVAL, FALSEVAL, INTNUM, REALNUM, EX]
   67        | PLUS • EQ
   80        | PLUS • PLUS

    PLUS  shift, and go to state 141
    EQ    shift, and go to state 142

    $default  reduce using rule 66 (operand)


State 115

   68 operand: HYPHEN •  [HYPHEN, LPAREN, RPAREN, STRINGV, QUOTESTRING, TRUEVAL, FALSEVAL, INTNUM, REALNUM, EX]
   69        | HYPHEN • EQ

    EQ  shift, and go to state 143

    $default  reduce using rule 68 (operand)


State 116

   70 operand: PROD •

    $default  reduce using rule 70 (operand)


State 117

   71 operand: DIV •

    $default  reduce using rule 71 (operand)


State 118

   72 operand: DIVINT •

    $default  reduce using rule 72 (operand)


State 119

   73 operand: MOD •

    $default  reduce using rule 73 (operand)


State 120

   78 operand: EQ •

    $default  reduce using rule 78 (operand)


State 121

   49 line_program: RETURN exp SEMICOLON •

    $default  reduce using rule 49 (line_program)


State 122

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   60 exp: exp operand • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    term    go to state 144
    atom    go to state 93


State 123

   14 fvardef: type STRINGV EQ • values SEMICOLON
   15        | type STRINGV EQ • STRINGV SEMICOLON
   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING

    STRINGV      shift, and go to state 145
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43

    values  go to state 146


State 124

   13 fvardef: type STRINGV SEMICOLON •

    $default  reduce using rule 13 (fvardef)


State 125

   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   16 vardef: • type STRINGV SEMICOLON
   17       | • type STRINGV EQ values SEMICOLON
   18       | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   30         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment •  [$end]
   31         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   31         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment • programa
   32         | • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   33         | • vardef programa
   34         | • constdef programa

    CONST    shift, and go to state 16
    DEFINE   shift, and go to state 17
    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    $default  reduce using rule 30 (programa)

    constdef  go to state 24
    vardef    go to state 25
    type      go to state 26
    programa  go to state 147


State 126

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   29 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • comment
   32         | type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • comment programa

    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8

    comment  go to state 148


State 127

   47 line_program: WHILE LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 149


State 128

   44 line_program: FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    EQ  shift, and go to state 150


State 129

   46 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • WHILE LPAREN exp RPAREN SEMICOLON

    WHILE  shift, and go to state 151


State 130

   58 contentWrite: STRINGV •

    $default  reduce using rule 58 (contentWrite)


State 131

   57 contentWrite: QUOTESTRING •

    $default  reduce using rule 57 (contentWrite)


State 132

   39 line_program: WRITE LOWER LOWER precontentWrite • SEMICOLON

    SEMICOLON  shift, and go to state 152


State 133

   51 precontentWrite: contentWrite •  [SEMICOLON]
   52                | contentWrite • LOWER LOWER ENDL
   53 contentWrite: contentWrite • LOWER LOWER QUOTESTRING
   54             | contentWrite • LOWER LOWER STRINGV
   55             | contentWrite • PLUS QUOTESTRING
   56             | contentWrite • PLUS STRINGV

    LOWER  shift, and go to state 153
    PLUS   shift, and go to state 154

    $default  reduce using rule 51 (precontentWrite)


State 134

   41 line_program: IF LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 155


State 135

   42 line_program: ELSE IF LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   60 exp: exp • operand term
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    AND     shift, and go to state 110
    OR      shift, and go to state 111
    LOWER   shift, and go to state 112
    HIGHER  shift, and go to state 113
    PLUS    shift, and go to state 114
    HYPHEN  shift, and go to state 115
    PROD    shift, and go to state 116
    DIV     shift, and go to state 117
    DIVINT  shift, and go to state 118
    MOD     shift, and go to state 119
    EQ      shift, and go to state 120
    RPAREN  shift, and go to state 156

    operand  go to state 122


State 136

   43 line_program: ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET •

    $default  reduce using rule 43 (line_program)


State 137

   59 assignation: STRINGV EQ exp SEMICOLON •

    $default  reduce using rule 59 (assignation)


State 138

   63 term: LPAREN exp RPAREN •

    $default  reduce using rule 63 (term)


State 139

   76 operand: LOWER EQ •

    $default  reduce using rule 76 (operand)


State 140

   77 operand: HIGHER EQ •

    $default  reduce using rule 77 (operand)


State 141

   80 operand: PLUS PLUS •

    $default  reduce using rule 80 (operand)


State 142

   67 operand: PLUS EQ •

    $default  reduce using rule 67 (operand)


State 143

   69 operand: HYPHEN EQ •

    $default  reduce using rule 69 (operand)


State 144

   60 exp: exp operand term •

    $default  reduce using rule 60 (exp)


State 145

   15 fvardef: type STRINGV EQ STRINGV • SEMICOLON

    SEMICOLON  shift, and go to state 157


State 146

   14 fvardef: type STRINGV EQ values • SEMICOLON

    SEMICOLON  shift, and go to state 158


State 147

   31 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa •

    $default  reduce using rule 31 (programa)


State 148

   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   16 vardef: • type STRINGV SEMICOLON
   17       | • type STRINGV EQ values SEMICOLON
   18       | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   29 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   29         | type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment •  [$end]
   30         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   31         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa
   32         | type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment • programa
   33         | • vardef programa
   34         | • constdef programa

    CONST    shift, and go to state 16
    DEFINE   shift, and go to state 17
    INTEGER  shift, and go to state 18
    FLOAT    shift, and go to state 19
    BOOLEAN  shift, and go to state 20
    CHAR     shift, and go to state 21
    STRING   shift, and go to state 22

    $default  reduce using rule 29 (programa)

    constdef  go to state 24
    vardef    go to state 25
    type      go to state 26
    programa  go to state 159


State 149

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: • lines_program line_program
   38              | • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47             | WHILE LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    DO           shift, and go to state 64
    WRITE        shift, and go to state 65
    IF           shift, and go to state 66
    ELSE         shift, and go to state 67
    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22
    STRINGV      shift, and go to state 68
    RETURN       shift, and go to state 69

    comment        go to state 70
    fvardef        go to state 71
    type           go to state 72
    lines_program  go to state 160
    line_program   go to state 74
    assignation    go to state 75


State 150

   44 line_program: FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTNUM  shift, and go to state 161


State 151

   46 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE • LPAREN exp RPAREN SEMICOLON

    LPAREN  shift, and go to state 162


State 152

   39 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON •

    $default  reduce using rule 39 (line_program)


State 153

   52 precontentWrite: contentWrite LOWER • LOWER ENDL
   53 contentWrite: contentWrite LOWER • LOWER QUOTESTRING
   54             | contentWrite LOWER • LOWER STRINGV

    LOWER  shift, and go to state 163


State 154

   55 contentWrite: contentWrite PLUS • QUOTESTRING
   56             | contentWrite PLUS • STRINGV

    STRINGV      shift, and go to state 164
    QUOTESTRING  shift, and go to state 165


State 155

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: • lines_program line_program
   38              | • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   41             | IF LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    DO           shift, and go to state 64
    WRITE        shift, and go to state 65
    IF           shift, and go to state 66
    ELSE         shift, and go to state 67
    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22
    STRINGV      shift, and go to state 68
    RETURN       shift, and go to state 69

    comment        go to state 70
    fvardef        go to state 71
    type           go to state 72
    lines_program  go to state 166
    line_program   go to state 74
    assignation    go to state 75


State 156

   42 line_program: ELSE IF LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 167


State 157

   15 fvardef: type STRINGV EQ STRINGV SEMICOLON •

    $default  reduce using rule 15 (fvardef)


State 158

   14 fvardef: type STRINGV EQ values SEMICOLON •

    $default  reduce using rule 14 (fvardef)


State 159

   32 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment programa •

    $default  reduce using rule 32 (programa)


State 160

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: lines_program • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   47             | WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE              shift, and go to state 62
    FOR                shift, and go to state 63
    DO                 shift, and go to state 64
    WRITE              shift, and go to state 65
    IF                 shift, and go to state 66
    ELSE               shift, and go to state 67
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    FLOAT              shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 168
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 68
    RETURN             shift, and go to state 69

    comment       go to state 70
    fvardef       go to state 71
    type          go to state 72
    line_program  go to state 96
    assignation   go to state 75


State 161

   44 line_program: FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    SEMICOLON  shift, and go to state 169


State 162

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   46 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN • exp RPAREN SEMICOLON
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    exp     go to state 170
    term    go to state 92
    atom    go to state 93


State 163

   52 precontentWrite: contentWrite LOWER LOWER • ENDL
   53 contentWrite: contentWrite LOWER LOWER • QUOTESTRING
   54             | contentWrite LOWER LOWER • STRINGV

    ENDL         shift, and go to state 171
    STRINGV      shift, and go to state 172
    QUOTESTRING  shift, and go to state 173


State 164

   56 contentWrite: contentWrite PLUS STRINGV •

    $default  reduce using rule 56 (contentWrite)


State 165

   55 contentWrite: contentWrite PLUS QUOTESTRING •

    $default  reduce using rule 55 (contentWrite)


State 166

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: lines_program • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   41             | IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE              shift, and go to state 62
    FOR                shift, and go to state 63
    DO                 shift, and go to state 64
    WRITE              shift, and go to state 65
    IF                 shift, and go to state 66
    ELSE               shift, and go to state 67
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    FLOAT              shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 174
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 68
    RETURN             shift, and go to state 69

    comment       go to state 70
    fvardef       go to state 71
    type          go to state 72
    line_program  go to state 96
    assignation   go to state 75


State 167

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: • lines_program line_program
   38              | • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    DO           shift, and go to state 64
    WRITE        shift, and go to state 65
    IF           shift, and go to state 66
    ELSE         shift, and go to state 67
    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22
    STRINGV      shift, and go to state 68
    RETURN       shift, and go to state 69

    comment        go to state 70
    fvardef        go to state 71
    type           go to state 72
    lines_program  go to state 175
    line_program   go to state 74
    assignation    go to state 75


State 168

   47 line_program: WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 47 (line_program)


State 169

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   44 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    values  go to state 90
    exp     go to state 176
    term    go to state 92
    atom    go to state 93


State 170

   46 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp • RPAREN SEMICOLON
   60 exp: exp • operand term
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    AND     shift, and go to state 110
    OR      shift, and go to state 111
    LOWER   shift, and go to state 112
    HIGHER  shift, and go to state 113
    PLUS    shift, and go to state 114
    HYPHEN  shift, and go to state 115
    PROD    shift, and go to state 116
    DIV     shift, and go to state 117
    DIVINT  shift, and go to state 118
    MOD     shift, and go to state 119
    EQ      shift, and go to state 120
    RPAREN  shift, and go to state 177

    operand  go to state 122


State 171

   52 precontentWrite: contentWrite LOWER LOWER ENDL •

    $default  reduce using rule 52 (precontentWrite)


State 172

   54 contentWrite: contentWrite LOWER LOWER STRINGV •

    $default  reduce using rule 54 (contentWrite)


State 173

   53 contentWrite: contentWrite LOWER LOWER QUOTESTRING •

    $default  reduce using rule 53 (contentWrite)


State 174

   41 line_program: IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 41 (line_program)


State 175

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: lines_program • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE              shift, and go to state 62
    FOR                shift, and go to state 63
    DO                 shift, and go to state 64
    WRITE              shift, and go to state 65
    IF                 shift, and go to state 66
    ELSE               shift, and go to state 67
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    FLOAT              shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 178
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 68
    RETURN             shift, and go to state 69

    comment       go to state 70
    fvardef       go to state 71
    type          go to state 72
    line_program  go to state 96
    assignation   go to state 75


State 176

   44 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp • SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp • SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   60 exp: exp • operand term
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    AND        shift, and go to state 110
    OR         shift, and go to state 111
    LOWER      shift, and go to state 112
    HIGHER     shift, and go to state 113
    PLUS       shift, and go to state 114
    HYPHEN     shift, and go to state 115
    PROD       shift, and go to state 116
    DIV        shift, and go to state 117
    DIVINT     shift, and go to state 118
    MOD        shift, and go to state 119
    EQ         shift, and go to state 120
    SEMICOLON  shift, and go to state 179

    operand  go to state 122


State 177

   46 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 180


State 178

   42 line_program: ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 42 (line_program)


State 179

   44 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON • STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON • assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   59 assignation: • STRINGV EQ exp SEMICOLON

    STRINGV  shift, and go to state 181

    assignation  go to state 182


State 180

   46 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON •

    $default  reduce using rule 46 (line_program)


State 181

   44 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV • operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   59 assignation: STRINGV • EQ exp SEMICOLON
   66 operand: • PLUS
   67        | • PLUS EQ
   68        | • HYPHEN
   69        | • HYPHEN EQ
   70        | • PROD
   71        | • DIV
   72        | • DIVINT
   73        | • MOD
   74        | • LOWER
   75        | • HIGHER
   76        | • LOWER EQ
   77        | • HIGHER EQ
   78        | • EQ
   79        | • AND
   80        | • PLUS PLUS
   81        | • OR

    AND     shift, and go to state 110
    OR      shift, and go to state 111
    LOWER   shift, and go to state 112
    HIGHER  shift, and go to state 113
    PLUS    shift, and go to state 114
    HYPHEN  shift, and go to state 115
    PROD    shift, and go to state 116
    DIV     shift, and go to state 117
    DIVINT  shift, and go to state 118
    MOD     shift, and go to state 119
    EQ      shift, and go to state 183

    operand  go to state 184


State 182

   45 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 185


State 183

   24 values: • TRUEVAL
   25       | • FALSEVAL
   26       | • INTNUM
   27       | • REALNUM
   28       | • QUOTESTRING
   59 assignation: STRINGV EQ • exp SEMICOLON
   60 exp: • exp operand term
   61    | • term
   62 term: • atom
   63     | • LPAREN exp RPAREN
   64     | • HYPHEN atom
   65     | • EX exp
   78 operand: EQ •  [RPAREN]
   82 atom: • STRINGV
   83     | • values

    HYPHEN       shift, and go to state 86
    LPAREN       shift, and go to state 87
    STRINGV      shift, and go to state 88
    QUOTESTRING  shift, and go to state 39
    TRUEVAL      shift, and go to state 40
    FALSEVAL     shift, and go to state 41
    INTNUM       shift, and go to state 42
    REALNUM      shift, and go to state 43
    EX           shift, and go to state 89

    $default  reduce using rule 78 (operand)

    values  go to state 90
    exp     go to state 106
    term    go to state 92
    atom    go to state 93


State 184

   44 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 186


State 185

   45 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 187


State 186

   44 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 188


State 187

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: • lines_program line_program
   38              | • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    DO           shift, and go to state 64
    WRITE        shift, and go to state 65
    IF           shift, and go to state 66
    ELSE         shift, and go to state 67
    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22
    STRINGV      shift, and go to state 68
    RETURN       shift, and go to state 69

    comment        go to state 70
    fvardef        go to state 71
    type           go to state 72
    lines_program  go to state 189
    line_program   go to state 74
    assignation    go to state 75


State 188

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: • lines_program line_program
   38              | • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   44             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE        shift, and go to state 62
    FOR          shift, and go to state 63
    DO           shift, and go to state 64
    WRITE        shift, and go to state 65
    IF           shift, and go to state 66
    ELSE         shift, and go to state 67
    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    INTEGER      shift, and go to state 18
    FLOAT        shift, and go to state 19
    BOOLEAN      shift, and go to state 20
    CHAR         shift, and go to state 21
    STRING       shift, and go to state 22
    STRINGV      shift, and go to state 68
    RETURN       shift, and go to state 69

    comment        go to state 70
    fvardef        go to state 71
    type           go to state 72
    lines_program  go to state 190
    line_program   go to state 74
    assignation    go to state 75


State 189

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: lines_program • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE              shift, and go to state 62
    FOR                shift, and go to state 63
    DO                 shift, and go to state 64
    WRITE              shift, and go to state 65
    IF                 shift, and go to state 66
    ELSE               shift, and go to state 67
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    FLOAT              shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 191
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 68
    RETURN             shift, and go to state 69

    comment       go to state 70
    fvardef       go to state 71
    type          go to state 72
    line_program  go to state 96
    assignation   go to state 75


State 190

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   19 type: • INTEGER
   20     | • FLOAT
   21     | • STRING
   22     | • CHAR
   23     | • BOOLEAN
   37 lines_program: lines_program • line_program
   39 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   40             | • assignation
   41             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   42             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   43             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   44             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   44             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   45             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   47             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | • comment
   49             | • RETURN exp SEMICOLON
   50             | • fvardef
   59 assignation: • STRINGV EQ exp SEMICOLON

    WHILE              shift, and go to state 62
    FOR                shift, and go to state 63
    DO                 shift, and go to state 64
    WRITE              shift, and go to state 65
    IF                 shift, and go to state 66
    ELSE               shift, and go to state 67
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    FLOAT              shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 192
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 68
    RETURN             shift, and go to state 69

    comment       go to state 70
    fvardef       go to state 71
    type          go to state 72
    line_program  go to state 96
    assignation   go to state 75


State 191

   45 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 45 (line_program)


State 192

   44 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 44 (line_program)
