Terminals unused in grammar

    TO
    DOWNTO
    READ
    READLN
    BEG
    END
    THEN
    VAR
    LISTCONTENT
    VALUE
    STRINGQUOTE
    COLON


State 105 conflicts: 12 shift/reduce
State 112 conflicts: 1 shift/reduce


Grammar

    0 $accept: S $end

    1 S: cabecera preprograma

    2 comment: COMMENTLINE
    3        | MULTILINE

    4 cabecera: PROGRAM LOWER STRINGV HIGHER
    5         | PROGRAM LOWER STRINGV DOT STRINGV HIGHER
    6         | PROGRAM QUOTESTRING
    7         | PROGRAM LOWER STRINGV HIGHER cabecera
    8         | PROGRAM LOWER STRINGV DOT STRINGV HIGHER cabecera
    9         | PROGRAM QUOTESTRING cabecera

   10 constdef: DEFINE STRINGV values
   11         | CONST type STRINGV EQ values SEMICOLON

   12 vardef: type STRINGV SEMICOLON
   13       | type STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type STRINGV EQ term SEMICOLON
   15       | type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV LSQUAREPAREN RSQUAREPAREN EQ term SEMICOLON
   17       | type STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type STRINGV COMMA vardef
   20       | type STRINGV EQ term COMMA vardef
   21       | STRINGV operand term COMMA vardef
   22       | STRINGV COMMA vardef
   23       | STRINGV SEMICOLON

   24 type: INTEGER
   25     | SHORT
   26     | LONG
   27     | UNSIGNED_INT
   28     | UNSIGNED_SHORT
   29     | UNSIGNED_LONG
   30     | FLOAT
   31     | DOUBLE
   32     | STRING
   33     | CHAR
   34     | BOOLEAN
   35     | VOID
   36     | STRUCT STRINGV

   37 values: TRUEVAL
   38       | FALSEVAL
   39       | INTNUM
   40       | REALNUM
   41       | QUOTESTRING

   42 preprograma: preprograma programa
   43            | programa

   44 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV LPAREN RPAREN SEMICOLON
   47         | vardef programa
   48         | STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON
   49         | constdef programa
   50         | comment

   51 args: type STRINGV COMMA args
   52     | type STRINGV
   53     | type PROD STRINGV COMMA args
   54     | type PROD STRINGV

   55 lines_program: lines_program line_program
   56              | line_program

   57 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON
   58             | PRINTF LPAREN precontentWrite RPAREN SEMICOLON
   59             | SCANF LPAREN precontentWrite RPAREN SEMICOLON
   60             | STRINGV LPAREN RPAREN SEMICOLON
   61             | IF LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   62             | ELSE IF LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   63             | ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   64             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   66             | DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN term RPAREN SEMICOLON
   67             | WHILE LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   68             | comment
   69             | STRINGV operand SEMICOLON
   70             | RETURN term SEMICOLON
   71             | RETURN SEMICOLON
   72             | vardef
   73             | term
   74             | STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

   75 array: term COMMA array
   76      | term

   77 precontentWrite: contentWrite
   78                | contentWrite LOWER LOWER ENDL

   79 contentWrite: contentWrite COMMA QUOTESTRING
   80             | contentWrite COMMA STRINGV
   81             | QUOTESTRING
   82             | STRINGV

   83 term: atom
   84     | LPAREN term RPAREN
   85     | HYPHEN atom
   86     | EX term
   87     | term operand term SEMICOLON

   88 operand: PLUS
   89        | PLUS EQ
   90        | HYPHEN
   91        | HYPHEN EQ
   92        | HYPHEN HIGHER
   93        | PROD
   94        | DIV
   95        | DIVINT
   96        | MOD
   97        | LOWER
   98        | HIGHER
   99        | LOWER EQ
  100        | HIGHER EQ
  101        | EQ EQ
  102        | AND
  103        | PLUS PLUS
  104        | OR

  105 atom: STRINGV
  106     | values
  107     | STRINGV LSQUAREPAREN atom RSQUAREPAREN


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHILE (258) 66 67
    FOR (259) 64 65
    DO (260) 66
    TO (261)
    DOWNTO (262)
    WRITE (263) 57
    ENDL (264) 78
    READ (265)
    READLN (266)
    PROGRAM (267) 4 5 6 7 8 9
    BEG (268)
    END (269)
    IF (270) 61 62
    THEN (271)
    ELSE (272) 62 63
    AND (273) 102
    OR (274) 104
    LOWER (275) 4 5 7 8 57 78 97 99
    HIGHER (276) 4 5 7 8 92 98 100
    PLUS <valString> (277) 88 89 103
    HYPHEN <valString> (278) 85 90 91 92
    PROD (279) 53 54 93
    DIV (280) 94
    DIVINT (281) 95
    MOD (282) 96
    COMMA (283) 19 20 21 22 51 53 75 79 80
    DOT (284) 5 8
    EQ <valString> (285) 11 14 15 16 17 18 20 64 65 89 91 99 100 101
    COMMENTLINE <valString> (286) 2
    MULTILINE <valString> (287) 3
    VAR (288)
    CONST (289) 11
    DEFINE (290) 10
    LISTCONTENT (291)
    VALUE (292)
    LPAREN (293) 17 18 44 45 46 58 59 60 61 62 64 65 66 67 84
    STRINGQUOTE (294)
    RPAREN (295) 17 18 44 45 46 58 59 60 61 62 64 65 66 67 84
    RSQUAREPAREN (296) 13 15 16 107
    LSQUAREPAREN (297) 13 15 16 107
    COLON (298)
    SEMICOLON <valString> (299) 11 12 13 14 15 16 17 18 23 46 48 57 58 59 60 64 65 66 69 70 71 74 87
    INTEGER (300) 24
    SHORT (301) 25
    LONG (302) 26
    UNSIGNED_INT (303) 27
    UNSIGNED_SHORT (304) 28
    UNSIGNED_LONG (305) 29
    FLOAT (306) 30
    DOUBLE (307) 31
    VOID (308) 35
    OPENCURLYBRACKET (309) 15 44 45 48 61 62 63 64 65 66 67 74
    CLOSECURLYBRACKET (310) 15 44 45 48 61 62 63 64 65 66 67 74
    BOOLEAN (311) 34
    CHAR (312) 33
    PRINTF (313) 58
    SCANF (314) 59
    STRING <valString> (315) 32
    STRINGV <valString> (316) 4 5 7 8 10 11 12 13 14 15 16 17 18 19 20 21 22 23 36 44 45 46 48 51 52 53 54 60 64 65 69 74 80 82 105 107
    QUOTESTRING <valString> (317) 6 9 41 79 81
    TRUEVAL <valString> (318) 37
    FALSEVAL <valString> (319) 38
    INTNUM <valString> (320) 39 64 65
    REALNUM <valString> (321) 40
    RETURN (322) 70 71
    STRUCT (323) 36 48 74
    EX (324) 86


Nonterminals, with rules where they appear

    $accept (70)
        on left: 0
    S (71)
        on left: 1
        on right: 0
    comment <valString> (72)
        on left: 2 3
        on right: 50 68
    cabecera <valString> (73)
        on left: 4 5 6 7 8 9
        on right: 1 7 8 9
    constdef (74)
        on left: 10 11
        on right: 49
    vardef <valString> (75)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23
        on right: 19 20 21 22 47 65 72
    type <valInt> (76)
        on left: 24 25 26 27 28 29 30 31 32 33 34 35 36
        on right: 11 12 13 14 15 16 17 18 19 20 44 45 46 51 52 53 54 64 65
    values <valString> (77)
        on left: 37 38 39 40 41
        on right: 10 11 106
    preprograma <valString> (78)
        on left: 42 43
        on right: 1 42
    programa <valString> (79)
        on left: 44 45 46 47 48 49 50
        on right: 42 43 47 49
    args <valString> (80)
        on left: 51 52 53 54
        on right: 44 51 53
    lines_program <valString> (81)
        on left: 55 56
        on right: 44 45 48 55 61 62 64 65 66 67 74
    line_program <valString> (82)
        on left: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 55 56 63
    array <valString> (83)
        on left: 75 76
        on right: 15 17 75
    precontentWrite <valString> (84)
        on left: 77 78
        on right: 57 58 59
    contentWrite <valString> (85)
        on left: 79 80 81 82
        on right: 77 78 79 80
    term <valString> (86)
        on left: 83 84 85 86 87
        on right: 14 16 20 21 61 62 64 65 66 67 70 73 75 76 84 86 87
    operand <valString> (87)
        on left: 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104
        on right: 21 64 69 87
    atom <valString> (88)
        on left: 105 106 107
        on right: 13 15 83 85 107


State 0

    0 $accept: • S $end

    PROGRAM  shift, and go to state 1

    S         go to state 2
    cabecera  go to state 3


State 1

    4 cabecera: PROGRAM • LOWER STRINGV HIGHER
    5         | PROGRAM • LOWER STRINGV DOT STRINGV HIGHER
    6         | PROGRAM • QUOTESTRING
    7         | PROGRAM • LOWER STRINGV HIGHER cabecera
    8         | PROGRAM • LOWER STRINGV DOT STRINGV HIGHER cabecera
    9         | PROGRAM • QUOTESTRING cabecera

    LOWER        shift, and go to state 4
    QUOTESTRING  shift, and go to state 5


State 2

    0 $accept: S • $end

    $end  shift, and go to state 6


State 3

    1 S: cabecera • preprograma

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 24

    comment      go to state 25
    constdef     go to state 26
    vardef       go to state 27
    type         go to state 28
    preprograma  go to state 29
    programa     go to state 30


State 4

    4 cabecera: PROGRAM LOWER • STRINGV HIGHER
    5         | PROGRAM LOWER • STRINGV DOT STRINGV HIGHER
    7         | PROGRAM LOWER • STRINGV HIGHER cabecera
    8         | PROGRAM LOWER • STRINGV DOT STRINGV HIGHER cabecera

    STRINGV  shift, and go to state 31


State 5

    6 cabecera: PROGRAM QUOTESTRING •
    9         | PROGRAM QUOTESTRING • cabecera

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 6 (cabecera)

    cabecera  go to state 32


State 6

    0 $accept: S $end •

    $default  accept


State 7

    2 comment: COMMENTLINE •

    $default  reduce using rule 2 (comment)


State 8

    3 comment: MULTILINE •

    $default  reduce using rule 3 (comment)


State 9

   11 constdef: CONST • type STRINGV EQ values SEMICOLON

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 34


State 10

   10 constdef: DEFINE • STRINGV values

    STRINGV  shift, and go to state 35


State 11

   24 type: INTEGER •

    $default  reduce using rule 24 (type)


State 12

   25 type: SHORT •

    $default  reduce using rule 25 (type)


State 13

   26 type: LONG •

    $default  reduce using rule 26 (type)


State 14

   27 type: UNSIGNED_INT •

    $default  reduce using rule 27 (type)


State 15

   28 type: UNSIGNED_SHORT •

    $default  reduce using rule 28 (type)


State 16

   29 type: UNSIGNED_LONG •

    $default  reduce using rule 29 (type)


State 17

   30 type: FLOAT •

    $default  reduce using rule 30 (type)


State 18

   31 type: DOUBLE •

    $default  reduce using rule 31 (type)


State 19

   35 type: VOID •

    $default  reduce using rule 35 (type)


State 20

   34 type: BOOLEAN •

    $default  reduce using rule 34 (type)


State 21

   33 type: CHAR •

    $default  reduce using rule 33 (type)


State 22

   32 type: STRING •

    $default  reduce using rule 32 (type)


State 23

   21 vardef: STRINGV • operand term COMMA vardef
   22       | STRINGV • COMMA vardef
   23       | STRINGV • SEMICOLON

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    COMMA      shift, and go to state 46
    EQ         shift, and go to state 47
    SEMICOLON  shift, and go to state 48

    operand  go to state 49


State 24

   36 type: STRUCT • STRINGV
   48 programa: STRUCT • STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    STRINGV  shift, and go to state 50


State 25

   50 programa: comment •

    $default  reduce using rule 50 (programa)


State 26

   49 programa: constdef • programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 24

    comment   go to state 25
    constdef  go to state 26
    vardef    go to state 27
    type      go to state 28
    programa  go to state 51


State 27

   47 programa: vardef • programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 24

    comment   go to state 25
    constdef  go to state 26
    vardef    go to state 27
    type      go to state 28
    programa  go to state 52


State 28

   12 vardef: type • STRINGV SEMICOLON
   13       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type • STRINGV EQ term SEMICOLON
   15       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type • STRINGV LSQUAREPAREN RSQUAREPAREN EQ term SEMICOLON
   17       | type • STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type • STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type • STRINGV COMMA vardef
   20       | type • STRINGV EQ term COMMA vardef
   44 programa: type • STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45         | type • STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type • STRINGV LPAREN RPAREN SEMICOLON

    STRINGV  shift, and go to state 53


State 29

    1 S: cabecera preprograma •
   42 preprograma: preprograma • programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 9
    DEFINE          shift, and go to state 10
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 24

    $default  reduce using rule 1 (S)

    comment   go to state 25
    constdef  go to state 26
    vardef    go to state 27
    type      go to state 28
    programa  go to state 54


State 30

   43 preprograma: programa •

    $default  reduce using rule 43 (preprograma)


State 31

    4 cabecera: PROGRAM LOWER STRINGV • HIGHER
    5         | PROGRAM LOWER STRINGV • DOT STRINGV HIGHER
    7         | PROGRAM LOWER STRINGV • HIGHER cabecera
    8         | PROGRAM LOWER STRINGV • DOT STRINGV HIGHER cabecera

    HIGHER  shift, and go to state 55
    DOT     shift, and go to state 56


State 32

    9 cabecera: PROGRAM QUOTESTRING cabecera •

    $default  reduce using rule 9 (cabecera)


State 33

   36 type: STRUCT • STRINGV

    STRINGV  shift, and go to state 57


State 34

   11 constdef: CONST type • STRINGV EQ values SEMICOLON

    STRINGV  shift, and go to state 58


State 35

   10 constdef: DEFINE STRINGV • values

    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63

    values  go to state 64


State 36

  102 operand: AND •

    $default  reduce using rule 102 (operand)


State 37

  104 operand: OR •

    $default  reduce using rule 104 (operand)


State 38

   97 operand: LOWER •
   99        | LOWER • EQ

    EQ  shift, and go to state 65

    $default  reduce using rule 97 (operand)


State 39

   98 operand: HIGHER •
  100        | HIGHER • EQ

    EQ  shift, and go to state 66

    $default  reduce using rule 98 (operand)


State 40

   88 operand: PLUS •
   89        | PLUS • EQ
  103        | PLUS • PLUS

    PLUS  shift, and go to state 67
    EQ    shift, and go to state 68

    $default  reduce using rule 88 (operand)


State 41

   90 operand: HYPHEN •
   91        | HYPHEN • EQ
   92        | HYPHEN • HIGHER

    HIGHER  shift, and go to state 69
    EQ      shift, and go to state 70

    $default  reduce using rule 90 (operand)


State 42

   93 operand: PROD •

    $default  reduce using rule 93 (operand)


State 43

   94 operand: DIV •

    $default  reduce using rule 94 (operand)


State 44

   95 operand: DIVINT •

    $default  reduce using rule 95 (operand)


State 45

   96 operand: MOD •

    $default  reduce using rule 96 (operand)


State 46

   22 vardef: STRINGV COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 71
    type    go to state 72


State 47

  101 operand: EQ • EQ

    EQ  shift, and go to state 73


State 48

   23 vardef: STRINGV SEMICOLON •

    $default  reduce using rule 23 (vardef)


State 49

   21 vardef: STRINGV operand • term COMMA vardef

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 79
    atom    go to state 80


State 50

   36 type: STRUCT STRINGV •
   48 programa: STRUCT STRINGV • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 81

    $default  reduce using rule 36 (type)


State 51

   49 programa: constdef programa •

    $default  reduce using rule 49 (programa)


State 52

   47 programa: vardef programa •

    $default  reduce using rule 47 (programa)


State 53

   12 vardef: type STRINGV • SEMICOLON
   13       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type STRINGV • EQ term SEMICOLON
   15       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV • LSQUAREPAREN RSQUAREPAREN EQ term SEMICOLON
   17       | type STRINGV • EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV • EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type STRINGV • COMMA vardef
   20       | type STRINGV • EQ term COMMA vardef
   44 programa: type STRINGV • LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45         | type STRINGV • LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV • LPAREN RPAREN SEMICOLON

    COMMA         shift, and go to state 82
    EQ            shift, and go to state 83
    LPAREN        shift, and go to state 84
    LSQUAREPAREN  shift, and go to state 85
    SEMICOLON     shift, and go to state 86


State 54

   42 preprograma: preprograma programa •

    $default  reduce using rule 42 (preprograma)


State 55

    4 cabecera: PROGRAM LOWER STRINGV HIGHER •
    7         | PROGRAM LOWER STRINGV HIGHER • cabecera

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 4 (cabecera)

    cabecera  go to state 87


State 56

    5 cabecera: PROGRAM LOWER STRINGV DOT • STRINGV HIGHER
    8         | PROGRAM LOWER STRINGV DOT • STRINGV HIGHER cabecera

    STRINGV  shift, and go to state 88


State 57

   36 type: STRUCT STRINGV •

    $default  reduce using rule 36 (type)


State 58

   11 constdef: CONST type STRINGV • EQ values SEMICOLON

    EQ  shift, and go to state 89


State 59

   41 values: QUOTESTRING •

    $default  reduce using rule 41 (values)


State 60

   37 values: TRUEVAL •

    $default  reduce using rule 37 (values)


State 61

   38 values: FALSEVAL •

    $default  reduce using rule 38 (values)


State 62

   39 values: INTNUM •

    $default  reduce using rule 39 (values)


State 63

   40 values: REALNUM •

    $default  reduce using rule 40 (values)


State 64

   10 constdef: DEFINE STRINGV values •

    $default  reduce using rule 10 (constdef)


State 65

   99 operand: LOWER EQ •

    $default  reduce using rule 99 (operand)


State 66

  100 operand: HIGHER EQ •

    $default  reduce using rule 100 (operand)


State 67

  103 operand: PLUS PLUS •

    $default  reduce using rule 103 (operand)


State 68

   89 operand: PLUS EQ •

    $default  reduce using rule 89 (operand)


State 69

   92 operand: HYPHEN HIGHER •

    $default  reduce using rule 92 (operand)


State 70

   91 operand: HYPHEN EQ •

    $default  reduce using rule 91 (operand)


State 71

   22 vardef: STRINGV COMMA vardef •

    $default  reduce using rule 22 (vardef)


State 72

   12 vardef: type • STRINGV SEMICOLON
   13       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type • STRINGV EQ term SEMICOLON
   15       | type • STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type • STRINGV LSQUAREPAREN RSQUAREPAREN EQ term SEMICOLON
   17       | type • STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type • STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type • STRINGV COMMA vardef
   20       | type • STRINGV EQ term COMMA vardef

    STRINGV  shift, and go to state 90


State 73

  101 operand: EQ EQ •

    $default  reduce using rule 101 (operand)


State 74

   85 term: HYPHEN • atom

    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63

    values  go to state 78
    atom    go to state 91


State 75

   84 term: LPAREN • term RPAREN

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 92
    atom    go to state 80


State 76

  105 atom: STRINGV •
  107     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    LSQUAREPAREN  shift, and go to state 93

    $default  reduce using rule 105 (atom)


State 77

   86 term: EX • term

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 94
    atom    go to state 80


State 78

  106 atom: values •

    $default  reduce using rule 106 (atom)


State 79

   21 vardef: STRINGV operand term • COMMA vardef
   87 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    COMMA   shift, and go to state 95
    EQ      shift, and go to state 47

    operand  go to state 96


State 80

   83 term: atom •

    $default  reduce using rule 83 (term)


State 81

   48 programa: STRUCT STRINGV OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET SEMICOLON

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 110
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 82

   19 vardef: type STRINGV COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 113
    type    go to state 72


State 83

   14 vardef: type STRINGV EQ • term SEMICOLON
   17       | type STRINGV EQ • STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV EQ • STRINGV LPAREN RPAREN SEMICOLON
   20       | type STRINGV EQ • term COMMA vardef

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 114
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 115
    atom    go to state 80


State 84

   44 programa: type STRINGV LPAREN • args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   45         | type STRINGV LPAREN • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV LPAREN • RPAREN SEMICOLON

    RPAREN          shift, and go to state 116
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 117
    args  go to state 118


State 85

   13 vardef: type STRINGV LSQUAREPAREN • atom RSQUAREPAREN SEMICOLON
   15       | type STRINGV LSQUAREPAREN • atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV LSQUAREPAREN • RSQUAREPAREN EQ term SEMICOLON

    RSQUAREPAREN  shift, and go to state 119
    STRINGV       shift, and go to state 76
    QUOTESTRING   shift, and go to state 59
    TRUEVAL       shift, and go to state 60
    FALSEVAL      shift, and go to state 61
    INTNUM        shift, and go to state 62
    REALNUM       shift, and go to state 63

    values  go to state 78
    atom    go to state 120


State 86

   12 vardef: type STRINGV SEMICOLON •

    $default  reduce using rule 12 (vardef)


State 87

    7 cabecera: PROGRAM LOWER STRINGV HIGHER cabecera •

    $default  reduce using rule 7 (cabecera)


State 88

    5 cabecera: PROGRAM LOWER STRINGV DOT STRINGV • HIGHER
    8         | PROGRAM LOWER STRINGV DOT STRINGV • HIGHER cabecera

    HIGHER  shift, and go to state 121


State 89

   11 constdef: CONST type STRINGV EQ • values SEMICOLON

    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63

    values  go to state 122


State 90

   12 vardef: type STRINGV • SEMICOLON
   13       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN SEMICOLON
   14       | type STRINGV • EQ term SEMICOLON
   15       | type STRINGV • LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   16       | type STRINGV • LSQUAREPAREN RSQUAREPAREN EQ term SEMICOLON
   17       | type STRINGV • EQ STRINGV LPAREN array RPAREN SEMICOLON
   18       | type STRINGV • EQ STRINGV LPAREN RPAREN SEMICOLON
   19       | type STRINGV • COMMA vardef
   20       | type STRINGV • EQ term COMMA vardef

    COMMA         shift, and go to state 82
    EQ            shift, and go to state 83
    LSQUAREPAREN  shift, and go to state 85
    SEMICOLON     shift, and go to state 86


State 91

   85 term: HYPHEN atom •

    $default  reduce using rule 85 (term)


State 92

   84 term: LPAREN term • RPAREN
   87     | term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 47
    RPAREN  shift, and go to state 123

    operand  go to state 96


State 93

  107 atom: STRINGV LSQUAREPAREN • atom RSQUAREPAREN

    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63

    values  go to state 78
    atom    go to state 124


State 94

   86 term: EX term •
   87     | term • operand term SEMICOLON

    $default  reduce using rule 86 (term)

    operand  go to state 96


State 95

   21 vardef: STRINGV operand term COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 125
    type    go to state 72


State 96

   87 term: term operand • term SEMICOLON

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 126
    atom    go to state 80


State 97

   67 line_program: WHILE • LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 127


State 98

   64 line_program: FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 128


State 99

   66 line_program: DO • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN term RPAREN SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 129


State 100

   57 line_program: WRITE • LOWER LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 130


State 101

   61 line_program: IF • LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 131


State 102

   62 line_program: ELSE • IF LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   63             | ELSE • OPENCURLYBRACKET line_program CLOSECURLYBRACKET

    IF                shift, and go to state 132
    OPENCURLYBRACKET  shift, and go to state 133


State 103

   58 line_program: PRINTF • LPAREN precontentWrite RPAREN SEMICOLON

    LPAREN  shift, and go to state 134


State 104

   59 line_program: SCANF • LPAREN precontentWrite RPAREN SEMICOLON

    LPAREN  shift, and go to state 135


State 105

   21 vardef: STRINGV • operand term COMMA vardef
   22       | STRINGV • COMMA vardef
   23       | STRINGV • SEMICOLON
   60 line_program: STRINGV • LPAREN RPAREN SEMICOLON
   69             | STRINGV • operand SEMICOLON
  105 atom: STRINGV •
  107     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    AND           shift, and go to state 36
    OR            shift, and go to state 37
    LOWER         shift, and go to state 38
    HIGHER        shift, and go to state 39
    PLUS          shift, and go to state 40
    HYPHEN        shift, and go to state 41
    PROD          shift, and go to state 42
    DIV           shift, and go to state 43
    DIVINT        shift, and go to state 44
    MOD           shift, and go to state 45
    COMMA         shift, and go to state 46
    EQ            shift, and go to state 47
    LPAREN        shift, and go to state 136
    LSQUAREPAREN  shift, and go to state 93
    SEMICOLON     shift, and go to state 48

    AND       [reduce using rule 105 (atom)]
    OR        [reduce using rule 105 (atom)]
    LOWER     [reduce using rule 105 (atom)]
    HIGHER    [reduce using rule 105 (atom)]
    PLUS      [reduce using rule 105 (atom)]
    HYPHEN    [reduce using rule 105 (atom)]
    PROD      [reduce using rule 105 (atom)]
    DIV       [reduce using rule 105 (atom)]
    DIVINT    [reduce using rule 105 (atom)]
    MOD       [reduce using rule 105 (atom)]
    EQ        [reduce using rule 105 (atom)]
    LPAREN    [reduce using rule 105 (atom)]
    $default  reduce using rule 105 (atom)

    operand  go to state 137

    shift/reduce conflict on token LPAREN:
      105 atom: STRINGV •
       60 line_program: STRINGV • LPAREN RPAREN SEMICOLON
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • LPAREN RPAREN SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                             $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                 CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 60: STRINGV • LPAREN RPAREN SEMICOLON
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • LPAREN term RPAREN CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                             $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                           CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 55: lines_program                      line_program
                                                                             ↳ 56: line_program                 ↳ 73: term
                                                                                   ↳ 73: term                         ↳ 84: LPAREN term RPAREN
                                                                                         ↳ 83: atom
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token PLUS:
      105 atom: STRINGV •
       88 operand: • PLUS
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • PLUS term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                        $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                            CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand      term COMMA vardef
                                                                                           ↳ 88: • PLUS
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • PLUS term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                        $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                      CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand    term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 88: PLUS
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token PLUS:
      105 atom: STRINGV •
       89 operand: • PLUS EQ
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • PLUS EQ term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                           $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                               CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand         term COMMA vardef
                                                                                           ↳ 89: • PLUS EQ
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • PLUS term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                        $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                      CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand    term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 88: PLUS
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token HYPHEN:
      105 atom: STRINGV •
       90 operand: • HYPHEN
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HYPHEN term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                          $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                              CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand        term COMMA vardef
                                                                                           ↳ 90: • HYPHEN
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HYPHEN atom CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                      $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                    CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 55: lines_program                      line_program
                                                                             ↳ 56: line_program                 ↳ 73: term
                                                                                   ↳ 73: term                         ↳ 85: HYPHEN atom
                                                                                         ↳ 83: atom
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token HYPHEN:
      105 atom: STRINGV •
       91 operand: • HYPHEN EQ
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HYPHEN EQ term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                             $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                 CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand           term COMMA vardef
                                                                                           ↳ 91: • HYPHEN EQ
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HYPHEN atom CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                      $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                    CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 55: lines_program                      line_program
                                                                             ↳ 56: line_program                 ↳ 73: term
                                                                                   ↳ 73: term                         ↳ 85: HYPHEN atom
                                                                                         ↳ 83: atom
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token HYPHEN:
      105 atom: STRINGV •
       92 operand: • HYPHEN HIGHER
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HYPHEN HIGHER term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                                 $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                     CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand               term COMMA vardef
                                                                                           ↳ 92: • HYPHEN HIGHER
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HYPHEN atom CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                      $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                    CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 55: lines_program                      line_program
                                                                             ↳ 56: line_program                 ↳ 73: term
                                                                                   ↳ 73: term                         ↳ 85: HYPHEN atom
                                                                                         ↳ 83: atom
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token PROD:
      105 atom: STRINGV •
       93 operand: • PROD
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • PROD term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                        $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                            CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand      term COMMA vardef
                                                                                           ↳ 93: • PROD
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • PROD term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                        $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                      CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand    term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 93: PROD
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token DIV:
      105 atom: STRINGV •
       94 operand: • DIV
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • DIV term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                       $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                           CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand     term COMMA vardef
                                                                                           ↳ 94: • DIV
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • DIV term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                       $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                     CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand   term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 94: DIV
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token DIVINT:
      105 atom: STRINGV •
       95 operand: • DIVINT
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • DIVINT term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                          $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                              CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand        term COMMA vardef
                                                                                           ↳ 95: • DIVINT
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • DIVINT term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                          $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                        CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand      term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 95: DIVINT
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token MOD:
      105 atom: STRINGV •
       96 operand: • MOD
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • MOD term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                       $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                           CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand     term COMMA vardef
                                                                                           ↳ 96: • MOD
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • MOD term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                       $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                     CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand   term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 96: MOD
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token LOWER:
      105 atom: STRINGV •
       97 operand: • LOWER
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • LOWER term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                         $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                             CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand       term COMMA vardef
                                                                                           ↳ 97: • LOWER
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • LOWER term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                         $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                       CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand     term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 97: LOWER
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token HIGHER:
      105 atom: STRINGV •
       98 operand: • HIGHER
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HIGHER term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                          $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                              CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand        term COMMA vardef
                                                                                           ↳ 98: • HIGHER
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HIGHER term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                          $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                        CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand      term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 98: HIGHER
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token LOWER:
      105 atom: STRINGV •
       99 operand: • LOWER EQ
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • LOWER EQ term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                            $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand          term COMMA vardef
                                                                                           ↳ 99: • LOWER EQ
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • LOWER term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                         $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                       CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand     term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 97: LOWER
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token HIGHER:
      105 atom: STRINGV •
      100 operand: • HIGHER EQ
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HIGHER EQ term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                              $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                  CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand            term COMMA vardef
                                                                                           ↳ 100: • HIGHER EQ
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • HIGHER term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                          $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                        CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand      term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 98: HIGHER
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token EQ:
      105 atom: STRINGV •
      101 operand: • EQ EQ
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • EQ EQ term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                          $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                              CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand        term COMMA vardef
                                                                                           ↳ 101: • EQ EQ
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • EQ EQ term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                          $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                        CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand      term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 101: EQ EQ
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token AND:
      105 atom: STRINGV •
      102 operand: • AND
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • AND term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                        $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                            CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand      term COMMA vardef
                                                                                           ↳ 102: • AND
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • AND term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                        $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                      CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand    term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 102: AND
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token PLUS:
      105 atom: STRINGV •
      103 operand: • PLUS PLUS
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • PLUS PLUS term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                              $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                  CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand            term COMMA vardef
                                                                                           ↳ 103: • PLUS PLUS
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • PLUS term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                        $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                      CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand    term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 88: PLUS
                                                                                               ↳ 105: STRINGV •

    shift/reduce conflict on token OR:
      105 atom: STRINGV •
      104 operand: • OR
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • OR term COMMA vardef CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                       $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                           CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 72: vardef
                                                                             ↳ 21: STRINGV operand     term COMMA vardef
                                                                                           ↳ 104: • OR
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET STRINGV • OR term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                                       $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                                     CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 56: line_program
                                                                             ↳ 73: term
                                                                                   ↳ 87: term                   operand   term SEMICOLON
                                                                                         ↳ 83: atom             ↳ 104: OR
                                                                                               ↳ 105: STRINGV •



State 106

   70 line_program: RETURN • term SEMICOLON
   71             | RETURN • SEMICOLON

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    SEMICOLON    shift, and go to state 138
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 139
    atom    go to state 80


State 107

   36 type: STRUCT • STRINGV
   74 line_program: STRUCT • STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    STRINGV  shift, and go to state 140


State 108

   68 line_program: comment •

    $default  reduce using rule 68 (line_program)


State 109

   72 line_program: vardef •

    $default  reduce using rule 72 (line_program)


State 110

   48 programa: STRUCT STRINGV OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET SEMICOLON
   55 lines_program: lines_program • line_program

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 141
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 111

   56 lines_program: line_program •

    $default  reduce using rule 56 (lines_program)


State 112

   73 line_program: term •
   87 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 47

    HYPHEN    [reduce using rule 73 (line_program)]
    $default  reduce using rule 73 (line_program)

    operand  go to state 96

    shift/reduce conflict on token HYPHEN:
       73 line_program: term •
       90 operand: • HYPHEN
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET term • HYPHEN term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                    $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                        CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 73: term
                                                                             ↳ 87: term operand        term SEMICOLON
                                                                                        ↳ 90: • HYPHEN
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET term • HYPHEN atom CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                      $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                    CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 55: lines_program      line_program
                                                                             ↳ 56: line_program ↳ 73: term
                                                                                   ↳ 73: term •       ↳ 85: HYPHEN atom

    shift/reduce conflict on token HYPHEN:
       73 line_program: term •
       91 operand: • HYPHEN EQ
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET term • HYPHEN EQ term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                       $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                           CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 73: term
                                                                             ↳ 87: term operand           term SEMICOLON
                                                                                        ↳ 91: • HYPHEN EQ
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET term • HYPHEN atom CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                      $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                    CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 55: lines_program      line_program
                                                                             ↳ 56: line_program ↳ 73: term
                                                                                   ↳ 73: term •       ↳ 85: HYPHEN atom

    shift/reduce conflict on token HYPHEN:
       73 line_program: term •
       92 operand: • HYPHEN HIGHER
      First example: cabecera STRUCT STRINGV OPENCURLYBRACKET term • HYPHEN HIGHER term SEMICOLON CLOSECURLYBRACKET SEMICOLON $end
      Shift derivation
        $accept
        ↳ 0: S                                                                                                                                           $end
             ↳ 1: cabecera programa
                           ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                               CLOSECURLYBRACKET SEMICOLON
                                                                 ↳ 56: line_program
                                                                       ↳ 73: term
                                                                             ↳ 87: term operand               term SEMICOLON
                                                                                        ↳ 92: • HYPHEN HIGHER
      Second example: cabecera STRUCT STRINGV OPENCURLYBRACKET term • HYPHEN atom CLOSECURLYBRACKET SEMICOLON $end
      Reduce derivation
        $accept
        ↳ 0: S                                                                                                                                      $end
             ↳ 1: cabecera preprograma
                           ↳ 43: programa
                                 ↳ 48: STRUCT STRINGV OPENCURLYBRACKET lines_program                                    CLOSECURLYBRACKET SEMICOLON
                                                                       ↳ 55: lines_program      line_program
                                                                             ↳ 56: line_program ↳ 73: term
                                                                                   ↳ 73: term •       ↳ 85: HYPHEN atom



State 113

   19 vardef: type STRINGV COMMA vardef •

    $default  reduce using rule 19 (vardef)


State 114

   17 vardef: type STRINGV EQ STRINGV • LPAREN array RPAREN SEMICOLON
   18       | type STRINGV EQ STRINGV • LPAREN RPAREN SEMICOLON
  105 atom: STRINGV •
  107     | STRINGV • LSQUAREPAREN atom RSQUAREPAREN

    LPAREN        shift, and go to state 143
    LSQUAREPAREN  shift, and go to state 93

    $default  reduce using rule 105 (atom)


State 115

   14 vardef: type STRINGV EQ term • SEMICOLON
   20       | type STRINGV EQ term • COMMA vardef
   87 term: term • operand term SEMICOLON

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    COMMA      shift, and go to state 144
    EQ         shift, and go to state 47
    SEMICOLON  shift, and go to state 145

    operand  go to state 96


State 116

   45 programa: type STRINGV LPAREN RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   46         | type STRINGV LPAREN RPAREN • SEMICOLON

    SEMICOLON         shift, and go to state 146
    OPENCURLYBRACKET  shift, and go to state 147


State 117

   51 args: type • STRINGV COMMA args
   52     | type • STRINGV
   53     | type • PROD STRINGV COMMA args
   54     | type • PROD STRINGV

    PROD     shift, and go to state 148
    STRINGV  shift, and go to state 149


State 118

   44 programa: type STRINGV LPAREN args • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 150


State 119

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN • EQ term SEMICOLON

    EQ  shift, and go to state 151


State 120

   13 vardef: type STRINGV LSQUAREPAREN atom • RSQUAREPAREN SEMICOLON
   15       | type STRINGV LSQUAREPAREN atom • RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    RSQUAREPAREN  shift, and go to state 152


State 121

    5 cabecera: PROGRAM LOWER STRINGV DOT STRINGV HIGHER •
    8         | PROGRAM LOWER STRINGV DOT STRINGV HIGHER • cabecera

    PROGRAM  shift, and go to state 1

    $default  reduce using rule 5 (cabecera)

    cabecera  go to state 153


State 122

   11 constdef: CONST type STRINGV EQ values • SEMICOLON

    SEMICOLON  shift, and go to state 154


State 123

   84 term: LPAREN term RPAREN •

    $default  reduce using rule 84 (term)


State 124

  107 atom: STRINGV LSQUAREPAREN atom • RSQUAREPAREN

    RSQUAREPAREN  shift, and go to state 155


State 125

   21 vardef: STRINGV operand term COMMA vardef •

    $default  reduce using rule 21 (vardef)


State 126

   87 term: term • operand term SEMICOLON
   87     | term operand term • SEMICOLON

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    EQ         shift, and go to state 47
    SEMICOLON  shift, and go to state 156

    operand  go to state 96


State 127

   67 line_program: WHILE LPAREN • term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 157
    atom    go to state 80


State 128

   64 line_program: FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 158


State 129

   66 line_program: DO OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET WHILE LPAREN term RPAREN SEMICOLON

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 159
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 130

   57 line_program: WRITE LOWER • LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 160


State 131

   61 line_program: IF LPAREN • term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 161
    atom    go to state 80


State 132

   62 line_program: ELSE IF • LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 162


State 133

   63 line_program: ELSE OPENCURLYBRACKET • line_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 163
    term          go to state 112
    atom          go to state 80


State 134

   58 line_program: PRINTF LPAREN • precontentWrite RPAREN SEMICOLON

    STRINGV      shift, and go to state 164
    QUOTESTRING  shift, and go to state 165

    precontentWrite  go to state 166
    contentWrite     go to state 167


State 135

   59 line_program: SCANF LPAREN • precontentWrite RPAREN SEMICOLON

    STRINGV      shift, and go to state 164
    QUOTESTRING  shift, and go to state 165

    precontentWrite  go to state 168
    contentWrite     go to state 167


State 136

   60 line_program: STRINGV LPAREN • RPAREN SEMICOLON

    RPAREN  shift, and go to state 169


State 137

   21 vardef: STRINGV operand • term COMMA vardef
   69 line_program: STRINGV operand • SEMICOLON

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    SEMICOLON    shift, and go to state 170
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 79
    atom    go to state 80


State 138

   71 line_program: RETURN SEMICOLON •

    $default  reduce using rule 71 (line_program)


State 139

   70 line_program: RETURN term • SEMICOLON
   87 term: term • operand term SEMICOLON

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    EQ         shift, and go to state 47
    SEMICOLON  shift, and go to state 171

    operand  go to state 96


State 140

   36 type: STRUCT STRINGV •
   74 line_program: STRUCT STRINGV • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 172

    $default  reduce using rule 36 (type)


State 141

   48 programa: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 173


State 142

   55 lines_program: lines_program line_program •

    $default  reduce using rule 55 (lines_program)


State 143

   17 vardef: type STRINGV EQ STRINGV LPAREN • array RPAREN SEMICOLON
   18       | type STRINGV EQ STRINGV LPAREN • RPAREN SEMICOLON

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    RPAREN       shift, and go to state 174
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    array   go to state 175
    term    go to state 176
    atom    go to state 80


State 144

   20 vardef: type STRINGV EQ term COMMA • vardef

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 177
    type    go to state 72


State 145

   14 vardef: type STRINGV EQ term SEMICOLON •

    $default  reduce using rule 14 (vardef)


State 146

   46 programa: type STRINGV LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 46 (programa)


State 147

   45 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 178
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 148

   53 args: type PROD • STRINGV COMMA args
   54     | type PROD • STRINGV

    STRINGV  shift, and go to state 179


State 149

   51 args: type STRINGV • COMMA args
   52     | type STRINGV •

    COMMA  shift, and go to state 180

    $default  reduce using rule 52 (args)


State 150

   44 programa: type STRINGV LPAREN args RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 181


State 151

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN EQ • term SEMICOLON

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 182
    atom    go to state 80


State 152

   13 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN • SEMICOLON
   15       | type STRINGV LSQUAREPAREN atom RSQUAREPAREN • EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    EQ         shift, and go to state 183
    SEMICOLON  shift, and go to state 184


State 153

    8 cabecera: PROGRAM LOWER STRINGV DOT STRINGV HIGHER cabecera •

    $default  reduce using rule 8 (cabecera)


State 154

   11 constdef: CONST type STRINGV EQ values SEMICOLON •

    $default  reduce using rule 11 (constdef)


State 155

  107 atom: STRINGV LSQUAREPAREN atom RSQUAREPAREN •

    $default  reduce using rule 107 (atom)


State 156

   87 term: term operand term SEMICOLON •

    $default  reduce using rule 87 (term)


State 157

   67 line_program: WHILE LPAREN term • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   87 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 47
    RPAREN  shift, and go to state 185

    operand  go to state 96


State 158

   64 line_program: FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    STRINGV  shift, and go to state 186


State 159

   55 lines_program: lines_program • line_program
   66 line_program: DO OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET WHILE LPAREN term RPAREN SEMICOLON

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 187
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 160

   57 line_program: WRITE LOWER LOWER • precontentWrite SEMICOLON

    STRINGV      shift, and go to state 164
    QUOTESTRING  shift, and go to state 165

    precontentWrite  go to state 188
    contentWrite     go to state 167


State 161

   61 line_program: IF LPAREN term • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   87 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 47
    RPAREN  shift, and go to state 189

    operand  go to state 96


State 162

   62 line_program: ELSE IF LPAREN • term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 190
    atom    go to state 80


State 163

   63 line_program: ELSE OPENCURLYBRACKET line_program • CLOSECURLYBRACKET

    CLOSECURLYBRACKET  shift, and go to state 191


State 164

   82 contentWrite: STRINGV •

    $default  reduce using rule 82 (contentWrite)


State 165

   81 contentWrite: QUOTESTRING •

    $default  reduce using rule 81 (contentWrite)


State 166

   58 line_program: PRINTF LPAREN precontentWrite • RPAREN SEMICOLON

    RPAREN  shift, and go to state 192


State 167

   77 precontentWrite: contentWrite •
   78                | contentWrite • LOWER LOWER ENDL
   79 contentWrite: contentWrite • COMMA QUOTESTRING
   80             | contentWrite • COMMA STRINGV

    LOWER  shift, and go to state 193
    COMMA  shift, and go to state 194

    $default  reduce using rule 77 (precontentWrite)


State 168

   59 line_program: SCANF LPAREN precontentWrite • RPAREN SEMICOLON

    RPAREN  shift, and go to state 195


State 169

   60 line_program: STRINGV LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 196


State 170

   69 line_program: STRINGV operand SEMICOLON •

    $default  reduce using rule 69 (line_program)


State 171

   70 line_program: RETURN term SEMICOLON •

    $default  reduce using rule 70 (line_program)


State 172

   74 line_program: STRUCT STRINGV OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET SEMICOLON

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 197
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 173

   48 programa: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 48 (programa)


State 174

   18 vardef: type STRINGV EQ STRINGV LPAREN RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 198


State 175

   17 vardef: type STRINGV EQ STRINGV LPAREN array • RPAREN SEMICOLON

    RPAREN  shift, and go to state 199


State 176

   75 array: term • COMMA array
   76      | term •
   87 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    COMMA   shift, and go to state 200
    EQ      shift, and go to state 47

    $default  reduce using rule 76 (array)

    operand  go to state 96


State 177

   20 vardef: type STRINGV EQ term COMMA vardef •

    $default  reduce using rule 20 (vardef)


State 178

   45 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   55 lines_program: lines_program • line_program

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 201
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 179

   53 args: type PROD STRINGV • COMMA args
   54     | type PROD STRINGV •

    COMMA  shift, and go to state 202

    $default  reduce using rule 54 (args)


State 180

   51 args: type STRINGV COMMA • args

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 117
    args  go to state 203


State 181

   44 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 204
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 182

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN EQ term • SEMICOLON
   87 term: term • operand term SEMICOLON

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    EQ         shift, and go to state 47
    SEMICOLON  shift, and go to state 205

    operand  go to state 96


State 183

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ • OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 206


State 184

   13 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN SEMICOLON •

    $default  reduce using rule 13 (vardef)


State 185

   67 line_program: WHILE LPAREN term RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 207


State 186

   64 line_program: FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    EQ  shift, and go to state 208


State 187

   66 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • WHILE LPAREN term RPAREN SEMICOLON

    WHILE  shift, and go to state 209


State 188

   57 line_program: WRITE LOWER LOWER precontentWrite • SEMICOLON

    SEMICOLON  shift, and go to state 210


State 189

   61 line_program: IF LPAREN term RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 211


State 190

   62 line_program: ELSE IF LPAREN term • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   87 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 47
    RPAREN  shift, and go to state 212

    operand  go to state 96


State 191

   63 line_program: ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET •

    $default  reduce using rule 63 (line_program)


State 192

   58 line_program: PRINTF LPAREN precontentWrite RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 213


State 193

   78 precontentWrite: contentWrite LOWER • LOWER ENDL

    LOWER  shift, and go to state 214


State 194

   79 contentWrite: contentWrite COMMA • QUOTESTRING
   80             | contentWrite COMMA • STRINGV

    STRINGV      shift, and go to state 215
    QUOTESTRING  shift, and go to state 216


State 195

   59 line_program: SCANF LPAREN precontentWrite RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 217


State 196

   60 line_program: STRINGV LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 60 (line_program)


State 197

   55 lines_program: lines_program • line_program
   74 line_program: STRUCT STRINGV OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET SEMICOLON

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 218
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 198

   18 vardef: type STRINGV EQ STRINGV LPAREN RPAREN SEMICOLON •

    $default  reduce using rule 18 (vardef)


State 199

   17 vardef: type STRINGV EQ STRINGV LPAREN array RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 219


State 200

   75 array: term COMMA • array

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    array   go to state 220
    term    go to state 176
    atom    go to state 80


State 201

   45 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 45 (programa)


State 202

   53 args: type PROD STRINGV COMMA • args

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRUCT          shift, and go to state 33

    type  go to state 117
    args  go to state 221


State 203

   51 args: type STRINGV COMMA args •

    $default  reduce using rule 51 (args)


State 204

   44 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   55 lines_program: lines_program • line_program

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 222
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 205

   16 vardef: type STRINGV LSQUAREPAREN RSQUAREPAREN EQ term SEMICOLON •

    $default  reduce using rule 16 (vardef)


State 206

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET • array CLOSECURLYBRACKET SEMICOLON

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    array   go to state 223
    term    go to state 176
    atom    go to state 80


State 207

   67 line_program: WHILE LPAREN term RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 224
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 208

   64 line_program: FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTNUM  shift, and go to state 225


State 209

   66 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE • LPAREN term RPAREN SEMICOLON

    LPAREN  shift, and go to state 226


State 210

   57 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON •

    $default  reduce using rule 57 (line_program)


State 211

   61 line_program: IF LPAREN term RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 227
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 212

   62 line_program: ELSE IF LPAREN term RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 228


State 213

   58 line_program: PRINTF LPAREN precontentWrite RPAREN SEMICOLON •

    $default  reduce using rule 58 (line_program)


State 214

   78 precontentWrite: contentWrite LOWER LOWER • ENDL

    ENDL  shift, and go to state 229


State 215

   80 contentWrite: contentWrite COMMA STRINGV •

    $default  reduce using rule 80 (contentWrite)


State 216

   79 contentWrite: contentWrite COMMA QUOTESTRING •

    $default  reduce using rule 79 (contentWrite)


State 217

   59 line_program: SCANF LPAREN precontentWrite RPAREN SEMICOLON •

    $default  reduce using rule 59 (line_program)


State 218

   74 line_program: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 230


State 219

   17 vardef: type STRINGV EQ STRINGV LPAREN array RPAREN SEMICOLON •

    $default  reduce using rule 17 (vardef)


State 220

   75 array: term COMMA array •

    $default  reduce using rule 75 (array)


State 221

   53 args: type PROD STRINGV COMMA args •

    $default  reduce using rule 53 (args)


State 222

   44 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 44 (programa)


State 223

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array • CLOSECURLYBRACKET SEMICOLON

    CLOSECURLYBRACKET  shift, and go to state 231


State 224

   55 lines_program: lines_program • line_program
   67 line_program: WHILE LPAREN term RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 232
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 225

   64 line_program: FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    SEMICOLON  shift, and go to state 233


State 226

   66 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN • term RPAREN SEMICOLON

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 234
    atom    go to state 80


State 227

   55 lines_program: lines_program • line_program
   61 line_program: IF LPAREN term RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 235
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 228

   62 line_program: ELSE IF LPAREN term RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 236
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 229

   78 precontentWrite: contentWrite LOWER LOWER ENDL •

    $default  reduce using rule 78 (precontentWrite)


State 230

   74 line_program: STRUCT STRINGV OPENCURLYBRACKET lines_program CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 74 (line_program)


State 231

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 237


State 232

   67 line_program: WHILE LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 67 (line_program)


State 233

   64 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • term STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    HYPHEN       shift, and go to state 74
    LPAREN       shift, and go to state 75
    STRINGV      shift, and go to state 76
    QUOTESTRING  shift, and go to state 59
    TRUEVAL      shift, and go to state 60
    FALSEVAL     shift, and go to state 61
    INTNUM       shift, and go to state 62
    REALNUM      shift, and go to state 63
    EX           shift, and go to state 77

    values  go to state 78
    term    go to state 238
    atom    go to state 80


State 234

   66 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN term • RPAREN SEMICOLON
   87 term: term • operand term SEMICOLON

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 47
    RPAREN  shift, and go to state 239

    operand  go to state 96


State 235

   61 line_program: IF LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 61 (line_program)


State 236

   55 lines_program: lines_program • line_program
   62 line_program: ELSE IF LPAREN term RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 240
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 237

   15 vardef: type STRINGV LSQUAREPAREN atom RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 15 (vardef)


State 238

   64 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term • STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   65             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term • SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   87 term: term • operand term SEMICOLON

    AND        shift, and go to state 36
    OR         shift, and go to state 37
    LOWER      shift, and go to state 38
    HIGHER     shift, and go to state 39
    PLUS       shift, and go to state 40
    HYPHEN     shift, and go to state 41
    PROD       shift, and go to state 42
    DIV        shift, and go to state 43
    DIVINT     shift, and go to state 44
    MOD        shift, and go to state 45
    EQ         shift, and go to state 47
    SEMICOLON  shift, and go to state 241
    STRINGV    shift, and go to state 242

    operand  go to state 96


State 239

   66 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN term RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 243


State 240

   62 line_program: ELSE IF LPAREN term RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 62 (line_program)


State 241

   65 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term SEMICOLON • vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 23
    STRUCT          shift, and go to state 33

    vardef  go to state 244
    type    go to state 72


State 242

   64 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term STRINGV • operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    AND     shift, and go to state 36
    OR      shift, and go to state 37
    LOWER   shift, and go to state 38
    HIGHER  shift, and go to state 39
    PLUS    shift, and go to state 40
    HYPHEN  shift, and go to state 41
    PROD    shift, and go to state 42
    DIV     shift, and go to state 43
    DIVINT  shift, and go to state 44
    MOD     shift, and go to state 45
    EQ      shift, and go to state 47

    operand  go to state 245


State 243

   66 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN term RPAREN SEMICOLON •

    $default  reduce using rule 66 (line_program)


State 244

   65 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term SEMICOLON vardef • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 246


State 245

   64 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term STRINGV operand • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 247


State 246

   65 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term SEMICOLON vardef RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 248


State 247

   64 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term STRINGV operand RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 249


State 248

   65 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 250
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 249

   64 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET

    WHILE           shift, and go to state 97
    FOR             shift, and go to state 98
    DO              shift, and go to state 99
    WRITE           shift, and go to state 100
    IF              shift, and go to state 101
    ELSE            shift, and go to state 102
    HYPHEN          shift, and go to state 74
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    LPAREN          shift, and go to state 75
    INTEGER         shift, and go to state 11
    SHORT           shift, and go to state 12
    LONG            shift, and go to state 13
    UNSIGNED_INT    shift, and go to state 14
    UNSIGNED_SHORT  shift, and go to state 15
    UNSIGNED_LONG   shift, and go to state 16
    FLOAT           shift, and go to state 17
    DOUBLE          shift, and go to state 18
    VOID            shift, and go to state 19
    BOOLEAN         shift, and go to state 20
    CHAR            shift, and go to state 21
    PRINTF          shift, and go to state 103
    SCANF           shift, and go to state 104
    STRING          shift, and go to state 22
    STRINGV         shift, and go to state 105
    QUOTESTRING     shift, and go to state 59
    TRUEVAL         shift, and go to state 60
    FALSEVAL        shift, and go to state 61
    INTNUM          shift, and go to state 62
    REALNUM         shift, and go to state 63
    RETURN          shift, and go to state 106
    STRUCT          shift, and go to state 107
    EX              shift, and go to state 77

    comment        go to state 108
    vardef         go to state 109
    type           go to state 72
    values         go to state 78
    lines_program  go to state 251
    line_program   go to state 111
    term           go to state 112
    atom           go to state 80


State 250

   55 lines_program: lines_program • line_program
   65 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 252
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 251

   55 lines_program: lines_program • line_program
   64 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET

    WHILE              shift, and go to state 97
    FOR                shift, and go to state 98
    DO                 shift, and go to state 99
    WRITE              shift, and go to state 100
    IF                 shift, and go to state 101
    ELSE               shift, and go to state 102
    HYPHEN             shift, and go to state 74
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    LPAREN             shift, and go to state 75
    INTEGER            shift, and go to state 11
    SHORT              shift, and go to state 12
    LONG               shift, and go to state 13
    UNSIGNED_INT       shift, and go to state 14
    UNSIGNED_SHORT     shift, and go to state 15
    UNSIGNED_LONG      shift, and go to state 16
    FLOAT              shift, and go to state 17
    DOUBLE             shift, and go to state 18
    VOID               shift, and go to state 19
    CLOSECURLYBRACKET  shift, and go to state 253
    BOOLEAN            shift, and go to state 20
    CHAR               shift, and go to state 21
    PRINTF             shift, and go to state 103
    SCANF              shift, and go to state 104
    STRING             shift, and go to state 22
    STRINGV            shift, and go to state 105
    QUOTESTRING        shift, and go to state 59
    TRUEVAL            shift, and go to state 60
    FALSEVAL           shift, and go to state 61
    INTNUM             shift, and go to state 62
    REALNUM            shift, and go to state 63
    RETURN             shift, and go to state 106
    STRUCT             shift, and go to state 107
    EX                 shift, and go to state 77

    comment       go to state 108
    vardef        go to state 109
    type          go to state 72
    values        go to state 78
    line_program  go to state 142
    term          go to state 112
    atom          go to state 80


State 252

   65 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term SEMICOLON vardef RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 65 (line_program)


State 253

   64 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON term STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 64 (line_program)
