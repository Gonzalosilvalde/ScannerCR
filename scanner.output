Terminals unused in grammar

    TO
    DOWNTO
    READ
    READLN
    BEG
    END
    THEN
    DOT
    VAR
    LISTCONTENT
    VALUE
    COLON


Grammar

    0 $accept: S $end

    1 S: cabecera subcabecera preprograma
    2  | cabecera comment subcabecera preprograma
    3  | cabecera subcabecera comment preprograma
    4  | cabecera comment subcabecera comment preprograma

    5 comment: COMMENTLINE
    6        | MULTILINE

    7 subcabecera: STRINGV SEMICOLON
    8            | STRINGV subcabecera

    9 cabecera: PROGRAM LOWER STRINGV HIGHER
   10         | PROGRAM STRINGQUOTE

   11 constdef: DEFINE STRINGV values SEMICOLON
   12         | CONST type STRINGV EQ values SEMICOLON

   13 fvardef: type STRINGV SEMICOLON
   14        | type STRINGV EQ values SEMICOLON
   15        | type STRINGV EQ STRINGV SEMICOLON
   16        | type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

   17 vardef: type STRINGV SEMICOLON
   18       | type STRINGV EQ values SEMICOLON
   19       | type STRINGV EQ STRINGV SEMICOLON

   20 type: INTEGER
   21     | SHORT
   22     | LONG
   23     | UNSIGNED_INT
   24     | UNSIGNED_SHORT
   25     | UNSIGNED_LONG
   26     | FLOAT
   27     | DOUBLE
   28     | STRING
   29     | CHAR
   30     | BOOLEAN

   31 values: TRUEVAL
   32       | FALSEVAL
   33       | INTNUM
   34       | REALNUM
   35       | QUOTESTRING

   36 preprograma: preprograma programa
   37            | programa

   38 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | vardef programa
   41         | constdef programa

   42 args: type STRINGV COMMA args
   43     | type STRINGV

   44 lines_program: lines_program line_program
   45              | line_program

   46 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | assignation
   48             | IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | comment
   56             | STRINGV operand SEMICOLON
   57             | RETURN exp SEMICOLON
   58             | fvardef

   59 array: values COMMA array
   60      | values

   61 precontentWrite: contentWrite
   62                | contentWrite LOWER LOWER ENDL

   63 contentWrite: contentWrite LOWER LOWER QUOTESTRING
   64             | contentWrite LOWER LOWER STRINGV
   65             | contentWrite PLUS QUOTESTRING
   66             | contentWrite PLUS STRINGV
   67             | QUOTESTRING
   68             | STRINGV

   69 assignation: STRINGV EQ exp SEMICOLON
   70            | STRINGV EQ exp

   71 exp: exp operand term
   72    | term

   73 term: atom
   74     | LPAREN exp RPAREN
   75     | HYPHEN atom
   76     | EX exp

   77 operand: PLUS
   78        | PLUS EQ
   79        | HYPHEN
   80        | HYPHEN EQ
   81        | PROD
   82        | DIV
   83        | DIVINT
   84        | MOD
   85        | LOWER
   86        | HIGHER
   87        | LOWER EQ
   88        | HIGHER EQ
   89        | EQ
   90        | AND
   91        | PLUS PLUS
   92        | OR

   93 atom: STRINGV
   94     | values


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    WHILE (258) 53 54
    FOR (259) 51 52
    DO (260) 53
    TO (261)
    DOWNTO (262)
    WRITE (263) 46
    ENDL (264) 62
    READ (265)
    READLN (266)
    PROGRAM (267) 9 10
    BEG (268)
    END (269)
    IF (270) 48 49
    THEN (271)
    ELSE (272) 49 50
    AND (273) 90
    OR (274) 92
    LOWER (275) 9 46 62 63 64 85 87
    HIGHER (276) 9 86 88
    PLUS <valString> (277) 65 66 77 78 91
    HYPHEN <valString> (278) 75 79 80
    PROD (279) 81
    DIV (280) 82
    DIVINT (281) 83
    MOD (282) 84
    COMMA (283) 42 59
    DOT (284)
    EQ <valString> (285) 12 14 15 16 18 19 51 52 69 70 78 80 87 88 89
    COMMENTLINE <valString> (286) 5
    MULTILINE <valString> (287) 6
    VAR (288)
    CONST (289) 12
    DEFINE (290) 11
    LISTCONTENT (291)
    VALUE (292)
    LPAREN (293) 38 39 48 49 51 52 53 54 74
    STRINGQUOTE (294) 10
    RPAREN (295) 38 39 48 49 51 52 53 54 74
    RSQUAREPAREN (296) 16
    LSQUAREPAREN (297) 16
    COLON (298)
    SEMICOLON <valString> (299) 7 11 12 13 14 15 16 17 18 19 46 51 52 53 56 57 69
    INTEGER (300) 20
    SHORT (301) 21
    LONG (302) 22
    UNSIGNED_INT (303) 23
    UNSIGNED_SHORT (304) 24
    UNSIGNED_LONG (305) 25
    FLOAT (306) 26
    DOUBLE (307) 27
    OPENCURLYBRACKET (308) 16 38 39 48 49 50 51 52 53 54
    CLOSECURLYBRACKET (309) 16 38 39 48 49 50 51 52 53 54
    BOOLEAN (310) 30
    CHAR (311) 29
    STRING <valString> (312) 28
    STRINGV <valString> (313) 7 8 9 11 12 13 14 15 16 17 18 19 38 39 42 43 51 52 56 64 66 68 69 70 93
    QUOTESTRING <valString> (314) 35 63 65 67
    TRUEVAL <valString> (315) 31
    FALSEVAL <valString> (316) 32
    INTNUM <valString> (317) 16 33 51 52
    REALNUM <valString> (318) 34
    RETURN (319) 57
    EX (320) 76


Nonterminals, with rules where they appear

    $accept (66)
        on left: 0
    S (67)
        on left: 1 2 3 4
        on right: 0
    comment <valString> (68)
        on left: 5 6
        on right: 2 3 4 38 39 55
    subcabecera <valString> (69)
        on left: 7 8
        on right: 1 2 3 4 8
    cabecera <valString> (70)
        on left: 9 10
        on right: 1 2 3 4
    constdef (71)
        on left: 11 12
        on right: 41
    fvardef <valString> (72)
        on left: 13 14 15 16
        on right: 58
    vardef <valString> (73)
        on left: 17 18 19
        on right: 40
    type <valInt> (74)
        on left: 20 21 22 23 24 25 26 27 28 29 30
        on right: 12 13 14 15 16 17 18 19 38 39 42 43 51 52
    values <valString> (75)
        on left: 31 32 33 34 35
        on right: 11 12 14 18 59 60 94
    preprograma <valString> (76)
        on left: 36 37
        on right: 1 2 3 4 36
    programa <valString> (77)
        on left: 38 39 40 41
        on right: 36 37 40 41
    args <valString> (78)
        on left: 42 43
        on right: 38 42
    lines_program <valString> (79)
        on left: 44 45
        on right: 38 39 44 48 49 51 52 53 54
    line_program <valString> (80)
        on left: 46 47 48 49 50 51 52 53 54 55 56 57 58
        on right: 44 45 50
    array <valString> (81)
        on left: 59 60
        on right: 16 59
    precontentWrite <valString> (82)
        on left: 61 62
        on right: 46
    contentWrite <valString> (83)
        on left: 63 64 65 66 67 68
        on right: 61 62 63 64 65 66
    assignation <valString> (84)
        on left: 69 70
        on right: 47 52
    exp <valString> (85)
        on left: 71 72
        on right: 48 49 51 52 53 54 57 69 70 71 74 76
    term <valString> (86)
        on left: 73 74 75 76
        on right: 71 72
    operand <valString> (87)
        on left: 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92
        on right: 51 56 71
    atom <valString> (88)
        on left: 93 94
        on right: 73 75


State 0

    0 $accept: • S $end
    1 S: • cabecera subcabecera preprograma
    2  | • cabecera comment subcabecera preprograma
    3  | • cabecera subcabecera comment preprograma
    4  | • cabecera comment subcabecera comment preprograma
    9 cabecera: • PROGRAM LOWER STRINGV HIGHER
   10         | • PROGRAM STRINGQUOTE

    PROGRAM  shift, and go to state 1

    S         go to state 2
    cabecera  go to state 3


State 1

    9 cabecera: PROGRAM • LOWER STRINGV HIGHER
   10         | PROGRAM • STRINGQUOTE

    LOWER        shift, and go to state 4
    STRINGQUOTE  shift, and go to state 5


State 2

    0 $accept: S • $end

    $end  shift, and go to state 6


State 3

    1 S: cabecera • subcabecera preprograma
    2  | cabecera • comment subcabecera preprograma
    3  | cabecera • subcabecera comment preprograma
    4  | cabecera • comment subcabecera comment preprograma
    5 comment: • COMMENTLINE
    6        | • MULTILINE
    7 subcabecera: • STRINGV SEMICOLON
    8            | • STRINGV subcabecera

    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8
    STRINGV      shift, and go to state 9

    comment      go to state 10
    subcabecera  go to state 11


State 4

    9 cabecera: PROGRAM LOWER • STRINGV HIGHER

    STRINGV  shift, and go to state 12


State 5

   10 cabecera: PROGRAM STRINGQUOTE •

    $default  reduce using rule 10 (cabecera)


State 6

    0 $accept: S $end •

    $default  accept


State 7

    5 comment: COMMENTLINE •

    $default  reduce using rule 5 (comment)


State 8

    6 comment: MULTILINE •

    $default  reduce using rule 6 (comment)


State 9

    7 subcabecera: • STRINGV SEMICOLON
    7            | STRINGV • SEMICOLON
    8            | • STRINGV subcabecera
    8            | STRINGV • subcabecera

    SEMICOLON  shift, and go to state 13
    STRINGV    shift, and go to state 9

    subcabecera  go to state 14


State 10

    2 S: cabecera comment • subcabecera preprograma
    4  | cabecera comment • subcabecera comment preprograma
    7 subcabecera: • STRINGV SEMICOLON
    8            | • STRINGV subcabecera

    STRINGV  shift, and go to state 9

    subcabecera  go to state 15


State 11

    1 S: cabecera subcabecera • preprograma
    3  | cabecera subcabecera • comment preprograma
    5 comment: • COMMENTLINE
    6        | • MULTILINE
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   36 preprograma: • preprograma programa
   37            | • programa
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   41         | • constdef programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    comment      go to state 29
    constdef     go to state 30
    vardef       go to state 31
    type         go to state 32
    preprograma  go to state 33
    programa     go to state 34


State 12

    9 cabecera: PROGRAM LOWER STRINGV • HIGHER

    HIGHER  shift, and go to state 35


State 13

    7 subcabecera: STRINGV SEMICOLON •

    $default  reduce using rule 7 (subcabecera)


State 14

    8 subcabecera: STRINGV subcabecera •

    $default  reduce using rule 8 (subcabecera)


State 15

    2 S: cabecera comment subcabecera • preprograma
    4  | cabecera comment subcabecera • comment preprograma
    5 comment: • COMMENTLINE
    6        | • MULTILINE
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   36 preprograma: • preprograma programa
   37            | • programa
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   41         | • constdef programa

    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    comment      go to state 36
    constdef     go to state 30
    vardef       go to state 31
    type         go to state 32
    preprograma  go to state 37
    programa     go to state 34


State 16

   12 constdef: CONST • type STRINGV EQ values SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN

    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    type  go to state 38


State 17

   11 constdef: DEFINE • STRINGV values SEMICOLON

    STRINGV  shift, and go to state 39


State 18

   20 type: INTEGER •

    $default  reduce using rule 20 (type)


State 19

   21 type: SHORT •

    $default  reduce using rule 21 (type)


State 20

   22 type: LONG •

    $default  reduce using rule 22 (type)


State 21

   23 type: UNSIGNED_INT •

    $default  reduce using rule 23 (type)


State 22

   24 type: UNSIGNED_SHORT •

    $default  reduce using rule 24 (type)


State 23

   25 type: UNSIGNED_LONG •

    $default  reduce using rule 25 (type)


State 24

   26 type: FLOAT •

    $default  reduce using rule 26 (type)


State 25

   27 type: DOUBLE •

    $default  reduce using rule 27 (type)


State 26

   30 type: BOOLEAN •

    $default  reduce using rule 30 (type)


State 27

   29 type: CHAR •

    $default  reduce using rule 29 (type)


State 28

   28 type: STRING •

    $default  reduce using rule 28 (type)


State 29

    3 S: cabecera subcabecera comment • preprograma
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   36 preprograma: • preprograma programa
   37            | • programa
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   41         | • constdef programa

    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    constdef     go to state 30
    vardef       go to state 31
    type         go to state 32
    preprograma  go to state 40
    programa     go to state 34


State 30

   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   41         | • constdef programa
   41         | constdef • programa

    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    constdef  go to state 30
    vardef    go to state 31
    type      go to state 32
    programa  go to state 41


State 31

   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   40         | vardef • programa
   41         | • constdef programa

    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    constdef  go to state 30
    vardef    go to state 31
    type      go to state 32
    programa  go to state 42


State 32

   17 vardef: type • STRINGV SEMICOLON
   18       | type • STRINGV EQ values SEMICOLON
   19       | type • STRINGV EQ STRINGV SEMICOLON
   38 programa: type • STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | type • STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment

    STRINGV  shift, and go to state 43


State 33

    1 S: cabecera subcabecera preprograma •  [$end]
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   36 preprograma: preprograma • programa
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   41         | • constdef programa

    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    $default  reduce using rule 1 (S)

    constdef  go to state 30
    vardef    go to state 31
    type      go to state 32
    programa  go to state 44


State 34

   37 preprograma: programa •

    $default  reduce using rule 37 (preprograma)


State 35

    9 cabecera: PROGRAM LOWER STRINGV HIGHER •

    $default  reduce using rule 9 (cabecera)


State 36

    4 S: cabecera comment subcabecera comment • preprograma
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   36 preprograma: • preprograma programa
   37            | • programa
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   41         | • constdef programa

    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    constdef     go to state 30
    vardef       go to state 31
    type         go to state 32
    preprograma  go to state 45
    programa     go to state 34


State 37

    2 S: cabecera comment subcabecera preprograma •  [$end]
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   36 preprograma: preprograma • programa
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   41         | • constdef programa

    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    $default  reduce using rule 2 (S)

    constdef  go to state 30
    vardef    go to state 31
    type      go to state 32
    programa  go to state 44


State 38

   12 constdef: CONST type • STRINGV EQ values SEMICOLON

    STRINGV  shift, and go to state 46


State 39

   11 constdef: DEFINE STRINGV • values SEMICOLON
   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING

    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51

    values  go to state 52


State 40

    3 S: cabecera subcabecera comment preprograma •  [$end]
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   36 preprograma: preprograma • programa
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   41         | • constdef programa

    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    $default  reduce using rule 3 (S)

    constdef  go to state 30
    vardef    go to state 31
    type      go to state 32
    programa  go to state 44


State 41

   41 programa: constdef programa •

    $default  reduce using rule 41 (programa)


State 42

   40 programa: vardef programa •

    $default  reduce using rule 40 (programa)


State 43

   17 vardef: type STRINGV • SEMICOLON
   18       | type STRINGV • EQ values SEMICOLON
   19       | type STRINGV • EQ STRINGV SEMICOLON
   38 programa: type STRINGV • LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | type STRINGV • LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment

    EQ         shift, and go to state 53
    LPAREN     shift, and go to state 54
    SEMICOLON  shift, and go to state 55


State 44

   36 preprograma: preprograma programa •

    $default  reduce using rule 36 (preprograma)


State 45

    4 S: cabecera comment subcabecera comment preprograma •  [$end]
   11 constdef: • DEFINE STRINGV values SEMICOLON
   12         | • CONST type STRINGV EQ values SEMICOLON
   17 vardef: • type STRINGV SEMICOLON
   18       | • type STRINGV EQ values SEMICOLON
   19       | • type STRINGV EQ STRINGV SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   36 preprograma: preprograma • programa
   38 programa: • type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | • type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   40         | • vardef programa
   41         | • constdef programa

    CONST           shift, and go to state 16
    DEFINE          shift, and go to state 17
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    $default  reduce using rule 4 (S)

    constdef  go to state 30
    vardef    go to state 31
    type      go to state 32
    programa  go to state 44


State 46

   12 constdef: CONST type STRINGV • EQ values SEMICOLON

    EQ  shift, and go to state 56


State 47

   35 values: QUOTESTRING •

    $default  reduce using rule 35 (values)


State 48

   31 values: TRUEVAL •

    $default  reduce using rule 31 (values)


State 49

   32 values: FALSEVAL •

    $default  reduce using rule 32 (values)


State 50

   33 values: INTNUM •

    $default  reduce using rule 33 (values)


State 51

   34 values: REALNUM •

    $default  reduce using rule 34 (values)


State 52

   11 constdef: DEFINE STRINGV values • SEMICOLON

    SEMICOLON  shift, and go to state 57


State 53

   18 vardef: type STRINGV EQ • values SEMICOLON
   19       | type STRINGV EQ • STRINGV SEMICOLON
   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING

    STRINGV      shift, and go to state 58
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51

    values  go to state 59


State 54

   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   38 programa: type STRINGV LPAREN • args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   39         | type STRINGV LPAREN • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment
   42 args: • type STRINGV COMMA args
   43     | • type STRINGV

    RPAREN          shift, and go to state 60
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    type  go to state 61
    args  go to state 62


State 55

   17 vardef: type STRINGV SEMICOLON •

    $default  reduce using rule 17 (vardef)


State 56

   12 constdef: CONST type STRINGV EQ • values SEMICOLON
   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING

    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51

    values  go to state 63


State 57

   11 constdef: DEFINE STRINGV values SEMICOLON •

    $default  reduce using rule 11 (constdef)


State 58

   19 vardef: type STRINGV EQ STRINGV • SEMICOLON

    SEMICOLON  shift, and go to state 64


State 59

   18 vardef: type STRINGV EQ values • SEMICOLON

    SEMICOLON  shift, and go to state 65


State 60

   39 programa: type STRINGV LPAREN RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment

    OPENCURLYBRACKET  shift, and go to state 66


State 61

   42 args: type • STRINGV COMMA args
   43     | type • STRINGV

    STRINGV  shift, and go to state 67


State 62

   38 programa: type STRINGV LPAREN args • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment

    RPAREN  shift, and go to state 68


State 63

   12 constdef: CONST type STRINGV EQ values • SEMICOLON

    SEMICOLON  shift, and go to state 69


State 64

   19 vardef: type STRINGV EQ STRINGV SEMICOLON •

    $default  reduce using rule 19 (vardef)


State 65

   18 vardef: type STRINGV EQ values SEMICOLON •

    $default  reduce using rule 18 (vardef)


State 66

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   39 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET comment
   44 lines_program: • lines_program line_program
   45              | • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE           shift, and go to state 70
    FOR             shift, and go to state 71
    DO              shift, and go to state 72
    WRITE           shift, and go to state 73
    IF              shift, and go to state 74
    ELSE            shift, and go to state 75
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28
    STRINGV         shift, and go to state 76
    RETURN          shift, and go to state 77

    comment        go to state 78
    fvardef        go to state 79
    type           go to state 80
    lines_program  go to state 81
    line_program   go to state 82
    assignation    go to state 83


State 67

   42 args: type STRINGV • COMMA args
   43     | type STRINGV •  [RPAREN]

    COMMA  shift, and go to state 84

    $default  reduce using rule 43 (args)


State 68

   38 programa: type STRINGV LPAREN args RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment

    OPENCURLYBRACKET  shift, and go to state 85


State 69

   12 constdef: CONST type STRINGV EQ values SEMICOLON •

    $default  reduce using rule 12 (constdef)


State 70

   54 line_program: WHILE • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 86


State 71

   51 line_program: FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR • LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 87


State 72

   53 line_program: DO • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 88


State 73

   46 line_program: WRITE • LOWER LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 89


State 74

   48 line_program: IF • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 90


State 75

   49 line_program: ELSE • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | ELSE • OPENCURLYBRACKET line_program CLOSECURLYBRACKET

    IF                shift, and go to state 91
    OPENCURLYBRACKET  shift, and go to state 92


State 76

   56 line_program: STRINGV • operand SEMICOLON
   69 assignation: STRINGV • EQ exp SEMICOLON
   70            | STRINGV • EQ exp
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND     shift, and go to state 93
    OR      shift, and go to state 94
    LOWER   shift, and go to state 95
    HIGHER  shift, and go to state 96
    PLUS    shift, and go to state 97
    HYPHEN  shift, and go to state 98
    PROD    shift, and go to state 99
    DIV     shift, and go to state 100
    DIVINT  shift, and go to state 101
    MOD     shift, and go to state 102
    EQ      shift, and go to state 103

    operand  go to state 104


State 77

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   57 line_program: RETURN • exp SEMICOLON
   71 exp: • exp operand term
   72    | • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    values  go to state 109
    exp     go to state 110
    term    go to state 111
    atom    go to state 112


State 78

   55 line_program: comment •

    $default  reduce using rule 55 (line_program)


State 79

   58 line_program: fvardef •

    $default  reduce using rule 58 (line_program)


State 80

   13 fvardef: type • STRINGV SEMICOLON
   14        | type • STRINGV EQ values SEMICOLON
   15        | type • STRINGV EQ STRINGV SEMICOLON
   16        | type • STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    STRINGV  shift, and go to state 113


State 81

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   39 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET comment
   44 lines_program: lines_program • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE              shift, and go to state 70
    FOR                shift, and go to state 71
    DO                 shift, and go to state 72
    WRITE              shift, and go to state 73
    IF                 shift, and go to state 74
    ELSE               shift, and go to state 75
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    SHORT              shift, and go to state 19
    LONG               shift, and go to state 20
    UNSIGNED_INT       shift, and go to state 21
    UNSIGNED_SHORT     shift, and go to state 22
    UNSIGNED_LONG      shift, and go to state 23
    FLOAT              shift, and go to state 24
    DOUBLE             shift, and go to state 25
    CLOSECURLYBRACKET  shift, and go to state 114
    BOOLEAN            shift, and go to state 26
    CHAR               shift, and go to state 27
    STRING             shift, and go to state 28
    STRINGV            shift, and go to state 76
    RETURN             shift, and go to state 77

    comment       go to state 78
    fvardef       go to state 79
    type          go to state 80
    line_program  go to state 115
    assignation   go to state 83


State 82

   45 lines_program: line_program •

    $default  reduce using rule 45 (lines_program)


State 83

   47 line_program: assignation •

    $default  reduce using rule 47 (line_program)


State 84

   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   42 args: • type STRINGV COMMA args
   42     | type STRINGV COMMA • args
   43     | • type STRINGV

    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    type  go to state 61
    args  go to state 116


State 85

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   38 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET comment
   44 lines_program: • lines_program line_program
   45              | • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE           shift, and go to state 70
    FOR             shift, and go to state 71
    DO              shift, and go to state 72
    WRITE           shift, and go to state 73
    IF              shift, and go to state 74
    ELSE            shift, and go to state 75
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28
    STRINGV         shift, and go to state 76
    RETURN          shift, and go to state 77

    comment        go to state 78
    fvardef        go to state 79
    type           go to state 80
    lines_program  go to state 117
    line_program   go to state 82
    assignation    go to state 83


State 86

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   54 line_program: WHILE LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   71 exp: • exp operand term
   72    | • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    values  go to state 109
    exp     go to state 118
    term    go to state 111
    atom    go to state 112


State 87

   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   51 line_program: FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN • type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28

    type  go to state 119


State 88

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: • lines_program line_program
   45              | • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   53             | DO OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE           shift, and go to state 70
    FOR             shift, and go to state 71
    DO              shift, and go to state 72
    WRITE           shift, and go to state 73
    IF              shift, and go to state 74
    ELSE            shift, and go to state 75
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28
    STRINGV         shift, and go to state 76
    RETURN          shift, and go to state 77

    comment        go to state 78
    fvardef        go to state 79
    type           go to state 80
    lines_program  go to state 120
    line_program   go to state 82
    assignation    go to state 83


State 89

   46 line_program: WRITE LOWER • LOWER precontentWrite SEMICOLON

    LOWER  shift, and go to state 121


State 90

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   48 line_program: IF LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   71 exp: • exp operand term
   72    | • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    values  go to state 109
    exp     go to state 122
    term    go to state 111
    atom    go to state 112


State 91

   49 line_program: ELSE IF • LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    LPAREN  shift, and go to state 123


State 92

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   50             | ELSE OPENCURLYBRACKET • line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE           shift, and go to state 70
    FOR             shift, and go to state 71
    DO              shift, and go to state 72
    WRITE           shift, and go to state 73
    IF              shift, and go to state 74
    ELSE            shift, and go to state 75
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28
    STRINGV         shift, and go to state 76
    RETURN          shift, and go to state 77

    comment       go to state 78
    fvardef       go to state 79
    type          go to state 80
    line_program  go to state 124
    assignation   go to state 83


State 93

   90 operand: AND •

    $default  reduce using rule 90 (operand)


State 94

   92 operand: OR •

    $default  reduce using rule 92 (operand)


State 95

   85 operand: LOWER •  [HYPHEN, LPAREN, RPAREN, SEMICOLON, STRINGV, QUOTESTRING, TRUEVAL, FALSEVAL, INTNUM, REALNUM, EX]
   87        | LOWER • EQ

    EQ  shift, and go to state 125

    $default  reduce using rule 85 (operand)


State 96

   86 operand: HIGHER •  [HYPHEN, LPAREN, RPAREN, SEMICOLON, STRINGV, QUOTESTRING, TRUEVAL, FALSEVAL, INTNUM, REALNUM, EX]
   88        | HIGHER • EQ

    EQ  shift, and go to state 126

    $default  reduce using rule 86 (operand)


State 97

   77 operand: PLUS •  [HYPHEN, LPAREN, RPAREN, SEMICOLON, STRINGV, QUOTESTRING, TRUEVAL, FALSEVAL, INTNUM, REALNUM, EX]
   78        | PLUS • EQ
   91        | PLUS • PLUS

    PLUS  shift, and go to state 127
    EQ    shift, and go to state 128

    $default  reduce using rule 77 (operand)


State 98

   79 operand: HYPHEN •  [HYPHEN, LPAREN, RPAREN, SEMICOLON, STRINGV, QUOTESTRING, TRUEVAL, FALSEVAL, INTNUM, REALNUM, EX]
   80        | HYPHEN • EQ

    EQ  shift, and go to state 129

    $default  reduce using rule 79 (operand)


State 99

   81 operand: PROD •

    $default  reduce using rule 81 (operand)


State 100

   82 operand: DIV •

    $default  reduce using rule 82 (operand)


State 101

   83 operand: DIVINT •

    $default  reduce using rule 83 (operand)


State 102

   84 operand: MOD •

    $default  reduce using rule 84 (operand)


State 103

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   69 assignation: STRINGV EQ • exp SEMICOLON
   70            | STRINGV EQ • exp
   71 exp: • exp operand term
   72    | • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   89 operand: EQ •  [RPAREN, SEMICOLON]
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    $default  reduce using rule 89 (operand)

    values  go to state 109
    exp     go to state 130
    term    go to state 111
    atom    go to state 112


State 104

   56 line_program: STRINGV operand • SEMICOLON

    SEMICOLON  shift, and go to state 131


State 105

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   75 term: HYPHEN • atom
   93 atom: • STRINGV
   94     | • values

    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51

    values  go to state 109
    atom    go to state 132


State 106

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   71 exp: • exp operand term
   72    | • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   74     | LPAREN • exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    values  go to state 109
    exp     go to state 133
    term    go to state 111
    atom    go to state 112


State 107

   93 atom: STRINGV •

    $default  reduce using rule 93 (atom)


State 108

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   71 exp: • exp operand term
   72    | • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   76     | EX • exp
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    values  go to state 109
    exp     go to state 134
    term    go to state 111
    atom    go to state 112


State 109

   94 atom: values •

    $default  reduce using rule 94 (atom)


State 110

   57 line_program: RETURN exp • SEMICOLON
   71 exp: exp • operand term
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND        shift, and go to state 93
    OR         shift, and go to state 94
    LOWER      shift, and go to state 95
    HIGHER     shift, and go to state 96
    PLUS       shift, and go to state 97
    HYPHEN     shift, and go to state 98
    PROD       shift, and go to state 99
    DIV        shift, and go to state 100
    DIVINT     shift, and go to state 101
    MOD        shift, and go to state 102
    EQ         shift, and go to state 135
    SEMICOLON  shift, and go to state 136

    operand  go to state 137


State 111

   72 exp: term •

    $default  reduce using rule 72 (exp)


State 112

   73 term: atom •

    $default  reduce using rule 73 (term)


State 113

   13 fvardef: type STRINGV • SEMICOLON
   14        | type STRINGV • EQ values SEMICOLON
   15        | type STRINGV • EQ STRINGV SEMICOLON
   16        | type STRINGV • LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    EQ            shift, and go to state 138
    LSQUAREPAREN  shift, and go to state 139
    SEMICOLON     shift, and go to state 140


State 114

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   39 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • comment

    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8

    comment  go to state 141


State 115

   44 lines_program: lines_program line_program •

    $default  reduce using rule 44 (lines_program)


State 116

   42 args: type STRINGV COMMA args •

    $default  reduce using rule 42 (args)


State 117

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   38 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET comment
   44 lines_program: lines_program • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE              shift, and go to state 70
    FOR                shift, and go to state 71
    DO                 shift, and go to state 72
    WRITE              shift, and go to state 73
    IF                 shift, and go to state 74
    ELSE               shift, and go to state 75
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    SHORT              shift, and go to state 19
    LONG               shift, and go to state 20
    UNSIGNED_INT       shift, and go to state 21
    UNSIGNED_SHORT     shift, and go to state 22
    UNSIGNED_LONG      shift, and go to state 23
    FLOAT              shift, and go to state 24
    DOUBLE             shift, and go to state 25
    CLOSECURLYBRACKET  shift, and go to state 142
    BOOLEAN            shift, and go to state 26
    CHAR               shift, and go to state 27
    STRING             shift, and go to state 28
    STRINGV            shift, and go to state 76
    RETURN             shift, and go to state 77

    comment       go to state 78
    fvardef       go to state 79
    type          go to state 80
    line_program  go to state 115
    assignation   go to state 83


State 118

   54 line_program: WHILE LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   71 exp: exp • operand term
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND     shift, and go to state 93
    OR      shift, and go to state 94
    LOWER   shift, and go to state 95
    HIGHER  shift, and go to state 96
    PLUS    shift, and go to state 97
    HYPHEN  shift, and go to state 98
    PROD    shift, and go to state 99
    DIV     shift, and go to state 100
    DIVINT  shift, and go to state 101
    MOD     shift, and go to state 102
    EQ      shift, and go to state 135
    RPAREN  shift, and go to state 143

    operand  go to state 137


State 119

   51 line_program: FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type • STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    STRINGV  shift, and go to state 144


State 120

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: lines_program • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   53             | DO OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE              shift, and go to state 70
    FOR                shift, and go to state 71
    DO                 shift, and go to state 72
    WRITE              shift, and go to state 73
    IF                 shift, and go to state 74
    ELSE               shift, and go to state 75
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    SHORT              shift, and go to state 19
    LONG               shift, and go to state 20
    UNSIGNED_INT       shift, and go to state 21
    UNSIGNED_SHORT     shift, and go to state 22
    UNSIGNED_LONG      shift, and go to state 23
    FLOAT              shift, and go to state 24
    DOUBLE             shift, and go to state 25
    CLOSECURLYBRACKET  shift, and go to state 145
    BOOLEAN            shift, and go to state 26
    CHAR               shift, and go to state 27
    STRING             shift, and go to state 28
    STRINGV            shift, and go to state 76
    RETURN             shift, and go to state 77

    comment       go to state 78
    fvardef       go to state 79
    type          go to state 80
    line_program  go to state 115
    assignation   go to state 83


State 121

   46 line_program: WRITE LOWER LOWER • precontentWrite SEMICOLON
   61 precontentWrite: • contentWrite
   62                | • contentWrite LOWER LOWER ENDL
   63 contentWrite: • contentWrite LOWER LOWER QUOTESTRING
   64             | • contentWrite LOWER LOWER STRINGV
   65             | • contentWrite PLUS QUOTESTRING
   66             | • contentWrite PLUS STRINGV
   67             | • QUOTESTRING
   68             | • STRINGV

    STRINGV      shift, and go to state 146
    QUOTESTRING  shift, and go to state 147

    precontentWrite  go to state 148
    contentWrite     go to state 149


State 122

   48 line_program: IF LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   71 exp: exp • operand term
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND     shift, and go to state 93
    OR      shift, and go to state 94
    LOWER   shift, and go to state 95
    HIGHER  shift, and go to state 96
    PLUS    shift, and go to state 97
    HYPHEN  shift, and go to state 98
    PROD    shift, and go to state 99
    DIV     shift, and go to state 100
    DIVINT  shift, and go to state 101
    MOD     shift, and go to state 102
    EQ      shift, and go to state 135
    RPAREN  shift, and go to state 150

    operand  go to state 137


State 123

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   49 line_program: ELSE IF LPAREN • exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   71 exp: • exp operand term
   72    | • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    values  go to state 109
    exp     go to state 151
    term    go to state 111
    atom    go to state 112


State 124

   50 line_program: ELSE OPENCURLYBRACKET line_program • CLOSECURLYBRACKET

    CLOSECURLYBRACKET  shift, and go to state 152


State 125

   87 operand: LOWER EQ •

    $default  reduce using rule 87 (operand)


State 126

   88 operand: HIGHER EQ •

    $default  reduce using rule 88 (operand)


State 127

   91 operand: PLUS PLUS •

    $default  reduce using rule 91 (operand)


State 128

   78 operand: PLUS EQ •

    $default  reduce using rule 78 (operand)


State 129

   80 operand: HYPHEN EQ •

    $default  reduce using rule 80 (operand)


State 130

   69 assignation: STRINGV EQ exp • SEMICOLON
   70            | STRINGV EQ exp •  [WHILE, FOR, DO, WRITE, IF, ELSE, COMMENTLINE, MULTILINE, RPAREN, INTEGER, SHORT, LONG, UNSIGNED_INT, UNSIGNED_SHORT, UNSIGNED_LONG, FLOAT, DOUBLE, CLOSECURLYBRACKET, BOOLEAN, CHAR, STRING, STRINGV, RETURN]
   71 exp: exp • operand term
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND        shift, and go to state 93
    OR         shift, and go to state 94
    LOWER      shift, and go to state 95
    HIGHER     shift, and go to state 96
    PLUS       shift, and go to state 97
    HYPHEN     shift, and go to state 98
    PROD       shift, and go to state 99
    DIV        shift, and go to state 100
    DIVINT     shift, and go to state 101
    MOD        shift, and go to state 102
    EQ         shift, and go to state 135
    SEMICOLON  shift, and go to state 153

    $default  reduce using rule 70 (assignation)

    operand  go to state 137


State 131

   56 line_program: STRINGV operand SEMICOLON •

    $default  reduce using rule 56 (line_program)


State 132

   75 term: HYPHEN atom •

    $default  reduce using rule 75 (term)


State 133

   71 exp: exp • operand term
   74 term: LPAREN exp • RPAREN
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND     shift, and go to state 93
    OR      shift, and go to state 94
    LOWER   shift, and go to state 95
    HIGHER  shift, and go to state 96
    PLUS    shift, and go to state 97
    HYPHEN  shift, and go to state 98
    PROD    shift, and go to state 99
    DIV     shift, and go to state 100
    DIVINT  shift, and go to state 101
    MOD     shift, and go to state 102
    EQ      shift, and go to state 135
    RPAREN  shift, and go to state 154

    operand  go to state 137


State 134

   71 exp: exp • operand term
   76 term: EX exp •  [WHILE, FOR, DO, WRITE, IF, ELSE, AND, OR, LOWER, HIGHER, PLUS, HYPHEN, PROD, DIV, DIVINT, MOD, EQ, COMMENTLINE, MULTILINE, RPAREN, SEMICOLON, INTEGER, SHORT, LONG, UNSIGNED_INT, UNSIGNED_SHORT, UNSIGNED_LONG, FLOAT, DOUBLE, CLOSECURLYBRACKET, BOOLEAN, CHAR, STRING, STRINGV, RETURN]
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    $default  reduce using rule 76 (term)

    operand  go to state 137

    Conflict between rule 76 and token AND resolved as reduce (AND < EX).
    Conflict between rule 76 and token OR resolved as reduce (OR < EX).
    Conflict between rule 76 and token LOWER resolved as reduce (LOWER < EX).
    Conflict between rule 76 and token HIGHER resolved as reduce (HIGHER < EX).
    Conflict between rule 76 and token PLUS resolved as reduce (PLUS < EX).
    Conflict between rule 76 and token HYPHEN resolved as reduce (HYPHEN < EX).
    Conflict between rule 76 and token PROD resolved as reduce (PROD < EX).
    Conflict between rule 76 and token DIV resolved as reduce (DIV < EX).
    Conflict between rule 76 and token DIVINT resolved as reduce (DIVINT < EX).
    Conflict between rule 76 and token MOD resolved as reduce (MOD < EX).
    Conflict between rule 76 and token EQ resolved as reduce (EQ < EX).


State 135

   89 operand: EQ •

    $default  reduce using rule 89 (operand)


State 136

   57 line_program: RETURN exp SEMICOLON •

    $default  reduce using rule 57 (line_program)


State 137

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   71 exp: exp operand • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    values  go to state 109
    term    go to state 155
    atom    go to state 112


State 138

   14 fvardef: type STRINGV EQ • values SEMICOLON
   15        | type STRINGV EQ • STRINGV SEMICOLON
   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING

    STRINGV      shift, and go to state 156
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51

    values  go to state 157


State 139

   16 fvardef: type STRINGV LSQUAREPAREN • INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    INTNUM  shift, and go to state 158


State 140

   13 fvardef: type STRINGV SEMICOLON •

    $default  reduce using rule 13 (fvardef)


State 141

   39 programa: type STRINGV LPAREN RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment •

    $default  reduce using rule 39 (programa)


State 142

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   38 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • comment

    COMMENTLINE  shift, and go to state 7
    MULTILINE    shift, and go to state 8

    comment  go to state 159


State 143

   54 line_program: WHILE LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 160


State 144

   51 line_program: FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type STRINGV • EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    EQ  shift, and go to state 161


State 145

   53 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET • WHILE LPAREN exp RPAREN SEMICOLON

    WHILE  shift, and go to state 162


State 146

   68 contentWrite: STRINGV •

    $default  reduce using rule 68 (contentWrite)


State 147

   67 contentWrite: QUOTESTRING •

    $default  reduce using rule 67 (contentWrite)


State 148

   46 line_program: WRITE LOWER LOWER precontentWrite • SEMICOLON

    SEMICOLON  shift, and go to state 163


State 149

   61 precontentWrite: contentWrite •  [SEMICOLON]
   62                | contentWrite • LOWER LOWER ENDL
   63 contentWrite: contentWrite • LOWER LOWER QUOTESTRING
   64             | contentWrite • LOWER LOWER STRINGV
   65             | contentWrite • PLUS QUOTESTRING
   66             | contentWrite • PLUS STRINGV

    LOWER  shift, and go to state 164
    PLUS   shift, and go to state 165

    $default  reduce using rule 61 (precontentWrite)


State 150

   48 line_program: IF LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 166


State 151

   49 line_program: ELSE IF LPAREN exp • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   71 exp: exp • operand term
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND     shift, and go to state 93
    OR      shift, and go to state 94
    LOWER   shift, and go to state 95
    HIGHER  shift, and go to state 96
    PLUS    shift, and go to state 97
    HYPHEN  shift, and go to state 98
    PROD    shift, and go to state 99
    DIV     shift, and go to state 100
    DIVINT  shift, and go to state 101
    MOD     shift, and go to state 102
    EQ      shift, and go to state 135
    RPAREN  shift, and go to state 167

    operand  go to state 137


State 152

   50 line_program: ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET •

    $default  reduce using rule 50 (line_program)


State 153

   69 assignation: STRINGV EQ exp SEMICOLON •

    $default  reduce using rule 69 (assignation)


State 154

   74 term: LPAREN exp RPAREN •

    $default  reduce using rule 74 (term)


State 155

   71 exp: exp operand term •

    $default  reduce using rule 71 (exp)


State 156

   15 fvardef: type STRINGV EQ STRINGV • SEMICOLON

    SEMICOLON  shift, and go to state 168


State 157

   14 fvardef: type STRINGV EQ values • SEMICOLON

    SEMICOLON  shift, and go to state 169


State 158

   16 fvardef: type STRINGV LSQUAREPAREN INTNUM • RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    RSQUAREPAREN  shift, and go to state 170


State 159

   38 programa: type STRINGV LPAREN args RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET comment •

    $default  reduce using rule 38 (programa)


State 160

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: • lines_program line_program
   45              | • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   54             | WHILE LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE           shift, and go to state 70
    FOR             shift, and go to state 71
    DO              shift, and go to state 72
    WRITE           shift, and go to state 73
    IF              shift, and go to state 74
    ELSE            shift, and go to state 75
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28
    STRINGV         shift, and go to state 76
    RETURN          shift, and go to state 77

    comment        go to state 78
    fvardef        go to state 79
    type           go to state 80
    lines_program  go to state 171
    line_program   go to state 82
    assignation    go to state 83


State 161

   51 line_program: FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type STRINGV EQ • INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    INTNUM  shift, and go to state 172


State 162

   53 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE • LPAREN exp RPAREN SEMICOLON

    LPAREN  shift, and go to state 173


State 163

   46 line_program: WRITE LOWER LOWER precontentWrite SEMICOLON •

    $default  reduce using rule 46 (line_program)


State 164

   62 precontentWrite: contentWrite LOWER • LOWER ENDL
   63 contentWrite: contentWrite LOWER • LOWER QUOTESTRING
   64             | contentWrite LOWER • LOWER STRINGV

    LOWER  shift, and go to state 174


State 165

   65 contentWrite: contentWrite PLUS • QUOTESTRING
   66             | contentWrite PLUS • STRINGV

    STRINGV      shift, and go to state 175
    QUOTESTRING  shift, and go to state 176


State 166

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: • lines_program line_program
   45              | • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | IF LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE           shift, and go to state 70
    FOR             shift, and go to state 71
    DO              shift, and go to state 72
    WRITE           shift, and go to state 73
    IF              shift, and go to state 74
    ELSE            shift, and go to state 75
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28
    STRINGV         shift, and go to state 76
    RETURN          shift, and go to state 77

    comment        go to state 78
    fvardef        go to state 79
    type           go to state 80
    lines_program  go to state 177
    line_program   go to state 82
    assignation    go to state 83


State 167

   49 line_program: ELSE IF LPAREN exp RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 178


State 168

   15 fvardef: type STRINGV EQ STRINGV SEMICOLON •

    $default  reduce using rule 15 (fvardef)


State 169

   14 fvardef: type STRINGV EQ values SEMICOLON •

    $default  reduce using rule 14 (fvardef)


State 170

   16 fvardef: type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN • EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    EQ  shift, and go to state 179


State 171

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: lines_program • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   54             | WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE              shift, and go to state 70
    FOR                shift, and go to state 71
    DO                 shift, and go to state 72
    WRITE              shift, and go to state 73
    IF                 shift, and go to state 74
    ELSE               shift, and go to state 75
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    SHORT              shift, and go to state 19
    LONG               shift, and go to state 20
    UNSIGNED_INT       shift, and go to state 21
    UNSIGNED_SHORT     shift, and go to state 22
    UNSIGNED_LONG      shift, and go to state 23
    FLOAT              shift, and go to state 24
    DOUBLE             shift, and go to state 25
    CLOSECURLYBRACKET  shift, and go to state 180
    BOOLEAN            shift, and go to state 26
    CHAR               shift, and go to state 27
    STRING             shift, and go to state 28
    STRINGV            shift, and go to state 76
    RETURN             shift, and go to state 77

    comment       go to state 78
    fvardef       go to state 79
    type          go to state 80
    line_program  go to state 115
    assignation   go to state 83


State 172

   51 line_program: FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type STRINGV EQ INTNUM • SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    SEMICOLON  shift, and go to state 181


State 173

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   53 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN • exp RPAREN SEMICOLON
   71 exp: • exp operand term
   72    | • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    values  go to state 109
    exp     go to state 182
    term    go to state 111
    atom    go to state 112


State 174

   62 precontentWrite: contentWrite LOWER LOWER • ENDL
   63 contentWrite: contentWrite LOWER LOWER • QUOTESTRING
   64             | contentWrite LOWER LOWER • STRINGV

    ENDL         shift, and go to state 183
    STRINGV      shift, and go to state 184
    QUOTESTRING  shift, and go to state 185


State 175

   66 contentWrite: contentWrite PLUS STRINGV •

    $default  reduce using rule 66 (contentWrite)


State 176

   65 contentWrite: contentWrite PLUS QUOTESTRING •

    $default  reduce using rule 65 (contentWrite)


State 177

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: lines_program • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   48             | IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE              shift, and go to state 70
    FOR                shift, and go to state 71
    DO                 shift, and go to state 72
    WRITE              shift, and go to state 73
    IF                 shift, and go to state 74
    ELSE               shift, and go to state 75
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    SHORT              shift, and go to state 19
    LONG               shift, and go to state 20
    UNSIGNED_INT       shift, and go to state 21
    UNSIGNED_SHORT     shift, and go to state 22
    UNSIGNED_LONG      shift, and go to state 23
    FLOAT              shift, and go to state 24
    DOUBLE             shift, and go to state 25
    CLOSECURLYBRACKET  shift, and go to state 186
    BOOLEAN            shift, and go to state 26
    CHAR               shift, and go to state 27
    STRING             shift, and go to state 28
    STRINGV            shift, and go to state 76
    RETURN             shift, and go to state 77

    comment       go to state 78
    fvardef       go to state 79
    type          go to state 80
    line_program  go to state 115
    assignation   go to state 83


State 178

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: • lines_program line_program
   45              | • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE           shift, and go to state 70
    FOR             shift, and go to state 71
    DO              shift, and go to state 72
    WRITE           shift, and go to state 73
    IF              shift, and go to state 74
    ELSE            shift, and go to state 75
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28
    STRINGV         shift, and go to state 76
    RETURN          shift, and go to state 77

    comment        go to state 78
    fvardef        go to state 79
    type           go to state 80
    lines_program  go to state 187
    line_program   go to state 82
    assignation    go to state 83


State 179

   16 fvardef: type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ • OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON

    OPENCURLYBRACKET  shift, and go to state 188


State 180

   54 line_program: WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 54 (line_program)


State 181

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   51 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON • exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   71 exp: • exp operand term
   72    | • term
   73 term: • atom
   74     | • LPAREN exp RPAREN
   75     | • HYPHEN atom
   76     | • EX exp
   93 atom: • STRINGV
   94     | • values

    HYPHEN       shift, and go to state 105
    LPAREN       shift, and go to state 106
    STRINGV      shift, and go to state 107
    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51
    EX           shift, and go to state 108

    values  go to state 109
    exp     go to state 189
    term    go to state 111
    atom    go to state 112


State 182

   53 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp • RPAREN SEMICOLON
   71 exp: exp • operand term
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND     shift, and go to state 93
    OR      shift, and go to state 94
    LOWER   shift, and go to state 95
    HIGHER  shift, and go to state 96
    PLUS    shift, and go to state 97
    HYPHEN  shift, and go to state 98
    PROD    shift, and go to state 99
    DIV     shift, and go to state 100
    DIVINT  shift, and go to state 101
    MOD     shift, and go to state 102
    EQ      shift, and go to state 135
    RPAREN  shift, and go to state 190

    operand  go to state 137


State 183

   62 precontentWrite: contentWrite LOWER LOWER ENDL •

    $default  reduce using rule 62 (precontentWrite)


State 184

   64 contentWrite: contentWrite LOWER LOWER STRINGV •

    $default  reduce using rule 64 (contentWrite)


State 185

   63 contentWrite: contentWrite LOWER LOWER QUOTESTRING •

    $default  reduce using rule 63 (contentWrite)


State 186

   48 line_program: IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 48 (line_program)


State 187

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: lines_program • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE              shift, and go to state 70
    FOR                shift, and go to state 71
    DO                 shift, and go to state 72
    WRITE              shift, and go to state 73
    IF                 shift, and go to state 74
    ELSE               shift, and go to state 75
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    SHORT              shift, and go to state 19
    LONG               shift, and go to state 20
    UNSIGNED_INT       shift, and go to state 21
    UNSIGNED_SHORT     shift, and go to state 22
    UNSIGNED_LONG      shift, and go to state 23
    FLOAT              shift, and go to state 24
    DOUBLE             shift, and go to state 25
    CLOSECURLYBRACKET  shift, and go to state 191
    BOOLEAN            shift, and go to state 26
    CHAR               shift, and go to state 27
    STRING             shift, and go to state 28
    STRINGV            shift, and go to state 76
    RETURN             shift, and go to state 77

    comment       go to state 78
    fvardef       go to state 79
    type          go to state 80
    line_program  go to state 115
    assignation   go to state 83


State 188

   16 fvardef: type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET • array CLOSECURLYBRACKET SEMICOLON
   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   59 array: • values COMMA array
   60      | • values

    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51

    values  go to state 192
    array   go to state 193


State 189

   51 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp • SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp • SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   71 exp: exp • operand term
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND        shift, and go to state 93
    OR         shift, and go to state 94
    LOWER      shift, and go to state 95
    HIGHER     shift, and go to state 96
    PLUS       shift, and go to state 97
    HYPHEN     shift, and go to state 98
    PROD       shift, and go to state 99
    DIV        shift, and go to state 100
    DIVINT     shift, and go to state 101
    MOD        shift, and go to state 102
    EQ         shift, and go to state 135
    SEMICOLON  shift, and go to state 194

    operand  go to state 137


State 190

   53 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN • SEMICOLON

    SEMICOLON  shift, and go to state 195


State 191

   49 line_program: ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 49 (line_program)


State 192

   59 array: values • COMMA array
   60      | values •  [CLOSECURLYBRACKET]

    COMMA  shift, and go to state 196

    $default  reduce using rule 60 (array)


State 193

   16 fvardef: type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array • CLOSECURLYBRACKET SEMICOLON

    CLOSECURLYBRACKET  shift, and go to state 197


State 194

   51 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON • STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON • assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    STRINGV  shift, and go to state 198

    assignation  go to state 199


State 195

   53 line_program: DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON •

    $default  reduce using rule 53 (line_program)


State 196

   31 values: • TRUEVAL
   32       | • FALSEVAL
   33       | • INTNUM
   34       | • REALNUM
   35       | • QUOTESTRING
   59 array: • values COMMA array
   59      | values COMMA • array
   60      | • values

    QUOTESTRING  shift, and go to state 47
    TRUEVAL      shift, and go to state 48
    FALSEVAL     shift, and go to state 49
    INTNUM       shift, and go to state 50
    REALNUM      shift, and go to state 51

    values  go to state 192
    array   go to state 200


State 197

   16 fvardef: type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET • SEMICOLON

    SEMICOLON  shift, and go to state 201


State 198

   51 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV • operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   69 assignation: STRINGV • EQ exp SEMICOLON
   70            | STRINGV • EQ exp
   77 operand: • PLUS
   78        | • PLUS EQ
   79        | • HYPHEN
   80        | • HYPHEN EQ
   81        | • PROD
   82        | • DIV
   83        | • DIVINT
   84        | • MOD
   85        | • LOWER
   86        | • HIGHER
   87        | • LOWER EQ
   88        | • HIGHER EQ
   89        | • EQ
   90        | • AND
   91        | • PLUS PLUS
   92        | • OR

    AND     shift, and go to state 93
    OR      shift, and go to state 94
    LOWER   shift, and go to state 95
    HIGHER  shift, and go to state 96
    PLUS    shift, and go to state 97
    HYPHEN  shift, and go to state 98
    PROD    shift, and go to state 99
    DIV     shift, and go to state 100
    DIVINT  shift, and go to state 101
    MOD     shift, and go to state 102
    EQ      shift, and go to state 103

    operand  go to state 202


State 199

   52 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 203


State 200

   59 array: values COMMA array •

    $default  reduce using rule 59 (array)


State 201

   16 fvardef: type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON •

    $default  reduce using rule 16 (fvardef)


State 202

   51 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand • RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    RPAREN  shift, and go to state 204


State 203

   52 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 205


State 204

   51 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN • OPENCURLYBRACKET lines_program CLOSECURLYBRACKET

    OPENCURLYBRACKET  shift, and go to state 206


State 205

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: • lines_program line_program
   45              | • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE           shift, and go to state 70
    FOR             shift, and go to state 71
    DO              shift, and go to state 72
    WRITE           shift, and go to state 73
    IF              shift, and go to state 74
    ELSE            shift, and go to state 75
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28
    STRINGV         shift, and go to state 76
    RETURN          shift, and go to state 77

    comment        go to state 78
    fvardef        go to state 79
    type           go to state 80
    lines_program  go to state 207
    line_program   go to state 82
    assignation    go to state 83


State 206

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: • lines_program line_program
   45              | • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   51             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET • lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE           shift, and go to state 70
    FOR             shift, and go to state 71
    DO              shift, and go to state 72
    WRITE           shift, and go to state 73
    IF              shift, and go to state 74
    ELSE            shift, and go to state 75
    COMMENTLINE     shift, and go to state 7
    MULTILINE       shift, and go to state 8
    INTEGER         shift, and go to state 18
    SHORT           shift, and go to state 19
    LONG            shift, and go to state 20
    UNSIGNED_INT    shift, and go to state 21
    UNSIGNED_SHORT  shift, and go to state 22
    UNSIGNED_LONG   shift, and go to state 23
    FLOAT           shift, and go to state 24
    DOUBLE          shift, and go to state 25
    BOOLEAN         shift, and go to state 26
    CHAR            shift, and go to state 27
    STRING          shift, and go to state 28
    STRINGV         shift, and go to state 76
    RETURN          shift, and go to state 77

    comment        go to state 78
    fvardef        go to state 79
    type           go to state 80
    lines_program  go to state 208
    line_program   go to state 82
    assignation    go to state 83


State 207

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: lines_program • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   52             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE              shift, and go to state 70
    FOR                shift, and go to state 71
    DO                 shift, and go to state 72
    WRITE              shift, and go to state 73
    IF                 shift, and go to state 74
    ELSE               shift, and go to state 75
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    SHORT              shift, and go to state 19
    LONG               shift, and go to state 20
    UNSIGNED_INT       shift, and go to state 21
    UNSIGNED_SHORT     shift, and go to state 22
    UNSIGNED_LONG      shift, and go to state 23
    FLOAT              shift, and go to state 24
    DOUBLE             shift, and go to state 25
    CLOSECURLYBRACKET  shift, and go to state 209
    BOOLEAN            shift, and go to state 26
    CHAR               shift, and go to state 27
    STRING             shift, and go to state 28
    STRINGV            shift, and go to state 76
    RETURN             shift, and go to state 77

    comment       go to state 78
    fvardef       go to state 79
    type          go to state 80
    line_program  go to state 115
    assignation   go to state 83


State 208

    5 comment: • COMMENTLINE
    6        | • MULTILINE
   13 fvardef: • type STRINGV SEMICOLON
   14        | • type STRINGV EQ values SEMICOLON
   15        | • type STRINGV EQ STRINGV SEMICOLON
   16        | • type STRINGV LSQUAREPAREN INTNUM RSQUAREPAREN EQ OPENCURLYBRACKET array CLOSECURLYBRACKET SEMICOLON
   20 type: • INTEGER
   21     | • SHORT
   22     | • LONG
   23     | • UNSIGNED_INT
   24     | • UNSIGNED_SHORT
   25     | • UNSIGNED_LONG
   26     | • FLOAT
   27     | • DOUBLE
   28     | • STRING
   29     | • CHAR
   30     | • BOOLEAN
   44 lines_program: lines_program • line_program
   46 line_program: • WRITE LOWER LOWER precontentWrite SEMICOLON
   47             | • assignation
   48             | • IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   49             | • ELSE IF LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   50             | • ELSE OPENCURLYBRACKET line_program CLOSECURLYBRACKET
   51             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   51             | FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program • CLOSECURLYBRACKET
   52             | • FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   53             | • DO OPENCURLYBRACKET lines_program CLOSECURLYBRACKET WHILE LPAREN exp RPAREN SEMICOLON
   54             | • WHILE LPAREN exp RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET
   55             | • comment
   56             | • STRINGV operand SEMICOLON
   57             | • RETURN exp SEMICOLON
   58             | • fvardef
   69 assignation: • STRINGV EQ exp SEMICOLON
   70            | • STRINGV EQ exp

    WHILE              shift, and go to state 70
    FOR                shift, and go to state 71
    DO                 shift, and go to state 72
    WRITE              shift, and go to state 73
    IF                 shift, and go to state 74
    ELSE               shift, and go to state 75
    COMMENTLINE        shift, and go to state 7
    MULTILINE          shift, and go to state 8
    INTEGER            shift, and go to state 18
    SHORT              shift, and go to state 19
    LONG               shift, and go to state 20
    UNSIGNED_INT       shift, and go to state 21
    UNSIGNED_SHORT     shift, and go to state 22
    UNSIGNED_LONG      shift, and go to state 23
    FLOAT              shift, and go to state 24
    DOUBLE             shift, and go to state 25
    CLOSECURLYBRACKET  shift, and go to state 210
    BOOLEAN            shift, and go to state 26
    CHAR               shift, and go to state 27
    STRING             shift, and go to state 28
    STRINGV            shift, and go to state 76
    RETURN             shift, and go to state 77

    comment       go to state 78
    fvardef       go to state 79
    type          go to state 80
    line_program  go to state 115
    assignation   go to state 83


State 209

   52 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON assignation RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 52 (line_program)


State 210

   51 line_program: FOR LPAREN type STRINGV EQ INTNUM SEMICOLON exp SEMICOLON STRINGV operand RPAREN OPENCURLYBRACKET lines_program CLOSECURLYBRACKET •

    $default  reduce using rule 51 (line_program)
